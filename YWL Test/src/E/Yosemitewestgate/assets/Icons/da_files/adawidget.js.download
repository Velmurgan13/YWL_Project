var body2 = document.getElementsByTagName("BODY")[0];
var adaWidgetsDiv = document.getElementById("ada_enable_toolbar");
var dd = new Date().getTime() / 1000;
var nTime = Math.floor(dd);
var cssurls2 = widgetHostUrl+'adawidget/assets/widgetscss.css?'+nTime;
var hostUrl2 = widgetHostUrl+'adawidget/';
var link2 = document.createElement('link');
var mozzoom = 0;
var fontzoom = 0;
var wordspacing = 0;
var letterspacing = 0;
var lineheight = 0;
var domObject,domeObjectlength;
link2.setAttribute('rel', 'stylesheet');
link2.setAttribute('type', 'text/css');
link2.setAttribute('href', cssurls2);
document.getElementsByTagName('head')[0].appendChild(link2);

var cssurls3 = widgetHostUrl+'adawidget/assets/trycolorwheel.css?'+nTime;
var link3 = document.createElement('link');
link3.setAttribute('rel', 'stylesheet');
link3.setAttribute('type', 'text/css');
link3.setAttribute('href', cssurls3);
document.getElementsByTagName('head')[0].appendChild(link3);

/*var cssurls4 = widgetHostUrl+'adawidget/assets/jquery.mCustomScrollbar.css?'+nTime;
var link4 = document.createElement('link');
link4.setAttribute('rel', 'stylesheet');
link4.setAttribute('type', 'text/css');
link4.setAttribute('href', cssurls4);
document.getElementsByTagName('head')[0].appendChild(link4);*/

var scripturls1 = widgetHostUrl+'adawidget/assets/w3color.js?'+nTime;
var scriptload1 = document.createElement('script');
scriptload1.setAttribute('type', 'text/javascript');
scriptload1.setAttribute('src', scripturls1);
document.getElementsByTagName('head')[0].appendChild(scriptload1);

/*var scripturls2 = widgetHostUrl+'adawidget/assets/jquery.mCustomScrollbar.min.js?'+nTime;
var scriptload2 = document.createElement('script');
scriptload2.setAttribute('type', 'text/javascript');
scriptload2.setAttribute('src', scripturls2);
document.getElementsByTagName('head')[0].appendChild(scriptload2);*/

var lightestbgcolor = [];
var lightbgcolor = [];
var darklightbgcolor = [];
var darkbgcolor = [];
var darkestbgcolor = [];
var lightestfontcolor = [];
var lightfontcolor = [];
var darklightfontcolor = [];
var darkfontcolor = [];
var darkestfontcolor = [];

var lightestbdrtopcolor = [];
var lightbdrtopcolor = [];
var darklightbdrtopcolor = [];
var darkbdrtopcolor = [];
var darkestbdrtopcolor = [];

var lightestbdrrightcolor = [];
var lightbdrrightcolor = [];
var darklightbdrrightcolor = [];
var darkbdrrightcolor = [];
var darkestbdrrightcolor = [];

var lightestbdrbottomcolor = [];
var lightbdrbottomcolor = [];
var darklightbdrbottomcolor = [];
var darkbdrbottomcolor = [];
var darkestbdrbottomcolor = [];

var lightestbdrleftcolor = [];
var lightbdrleftcolor = [];
var darklightbdrleftcolor = [];
var darkbdrleftcolor = [];
var darkestbdrleftcolor = [];

var adabgcolorelements = [];
var adafontcolorelements = [];
var adawordspaceelements = [];
var adabdrtopcolorelements = [];
var adabdrrightcolorelements = [];
var adabdrleftcolorelements = [];
var adabdrbottomcolorelements = [];

var adatextfontcolorelements = [];
var adaheadingfontcolorelements = [];

var changesrulecols = 18;
var activeMonochrome = 0;

var url  = window.location.href; //website;
/* Reading text one by one start*/

var ua = window.navigator.userAgent;
var msie = ua.indexOf("MSIE ");
var operab = ua.indexOf("OP");
if (msie > 0 || operab > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) // If Internet Explorer, return version number
{
    
} else { 
    var synthwdt = window.speechSynthesis;
if (synthwdt.speaking) {
    synthwdt.cancel();
}
}
var readingOn = 0;
var speachTextobject = [];
var speachElementobject = [];
var mainwordtext = [];
var speachInt = 0;
var wordInt = 0;
var intwdt=0;
let timerwdt = null;
let readingwdt = false;
var readingElements = '';
var adaloader;
var adamodal;
var closedAdawdmodel;
// flag for keyboard nav
var keyboard_nav = false;
var cookieListInnsightAda = checkInnsightAdaCookie();
/*var materialcssurls2 = 'https://fonts.googleapis.com/icon?family=Material+Icons';
var link3 = document.createElement('link');
link3.setAttribute('rel', 'stylesheet');
link3.setAttribute('type', 'text/css');
link3.setAttribute('href', materialcssurls2);
document.getElementsByTagName('head')[0].appendChild(link3);*/
if(adaWidgetsDiv){
    body2.removeChild(adaWidgetsDiv);
}
var url = window.location.href;
var domain = getDomain(url); 
var domain1 = getDomain(website);
if(domain1 == 'hotels-g.com'){
var pathArray = window.location.pathname.split('/');
    if(pathArray['1'] != 'san-francisco'){
       //throw new Error("Sorry, you are not authorized to use the ADA WCAG Tray powered by INNsight");    
    }
} else {
if(domain != 'reztrip.com' && domain != 'travelclick.com' && domain != 'webrez.com'){
if(domain != domain1){
   throw new Error("Sorry, you are not authorized to use the ADA WCAG Tray powered by INNsight");
} } }
if(domain=='myshopify.com'){
    var loc = new URL(window.location.href);
    var dbloc = new URL(website);
    if(loc.host!=dbloc.host){
        throw new Error("Sorry, you are not authorized to use the ADA WCAG Tray powered by INNsight");
    }
}
setTimeout(function(){
var e1 = document.createElement("div");
e1.setAttribute("id", 'ada_enable_toolbar');
var appendHtml = '';
var atop = '';
var bottom = '';
var left= '';
var right= '';

/*if(mobileview == 'yes'){
	var trayclass = 'righttray';
	var tray_position = 'right';
} else {
}
var trayclass = 'bottomtray';
*/
//alert(mobileview);
//alert(tray_position);
if(tray_position == '' || tray_position == 'bottom')                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
    var trayclass = 'bottomtray';
}
if(tray_position == 'left')                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
    var trayclass = 'lefttray';
}
if(tray_position == 'right')                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
    var trayclass = 'righttray';
}
/*if(mobileview == 'yes'){
	var tray_position = 'bottom';
	var trayclass = 'bottomtray';
}*/

if(position_distance == ''){
    position_distance = '100';
}
if(position ==''){
    var left = '0';
    var bottom = '90px';
    var positiontext = 'left:84px;border-radius:0 4px 4px 0;';
}
if(position =='top_left'){
    var left= '0';
    var atop = position_distance+'px';
    var positiontext = 'left:84px;border-radius:0 4px 4px 0;';
}
if(position =='top_right'){
    var right = '0';
    var atop = position_distance+'px';
    var positiontext = 'right:84px;border-radius:4px 0 0 4px;';
}
if(position =='bottom_left'){
    var left = '0';
    var bottom = position_distance+'px';
    var positiontext = 'left:84px;border-radius:0 4px 4px 0;';
}
if(position =='bottom_right'){
    var right = '0';
    var bottom = position_distance+'px';
    var positiontext = 'right:84px;border-radius:4px 0 0 4px;';
}
if(ada_shield_icon === "" || ada_shield_icon === "undefined"){
    ada_shield_icon = "adaicon8.svg";
}
if(ada_shield_bar === "" || ada_shield_bar === "undefined"){
    ada_shield_bar = "adaicon8.svg";
}
if(ada_shield_mobile === "" || ada_shield_mobile === "undefined"){
    ada_shield_mobile = "adaicon8.svg";
}
if(ada_shield_loader === "" || ada_shield_loader === "undefined"){
    ada_shield_loader = "loadingnew_final.gif";
}

if(ada_widget_status != '0') {
appendHtml +='<div data-reactroot="" class="'+trayclass+'1"><div id="ada_enable_toolbar_content" class="adaEnableToolbarContent '+trayclass+'">';
appendHtml +='<div class="ada_enable_toolbar_notice_top" role="note">You can use the keyboard arrows to navigate between the component buttons</div>';


appendHtml +='<span id="ada_enable_toolbar_trigger" class="ada_enable_toolbar_trigger" onclick="enabletoolbarslide(this);" aria-flowto="ada_enable_toolbar_buttons" aria-pressed="false" aria-label="Toggle Enable">\n\
<span class="adafixedicon ada-img-hover" style="right:'+right+';bottom:'+bottom+';left:'+left+';top:'+atop+';position:fixed;"><img src="'+hostUrl2+'assets/images/'+ada_shield_icon+'" id="ada-icon" width="60" height="59" alt="ada-widget-assecibilityicon ADAnonexs" class="ada-widget-assecibilityicon ADAnonexs "/> <img src="'+hostUrl2+'assets/images/'+ada_shield_icon+'" id="ada-icon1" width="60" height="59" class="ada-widget-assecibilityicon ADA-none-lgmd" alt="ada-widget-assecibilityicon ADAnonexs" style="display:none;"/></span></span>'

if(tray_position == 'left' || tray_position == 'right'){
	
appendHtml +='<div id="ada_enable_toolbar_buttons" role="toolbar" aria-labeledby="ada_enable_toolbar_trigger"><div class="ADA-PR" id="ada-tray"><div class="ATA-tray" ><div class="ada-P pull-left"><a class="top_poweredby" href="https://www.ada-tray.com" target="blank" class="pull-left"><img width="120" height="43" src="https://www.ada-tray.com/application/views/img/top-logo.svg" alt="ADA Tray® by INNsight" title="ADA Tray® by INNsight" class="MW100"></a></div>'

appendHtml +='<div id="ada-tray" class="esc"><span class="ADA-pointer"><img onclick="disabletoolbar();" src="'+hostUrl2+'assets/images/esc1.png" width="60" height="24" alt="Minimize Tray" title="Minimize Tray" class="wsc-icons-width ADAnonexs "/><img onclick="disabletoolbar();" src="'+hostUrl2+'assets/images/esc1.png" width="60" height="24" alt="Minimize Tray" title="Minimize Tray" class="wsc-icons-width ADA-none-lgmd"/></span></div>';

/*appendHtml +='<div class="resettopada PR"><a id="topresetada" title="Click here to reset the presentation to default" href="javascript:void(0);" onclick="adaresetbutton(this);"><img style="margin-top: 1px" src="'+hostUrl2+'assets/images/reset-button.svg" alt=" Reset Button"/><div class="ADA-shift-DN" style="left:12px; top:-8px"><span class="ADA-shift">Shift+V</span></div></a></div>';

appendHtml +='<div class="help PR"><a title="Help" id="helpview" onclick="helpview();"><img src="'+hostUrl2+'assets/images/help.png" alt="Help"/><div class="ADA-shift-DN" style="left:12px; top:-8px"><span class="ADA-shift">Shift+?</span></div></a></div>';*/


//appendHtml +='<a title="Click here to reset the presentation to default" class="PR adaicons-top ada-none-xssm ML10 pull-right" id="resetbutton" onclick="adaresetbutton(this);" status="false" href="javascript:void(0);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img style="margin-top: 6px" src="'+hostUrl2+'assets/images/reset-button.svg" alt=" Reset Button"/><span class="ADA-none-lgmd" style="font-size: 10px !important;">(Shift + V To Activate)</span></a>';

appendHtml +='<div class="flexbox">';

if(keyboard_nav1 != '0'){
appendHtml +='<a title="Operable: Click this button to navigate this website with your keyboard" class="adawidget-boxbg adaicons adawidget-boxbg-padding" id="enable_keyboard_nav" onclick="enableKeyboardNav(this);" status="false" href="javascript:void(0);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+A</span></div><img style="" src="'+hostUrl2+'assets/images/navigate-with-keyboard.svg" width="28" height="46" alt=" Keyboard Nav"/><span class="adawidget-boxtext ADA-text-center"> Keyboard Nav </span><span class="ADAF11 PT5"> (Shift + A To Activate)</span><!--span class="ADA-none-lgmd" style="font-size: 10px !important;">(Shift + A To Activate)</span--></a>';
}

appendHtml +='<a title="Click here to reset the presentation to default" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="resetbutton" href="javascript:void(0);" onclick="adaresetbutton();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+B</span></div><img src="'+hostUrl2+'assets/images/reset-button.svg" width="28" height="46" alt="Reset Button"/> <span class="adawidget-boxtext ADA-text-center">Reset Button</span></a> ';

appendHtml +='<a title="Help" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="helpview" onclick="helpview();" href="javascript:void(0);" > <div class="ADA-shift-DN"><span class="ADA-shift">Shift+?</span></div><img src="'+hostUrl2+'assets/images/help.svg" width="28" height="46" alt="Help"/> <span class="adawidget-boxtext ADA-text-center">Help Button</span></a> ';

appendHtml +='</div><div class="clearfix"></div></div></div><div class="all_links"><div class="ada-links"><div class="col-lg-12 content_adjust clearfix '+trayclass+'1 ">CONTENT & DISPLAY ADJUSTMENTS<span class="arrowdown"></span></div><div class="flexbox">';

if(remove_images != '0'){
appendHtml +='<a title="Distinguishable: Click this button to remove images" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaRemoveImages" href="javascript:void(0);" onclick="adaRemoveImages();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+C</span></div><img src="'+hostUrl2+'assets/images/Hide-Image.svg" width="28" height="46" alt="Remove Images"/> <span class="adawidget-boxtext ADA-text-center">Remove Images</span></a>';
}

if(listen != '0'){
appendHtml +='<a title="Read Content On Page Aloud" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="readtext" href="javascript:void(0);" onclick="startReading();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+D</span></div><img src="'+hostUrl2+'assets/images/listen.svg" width="28" height="46" alt="Listen"/> <span class="adawidget-boxtext ADA-text-center">Listen</span></a>';
}

if(disable_animations != '0'){
appendHtml +='<a title="Distinguishable: Click this button to disable  animations" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaStopAnimations" href="javascript:void(0);" onclick="adaStopAnimations();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+E</span></div><img src="'+hostUrl2+'assets/images/Animation-Freezer.svg" width="28" height="46" alt="Disable Animations"/> <span class="adawidget-boxtext ADA-text-center">Disable Animations</span></a>';
}
//appendHtml +='<a class="adawidget-boxbg adaicons" href="javascript:void(0);" accesskey="Z"> <img src="'+hostUrl2+'assets/images/stop-blinks.png" alt="Stop Blinks"/> <span class="adawidget-boxtext">Stop Blinks</span></a>';
if(increase_fonts != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase size of all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="increasefont" href="javascript:void(0);" onclick="resizeText(1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+F</span></div><img src="'+hostUrl2+'assets/images/increasefonts.svg" width="28" height="46" alt="Increase Fonts"/> <span class="adawidget-boxtext ADA-text-center">Increase Fonts</span><span id="fontincreaselevelbox" class="fontincreaselevelbox"><strong></strong></span></a>';
}

if(decrease_fonts != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease size of all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="decreasefont" href="javascript:void(0);" onclick="resizeText(-1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+G</span></div><img src="'+hostUrl2+'assets/images/decreasefonts.svg" width="28" height="46" alt="Decrease Fonts"/> <span class="adawidget-boxtext ADA-text-center"> Decrease Fonts</span><span id="fontdecreaselevelbox" class="fontdecreaselevelbox"></span></a>';
}
if(reset_font != '0'){
appendHtml +='<a title="Perceivable: Click this button to reset size of all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="readablefonts" href="javascript:void(0);" onclick="readablefonts();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+H</span></div><img src="'+hostUrl2+'assets/images/reset-font.svg" width="28" height="46" alt="Reset Font"/><span class="adawidget-boxtext ADA-text-center">Reset Font</span><span class="blankbelow"></span></a>';
}

if(increasezoom != '0'){
appendHtml +='<a title="Distinguishable: Click this button to increase zoom" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="increasezoom" href="javascript:void(0);" onclick="adazoom(1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+I</span></div><img src="'+hostUrl2+'assets/images/zoom-increase.svg" width="28" height="46" alt="Zoom Increase"/> <span class="adawidget-boxtext ADA-text-center">Zoom Increase</span><span id="zoomincreaselevelbox" class="zoomincreaselevelbox"></span></a>';
}
if(decreasezoom != '0'){
appendHtml +='<a title="Distinguishable: Click this button to decrease zoom" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="decreasezoom" href="javascript:void(0);" onclick="adazoom(-1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+J</span></div><img src="'+hostUrl2+'assets/images/zoom-decrease.svg" width="28" height="46" alt="Zoom Decrease"/> <span class="adawidget-boxtext ADA-text-center">Zoom Decrease</span><span id="zoomdecreaselevelbox" class="zoomdecreaselevelbox"></span></a>';
}

if(increase_line_height != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase line height" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaIncreaseLineHeight" href="javascript:void(0);" onclick="adaIncreaseLineHeight();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+K</span></div><img src="'+hostUrl2+'assets/images/Adjust-word-hig.svg" width="28" height="46" alt="Increase Line Height"/> <span class="adawidget-boxtext ADA-text-center">Increase Line Height</span><span id="lineheightincreaselevelbox" class="lineheightincreaselevelbox"></span></a>';
}
if(decrease_line_height != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease line height" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaDecreaseLineHeight" href="javascript:void(0);" onclick="adaDecreaseLineHeight();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+L</span></div><img src="'+hostUrl2+'assets/images/decrease-line-height.svg" width="28" height="46" alt="Decrease Line Height"/> <span class="adawidget-boxtext ADA-text-center">Decrease Line Height</span><span id="lineheightdecreaselevelbox" class="lineheightdecreaselevelbox"></span></a>';
}
if(increase_word_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase word spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaIncreaseWordSpacing" href="javascript:void(0);" onclick="adaIncreaseWordSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+M</span></div><img src="'+hostUrl2+'assets/images/Adjust-Word-space.svg" width="28" height="46" alt="Increase Word Spacing"/> <span class="adawidget-boxtext ADA-text-center">Increase Word Spacing</span><span id="wordspacingincreaselevelbox" class="wordspacingincreaselevelbox"></span></a>';
}
if(decrease_word_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease word spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaDecreaseWordSpacing" href="javascript:void(0);" onclick="adaDecreaseWordSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+N</span></div><img src="'+hostUrl2+'assets/images/Adjust-Word-space-d.svg" width="28" height="46" alt="Decrease Word Spacing"/> <span class="adawidget-boxtext ADA-text-center">Decrease Word Spacing</span><span id="wordspacingdecreaselevelbox" class="wordspacingdecreaselevelbox"></span></a>';
}
if(increase_letter_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase letter spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaIncreaseLetterSpacing" href="javascript:void(0);" onclick="adaIncreaseLetterSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+O</span></div><img src="'+hostUrl2+'assets/images/Adjust-letter-spacing.svg" width="28" height="46" alt="Increase Letter Spacing"/> <span class="adawidget-boxtext ADA-text-center">Increase Letter Spacing</span><span id="letterspacingincreaselevelbox" class="letterspacingincreaselevelbox"></span></a>';
}
if(decrease_letter_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease letter spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaDecreaseLetterSpacing" href="javascript:void(0);" onclick="adaDecreaseLetterSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+P</span></div><img src="'+hostUrl2+'assets/images/Decrease-Letter-Spacing-Decrease-Letter-Spacing.svg" width="28" height="46" alt="Decrease Letter Spacing"/> <span class="adawidget-boxtext ADA-text-center">Decrease Letter Spacing</span><span id="letterspacingdecreaselevelbox" class="letterspacingdecreaselevelbox"></span></a>';
}
if(align_center != '0'){
appendHtml +='<a title="Perceivable: Click this button to align center" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextaligncenter" href="javascript:void(0);" onclick="adatextaligncenter();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+Q</span></div><img src="'+hostUrl2+'assets/images/Align-Center.svg" width="28" height="46" alt="Text Align Center"/> <span class="adawidget-boxtext ADA-text-center">Align Center</span></a>';
}
if(align_left != '0'){
appendHtml +='<a title="Perceivable: Click this button to align left" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextalignleft" href="javascript:void(0);" onclick="adatextalignleft();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+R</span></div><img src="'+hostUrl2+'assets/images/Align-Left.svg" width="28" height="46" alt="Text Align Left"/> <span class="adawidget-boxtext ADA-text-center">Align Left</span></a>';
}
if(align_right != '0'){
appendHtml +='<a title="Perceivable: Click this button to align right" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextalignright" href="javascript:void(0);" onclick="adatextalignright();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+S</span></div><img src="'+hostUrl2+'assets/images/Align-Right.svg" width="28" height="46" alt="Text Align Right"/> <span class="adawidget-boxtext ADA-text-center">Align Right</span></a>';
}
if(align_justify != '0'){
appendHtml +='<a title="Perceivable: Click this button to align justify" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextalignjustify" href="javascript:void(0);" onclick="adatextalignjustify();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+T</span></div><img src="'+hostUrl2+'assets/images/Justify-Align.svg" width="28" height="46" alt="Text Align Justify"/> <span class="adawidget-boxtext ADA-text-center">Align Justify</span></a>';
}

if(bold_fonts != '0'){
appendHtml +='<a title="Perceivable: Click this button to boldface all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enableboldfonts" href="javascript:void(0);" onclick="adaenableboldfonts();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+U</span></div> <img src="'+hostUrl2+'assets/images/bold.svg" width="28" height="46" alt="Bold Fonts"/> <span class="adawidget-boxtext ADA-text-center">Bold Fonts</span></a>';
}

if(highlight_titles != '0'){
appendHtml +='<a title="Understandable: Click this button to highlight all page titles" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="highlightstitles" href="javascript:void(0);" onclick="adahighighlightstitles();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img src="'+hostUrl2+'assets/images/highlights-titles.svg" width="28" height="46" alt="Highlights Titles"/> <span class="adawidget-boxtext ADA-text-center">Highlights Titles</span></a>';
}

if(highlight_links != '0'){
appendHtml +='<a title="Navigable: Click this button to highlight all page links" class="adawidget-boxbg adaicons adawidget-boxbg-padding" id="highlightslinks" href="javascript:void(0);" onclick="adahighlightslinks();" accesskey="Z"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+W</span></div><img src="'+hostUrl2+'assets/images/highlightslinks.svg" width="28" height="46" alt="Highlights Links"/> <span class="adawidget-boxtext ADA-text-center">Highlights Links</span></a>';
}

if(black_cursor != '0'){
appendHtml +='<a title="Navigable: Click this button to show large black mouse cursor" class="adawidget-boxbg adaicons adawidget-boxbg-padding DNXSSM"  id="blackcursor" href="javascript:void(0);" onclick="adablackcursor();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+X</span></div><img src="'+hostUrl2+'assets/images/black-cursor.svg" width="28" height="46" alt="Black Cursor"/> <span class="adawidget-boxtext ADA-text-center">Black Cursor</span></a>';
}

if(white_cursor != '0'){
appendHtml +='<a title="Navigable: Click this button to show large white mouse cursor" class="adawidget-boxbg adaicons adawidget-boxbg-padding DNXSSM"  id="whitecursor" href="javascript:void(0);" onclick="adawhitecursor();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+Y</span></div><img src="'+hostUrl2+'assets/images/white-cursor.svg" width="28" height="46" alt="White Cursor"/> <span class="adawidget-boxtext ADA-text-center">White Cursor</span></a>';
}

if(reader_view != '0'){
appendHtml +='<a title="Understandable: Click this button to invoke a reader view" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="readerview" href="javascript:void(0);" onclick="readerView();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+Z</span></div><img src="'+hostUrl2+'assets/images/reader-view.svg" width="28" height="46" alt="Reader View"/> <span class="adawidget-boxtext ADA-text-center">Reader Viewer</span></a>';
}

//appendHtml +='<a class="adawidget-boxbg adaicons"  id="enabletootlip" href="javascript:void(0);" onclick="enabletootlip();"> <img src="'+hostUrl2+'assets/images/tooltip.png" alt="Tooltip"/> <span class="adawidget-boxtext">Tooltip</span></a>';
if(tooltip_visible != '0'){
appendHtml +='<a title="Navigable: Click this button to highlight all tooltips" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enabletootlip" href="javascript:void(0);" onclick="enabletootlip();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+0</span></div><img src="'+hostUrl2+'assets/images/tooltipvisible.svg" width="28" height="46" alt="Tooltip Visible"/> <span class="adawidget-boxtext ADA-text-center">Tooltip Visible</span></a>';
}

appendHtml +='</div><div class="clearfix"></div></div>';

appendHtml +='<div class="ada-links"><div class="col-lg-12  content_adjust '+trayclass+'1 ">COLOR ADJUSTMENTS<span class="arrowdown"></span></div><div class="flexbox PR">';
if(mono_chrome != '0'){
    appendHtml +='<a title="Distinguishable: Click this button to change website to a monochromatic color scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablemonocromes" href="javascript:void(0);" onclick="adaenablemonocromes();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+1</span></div><img src="'+hostUrl2+'assets/images/monochrome.svg" width="28" height="46" alt="Mono Chrome"/>  <span class="adawidget-boxtext ADA-text-center">Mono Chrome</span></a>';
    appendHtml +='<div id="monochromecolors" class="" style="width:225px;">';
    appendHtml +='<span onclick="closedcolormonochrombx()" class="closedwhealbox" style="cursor:pointyer;position:absolute;right:6px;top:0px;font-size:20px;"><img src="'+hostUrl2+'assets/images/esc.svg" width="60" height="24" alt="close"/> </span><p>Click on the wheel colors:</p>';
    appendHtml +='<canvas id="adawhealcanvas" width="100" height="100" style="cursor: pointer;">Your browser does not support the canvas element.</canvas>';
    appendHtml +='<div id="adaslidecontainer">';
    appendHtml +='<p class="text-left MB0"><strong>Contrast</strong></p><p class="clearfix"><label for="adasatval" style="display:none;">adasatval</label><span class="pull-left PR5 PL5" onclick="satlightdecreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/minus.svg" width="15" height="15" alt="Minu"/></span><input type="range" min="40" max="100" oninput="satlight()" id="adasatval" value="100" class="adainputslider"><span class="pull-left PR5 PL5" onclick="satlightincreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/plus.svg" width="15" height="15" alt="Plus"/></span></p>';
    appendHtml +='<p class="text-left MB0"><strong>Brightness</strong></p><p class="clearfix"><label for="adalightval" style="display:none;">adalightval</label><span class="pull-left PR5 PL5"  onclick="adasatlightdecreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/minus.svg" width="15" height="15" alt="Minus"/></span><input type="range" min="60" max="140" oninput="satlight()" id="adalightval" value="100" class="adainputslider adainputslider-sun"><span class="pull-left PR5 PL5" onclick="adalightincreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/plus.svg" width="15" height="15" alt="Plus"/></span></p>';  
appendHtml +='</div></div>';	
}

if(gray_scale != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website to a gray scale scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablegrayscale" href="javascript:void(0);" onclick="adaenablegrayscale();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+2</span></div><img src="'+hostUrl2+'assets/images/gray-scale.svg" width="28" height="46" alt="Gray Scale"/> <span class="adawidget-boxtext ADA-text-center">Gray Scale</span></a>';
}

var appendColorHtml ='<span class="close_color" onclick="closedcolortextbx()"><img src="'+hostUrl2+'assets/images/esc.svg" width="15" height="15" alt="Change Title Color"/></span><span class="bcPicker-color adatextcolor_000000" onclick="adawidgetchangetextcolor(this);" code="#000000" style="background-color: rgb(0, 0, 0);"></span>';
appendColorHtml  +='<span class="bcPicker-color adatextcolor_993300" onclick="adawidgetchangetextcolor(this);" code="#993300" style="background-color: rgb(153, 51, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_333300" onclick="adawidgetchangetextcolor(this);" code="#333300" style="background-color: rgb(51, 51, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_000080" onclick="adawidgetchangetextcolor(this);" code="#000080" style="background-color: rgb(0, 0, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_333399" onclick="adawidgetchangetextcolor(this);" code="#333399" style="background-color: rgb(51, 51, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_333333" onclick="adawidgetchangetextcolor(this);" code="#333333" style="background-color: rgb(51, 51, 51);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_800000" onclick="adawidgetchangetextcolor(this);" code="#800000" style="background-color: rgb(128, 0, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF6600" onclick="adawidgetchangetextcolor(this);" code="#FF6600" style="background-color: rgb(255, 102, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_808000" onclick="adawidgetchangetextcolor(this);" code="#808000" style="background-color: rgb(128, 128, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_008000" onclick="adawidgetchangetextcolor(this);" code="#008000" style="background-color: rgb(0, 128, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_008080" onclick="adawidgetchangetextcolor(this);" code="#008080" style="background-color: rgb(0, 128, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_0000FF" onclick="adawidgetchangetextcolor(this);" code="#0000FF" style="background-color: rgb(0, 0, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_666699" onclick="adawidgetchangetextcolor(this);" code="#666699" style="background-color: rgb(102, 102, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_808080" onclick="adawidgetchangetextcolor(this);" code="#808080" style="background-color: rgb(128, 128, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF0000" onclick="adawidgetchangetextcolor(this);" code="#FF0000" style="background-color: rgb(255, 0, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF9900" onclick="adawidgetchangetextcolor(this);" code="#FF9900" style="background-color: rgb(255, 153, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_99CC00" onclick="adawidgetchangetextcolor(this);" code="#99CC00" style="background-color: rgb(153, 204, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_339966" onclick="adawidgetchangetextcolor(this);" code="#339966" style="background-color: rgb(51, 153, 102);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_33CCCC" onclick="adawidgetchangetextcolor(this);" code="#33CCCC" style="background-color: rgb(51, 204, 204);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_3366FF" onclick="adawidgetchangetextcolor(this);" code="#3366FF" style="background-color: rgb(51, 102, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_800080" onclick="adawidgetchangetextcolor(this);" code="#800080" style="background-color: rgb(128, 0, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_999999" onclick="adawidgetchangetextcolor(this);" code="#999999" style="background-color: rgb(153, 153, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF00FF" onclick="adawidgetchangetextcolor(this);" code="#FF00FF" style="background-color: rgb(255, 0, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFCC00" onclick="adawidgetchangetextcolor(this);" code="#FFCC00" style="background-color: rgb(255, 204, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFFF00" onclick="adawidgetchangetextcolor(this);" code="#FFFF00" style="background-color: rgb(255, 255, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_00FF00" onclick="adawidgetchangetextcolor(this);" code="#00FF00" style="background-color: rgb(0, 255, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_00FFFF" onclick="adawidgetchangetextcolor(this);" code="#00FFFF" style="background-color: rgb(0, 255, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_00CCFF" onclick="adawidgetchangetextcolor(this);" code="#00CCFF" style="background-color: rgb(0, 204, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_993366" onclick="adawidgetchangetextcolor(this);" code="#993366" style="background-color: rgb(153, 51, 102);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_C0C0C0" onclick="adawidgetchangetextcolor(this);" code="#C0C0C0" style="background-color: rgb(192, 192, 192);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF99CC" onclick="adawidgetchangetextcolor(this);" code="#FF99CC" style="background-color: rgb(255, 153, 204);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFCC99" onclick="adawidgetchangetextcolor(this);" code="#FFCC99" style="background-color: rgb(255, 204, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFFF99" onclick="adawidgetchangetextcolor(this);" code="#FFFF99" style="background-color: rgb(255, 255, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_CCFFFF" onclick="adawidgetchangetextcolor(this);" code="#CCFFFF" style="background-color: rgb(204, 255, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_99CCFF" onclick="adawidgetchangetextcolor(this);" code="#99CCFF" style="background-color: rgb(153, 204, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_ffffff" onclick="adawidgetchangetextcolor(this);" code="#ffffff" style="background-color: rgb(255, 255, 255);"></span>';

var appendColorHtml2 ='<span class="close_color" onclick="closedcolortextbx()"><img src="'+hostUrl2+'assets/images/esc.svg" width="15" height="15" alt="Change Title Color"/></span><span class="bcPicker-color adaheadcolor_000000" onclick="adawidgetchangeheadcolor(this);" code="#000000" style="background-color: rgb(0, 0, 0);"></span>';
appendColorHtml2  +='<span class="bcPicker-color adaheadcolor_993300" onclick="adawidgetchangeheadcolor(this);" code="#993300" style="background-color: rgb(153, 51, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adatheadcolor_333300" onclick="adawidgetchangeheadcolor(this);" code="#333300" style="background-color: rgb(51, 51, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_000080" onclick="adawidgetchangeheadcolor(this);" code="#000080" style="background-color: rgb(0, 0, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_333399" onclick="adawidgetchangeheadcolor(this);" code="#333399" style="background-color: rgb(51, 51, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_333333" onclick="adawidgetchangeheadcolor(this);" code="#333333" style="background-color: rgb(51, 51, 51);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_800000" onclick="adawidgetchangeheadcolor(this);" code="#800000" style="background-color: rgb(128, 0, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF6600" onclick="adawidgetchangeheadcolor(this);" code="#FF6600" style="background-color: rgb(255, 102, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_808000" onclick="adawidgetchangeheadcolor(this);" code="#808000" style="background-color: rgb(128, 128, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_008000" onclick="adawidgetchangeheadcolor(this);" code="#008000" style="background-color: rgb(0, 128, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_008080" onclick="adawidgetchangeheadcolor(this);" code="#008080" style="background-color: rgb(0, 128, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_0000FF" onclick="adawidgetchangeheadcolor(this);" code="#0000FF" style="background-color: rgb(0, 0, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_666699" onclick="adawidgetchangeheadcolor(this);" code="#666699" style="background-color: rgb(102, 102, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_808080" onclick="adawidgetchangeheadcolor(this);" code="#808080" style="background-color: rgb(128, 128, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF0000" onclick="adawidgetchangeheadcolor(this);" code="#FF0000" style="background-color: rgb(255, 0, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF9900" onclick="adawidgetchangeheadcolor(this);" code="#FF9900" style="background-color: rgb(255, 153, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_99CC00" onclick="adawidgetchangeheadcolor(this);" code="#99CC00" style="background-color: rgb(153, 204, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_339966" onclick="adawidgetchangeheadcolor(this);" code="#339966" style="background-color: rgb(51, 153, 102);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_33CCCC" onclick="adawidgetchangeheadcolor(this);" code="#33CCCC" style="background-color: rgb(51, 204, 204);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_3366FF" onclick="adawidgetchangeheadcolor(this);" code="#3366FF" style="background-color: rgb(51, 102, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_800080" onclick="adawidgetchangeheadcolor(this);" code="#800080" style="background-color: rgb(128, 0, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_999999" onclick="adawidgetchangeheadcolor(this);" code="#999999" style="background-color: rgb(153, 153, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF00FF" onclick="adawidgetchangeheadcolor(this);" code="#FF00FF" style="background-color: rgb(255, 0, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFCC00" onclick="adawidgetchangeheadcolor(this);" code="#FFCC00" style="background-color: rgb(255, 204, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFFF00" onclick="adawidgetchangeheadcolor(this);" code="#FFFF00" style="background-color: rgb(255, 255, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_00FF00" onclick="adawidgetchangeheadcolor(this);" code="#00FF00" style="background-color: rgb(0, 255, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_00FFFF" onclick="adawidgetchangeheadcolor(this);" code="#00FFFF" style="background-color: rgb(0, 255, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_00CCFF" onclick="adawidgetchangeheadcolor(this);" code="#00CCFF" style="background-color: rgb(0, 204, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_993366" onclick="adawidgetchangeheadcolor(this);" code="#993366" style="background-color: rgb(153, 51, 102);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_C0C0C0" onclick="adawidgetchangeheadcolor(this);" code="#C0C0C0" style="background-color: rgb(192, 192, 192);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF99CC" onclick="adawidgetchangeheadcolor(this);" code="#FF99CC" style="background-color: rgb(255, 153, 204);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFCC99" onclick="adawidgetchangeheadcolor(this);" code="#FFCC99" style="background-color: rgb(255, 204, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFFF99" onclick="adawidgetchangeheadcolor(this);" code="#FFFF99" style="background-color: rgb(255, 255, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_CCFFFF" onclick="adawidgetchangeheadcolor(this);" code="#CCFFFF" style="background-color: rgb(204, 255, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_99CCFF" onclick="adawidgetchangeheadcolor(this);" code="#99CCFF" style="background-color: rgb(153, 204, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_ffffff" onclick="adawidgetchangeheadcolor(this);" code="#ffffff" style="background-color: rgb(255, 255, 255);"></span>';

if(title_color != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website title color scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding PR"  id="changetitlecolor" href="javascript:void(0);"><span onclick="adachangetitlecolor();" class="adablkbx"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+3</span></div><img src="'+hostUrl2+'assets/images/title-color.svg" width="28" height="46" alt="Change Title Color"/> <span class="adawidget-boxtext ADA-text-center">Title Color</span>';
appendHtml +='</span><span id="adawidgetstitlecolorbox" class="bcPicker-palette" style="display: none;">';
appendHtml +=appendColorHtml2;
appendHtml +='</span></a>';
}

if(text_color != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website text color scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding PR"  id="changetextcolor" href="javascript:void(0);"><span onclick="adachangetextcolor();" class="adablkbx"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+4</span></div><img src="'+hostUrl2+'assets/images/text-color.svg" width="28" height="46" alt="Change Text Color"/> <span class="adawidget-boxtext ADA-text-center">Text Color</span>';
appendHtml +='</span><span id="adawidgetstextcolorbox" class="bcPicker-palette" style="display: none;">';
appendHtml +=appendColorHtml;
appendHtml +='</span></a>';
}

if(sepia != '0'){
appendHtml +='<a  title="Distinguishable: Click this button to change website to a sepia scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablesepia" href="javascript:void(0);" onclick="adaenablesepia();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+5</span></div><img src="'+hostUrl2+'assets/images/sepia.svg" width="28" height="46" alt="Sepia"/> <span class="adawidget-boxtext ADA-text-center">Sepia</span></a>';
}

if(high_contrast != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website to a high contrast scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablehighcontrast" href="javascript:void(0);" onclick="adaenablehighcontrast();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+6</span></div><img src="'+hostUrl2+'assets/images/high-contrast.svg" width="28" height="46" alt="High Contrast"/> <span class="adawidget-boxtext ADA-text-center">High Contrast</span></a>';
}

if(invert != '0'){
appendHtml +='<a  title="Distinguishable: Click this button to invert colors of website" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enableinvert" href="javascript:void(0);" onclick="enableinvert();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+7</span></div><img src="'+hostUrl2+'assets/images/invert.svg" width="28" height="46" alt="Invert"/><span class="adawidget-boxtext ADA-text-center">Invert</span></a>';
}

if(black_yellow != '0'){
appendHtml +='<a  title="Distinguishable: Click this button to change website to a black & yellow scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enableblackyellow" href="javascript:void(0);" onclick="adaenableblackyellow();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+8</span></div><img src="'+hostUrl2+'assets/images/black-yellow.svg" width="28" height="46" alt="WCAG Contrast"/> <span class="adawidget-boxtext ADA-text-center">WCAG Contrast</span></a>';
}

/*appendHtml +='<a title="Click here to reset the presentation to default" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="resetbutton" href="javascript:void(0);" onclick="adaresetbutton();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img src="'+hostUrl2+'assets/images/reset-button.svg" alt="Reset Button"/> <span class="adawidget-boxtext ADA-text-center">Reset Button</span></a> ';*/

appendHtml +='</div><div class="clearfix"></div></div>';



appendHtml +='<div class="ada-links"><div class="col-lg-12 content_adjust '+trayclass+'1 ">ADDITIONAL INFORMATION<span class="arrowdown"></span></div><div class="flexbox">';



if(wai != '0'){
appendHtml +='<a title="Education: Learn more about WCAG" class="adawidget-boxbg adaicons adawidget-boxbg-padding" href="https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0"  target="_blank" ><div class="ADA-shift-DN"><span class="ADA-shift">Shift+9</span></div><img src="'+hostUrl2+'assets/images/w3c.svg" width="28" height="46" alt="You can learn more about W3C\'s Web Accessibility Initiative(WAI) HERE"/> <span class="adawidget-boxtext ADA-text-center" >Initiative</span></a>';
}

if(plan_id == '40'){
	
	var redirecturl = "";
	if(adatray_type =='0'){
		var redirecturl = widgetHostUrl+"accessibility/"+subdomain;
	} else if(adatray_type =='1'){
		var redirecturl = ada_link;
	} else {
		var redirecturl = widgetHostUrl+"accessibility/"+subdomain;
	}
	
	appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+redirecturl+'" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+-</span></div><img src="'+hostUrl2+'assets/images/hotel-accessibility.svg" width="28" height="46" alt="Hotel Accessibility"/> <span class="adawidget-boxtext ADA-text-center">Accessibility Statement</span></a> ';
	
} else {
if(accessibility_link != '0'){
    if(ada_link != ''){
    appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+ada_link+'" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+-</span></div><img src="'+hostUrl2+'assets/images/hotel-accessibility.svg" width="28" height="46" alt="Hotel Accessibility"/> <span class="adawidget-boxtext ADA-text-center">Accessibility Statement</span></a> ';
    } else {
    appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+website+'/ada-accessibility-amenities-services-facilities" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+-</span></div><img src="'+hostUrl2+'assets/images/hotel-accessibility.svg" width="28" height="46" alt="Hotel Accessibility"/> <span class="adawidget-boxtext ADA-text-center">Accessibility Statement</span></a> ';
    }
}
}



if(sitemap != '0'){
	if(sitemap_link != ''){
appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+sitemap_link+'" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+></span></div><img src="'+hostUrl2+'assets/images/sitemap.svg" width="28" height="46" alt="Hotel Sitemap"/> <span class="adawidget-boxtext ADA-text-center">Sitemap</span></a> ';
	}
}

/*appendHtml +='<a title="Click here to reset the presentation to default" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="resetbutton" href="javascript:void(0);" onclick="adaresetbutton();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img src="'+hostUrl2+'assets/images/reset-button.svg" alt="Reset Button"/> <span class="adawidget-boxtext ADA-text-center">Reset Button</span></a> ';*/

appendHtml +='</div><div class="clearfix"></div></div>';

appendHtml +='<div class="clearfix"></div></div>';


appendHtml +='<div class="clearfix"></div>';

if(tray_position == 'left' || tray_position == 'right'){ 
appendHtml +='<div class="clearfix"><div class="adainnsight" style="position:relative"><p class="text-center" style="font-size: 12px;"><strong>Patent Pending</strong> Copyright &copy; '+yearvalue+' <a class="ADA-white" href="https://www.innsight.com" target="_blank">INNsight.com</a>, Inc.</p></div>';
}

appendHtml +='<div class="modal fade" id="help" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"><div class="modal-dialog" role="document"><div class="modal-content"><div class="max-content"><div class="light_grey MR20 ML20 text-left black"><div class="PT10 PB10 PL10 PR10 grey1 white inline-block text-uppercase" align="left" id="exampleModalLabel">WCAG ADA TRAY\99 <i>Powered by INNsight</i> HELP GUIDE</div><div class="modal-body text-justify MB20 MR20 black PT10"><p>The ADA Tray\99 Powered by INNsight is a website widget which provides a set of web accessibility tools and features for individuals with audio, visual, mobility or situational impairment to more easily engage and use this website.</p><p>At the simple click of a button or keystroke, you can configure this webpage to be more readable, operable, and navigable. This webpage can be rendered in a variety of combinations based on the following toggles:</p></div></div></div></div></div></div></div>';
appendHtml +='</div>';
} else {

appendHtml +='<div id="ada_enable_toolbar_buttons" role="toolbar" aria-labeledby="ada_enable_toolbar_trigger"><div class="ADA-PR" id="ada-tray"><div class="ATA-tray" > <div class="ada-P pull-left"><a class="top_poweredby" href="https://www.ada-tray.com" target="blank" class="pull-left"><img width="150" height="54" title="ADA WCAG TRAY" class="ADA-MT-35 pull-left" src="'+hostUrl2+'assets/images/top-logo.svg" width="150" height="54" alt="ada-icon-top" onclick="disabletoolbar();"/></a></div>'

appendHtml +='<div id="ada-tray" class="esc"><span class="ADA-pointer"><img onclick="disabletoolbar();" src="'+hostUrl2+'assets/images/esc1.png" width="60" height="24" alt="Minimize Tray" title="Minimize Tray" class="wsc-icons-width ADAnonexs "/><img onclick="disabletoolbar();" src="'+hostUrl2+'assets/images/esc1.png" width="60" height="24" alt="Minimize Tray" title="Minimize Tray" class="wsc-icons-width ADA-none-lgmd"/></span></div>';

/*appendHtml +='<div class="resettopada PR"><a id="topresetada" title="Click here to reset the presentation to default" href="javascript:void(0);" onclick="adaresetbutton(this);"><img style="margin-top: 1px" src="'+hostUrl2+'assets/images/reset-button.svg" alt=" Reset Button"/><div class="ADA-shift-DN" style="left:12px; top:-8px"><span class="ADA-shift">Shift+V</span></div></a></div>';

appendHtml +='<div class="help PR"><a title="Help" id="helpview" onclick="helpview();"><img src="'+hostUrl2+'assets/images/help.png" alt="Help"/><div class="ADA-shift-DN" style="left:12px; top:-8px"><span class="ADA-shift">Shift+?</span></div></a></div>';*/


//appendHtml +='<a title="Click here to reset the presentation to default" class="PR adaicons-top ada-none-xssm ML10 pull-right" id="resetbutton" onclick="adaresetbutton(this);" status="false" href="javascript:void(0);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img style="margin-top: 6px" src="'+hostUrl2+'assets/images/reset-button.svg" alt=" Reset Button"/><span class="ADA-none-lgmd" style="font-size: 10px !important;">(Shift + V To Activate)</span></a>';

appendHtml +='<div class="clearfix"></div></div></div>';

appendHtml +='<div class="flexbox1">';

if(keyboard_nav1 != '0'){
appendHtml +='<a title="Operable: Click this button to navigate this website with your keyboard" class="adawidget-boxbg adaicons adawidget-boxbg-padding" id="enable_keyboard_nav" onclick="enableKeyboardNav(this);" status="false" href="javascript:void(0);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+A</span></div><img style="" src="'+hostUrl2+'assets/images/navigate-with-keyboard.svg" width="28" height="46" alt=" Keyboard Nav"/><span class="adawidget-boxtext ADA-text-center"> Keyboard Nav </span><span class="ADAF11 PT5"> (Shift + A To Activate)</span><!--span class="ADA-none-lgmd" style="font-size: 10px !important;">(Shift + A To Activate)</span--></a>';
}

appendHtml +='<a title="Click here to reset the presentation to default" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="resetbutton" href="javascript:void(0);" onclick="adaresetbutton();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+B</span></div><img src="'+hostUrl2+'assets/images/reset-button.svg" width="28" height="46" alt="Reset Button"/> <span class="adawidget-boxtext ADA-text-center">Reset Button</span></a> ';

appendHtml +='<a title="Help" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="helpview" onclick="helpview();" href="javascript:void(0);" > <div class="ADA-shift-DN"><span class="ADA-shift">Shift+?</span></div><img src="'+hostUrl2+'assets/images/help.svg" width="28" height="46" alt="Help"/> <span class="adawidget-boxtext ADA-text-center">Help Button</span></a></div><div class="all_links1 scrollbar" id="style-1"><div class="force-overflow"><div class="ada-links"><div class="col-lg-12 content_adjust clearfix '+trayclass+'1 ">CONTENT & DISPLAY ADJUSTMENTS<span class="arrowdown"></span></div><div class="flexbox">';

if(remove_images != '0'){
appendHtml +='<a title="Distinguishable: Click this button to remove images" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaRemoveImages" href="javascript:void(0);" onclick="adaRemoveImages();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+C</span></div><img src="'+hostUrl2+'assets/images/Hide-Image.svg" width="28" height="46" alt="Remove Images"/> <span class="adawidget-boxtext ADA-text-center">Remove Images</span></a>';
}

if(listen != '0'){
appendHtml +='<a title="Read Content On Page Aloud" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="readtext" href="javascript:void(0);" onclick="startReading();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+D</span></div><img src="'+hostUrl2+'assets/images/listen.svg" width="28" height="46" alt="Listen"/> <span class="adawidget-boxtext ADA-text-center">Listen</span></a>';
}

if(disable_animations != '0'){
appendHtml +='<a title="Distinguishable: Click this button to disable  animations" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaStopAnimations" href="javascript:void(0);" onclick="adaStopAnimations();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+E</span></div><img src="'+hostUrl2+'assets/images/Animation-Freezer.svg" width="28" height="46" alt="Disable Animations"/> <span class="adawidget-boxtext ADA-text-center">Disable Animations</span></a>';
}
//appendHtml +='<a class="adawidget-boxbg adaicons" href="javascript:void(0);" accesskey="Z"> <img src="'+hostUrl2+'assets/images/stop-blinks.png" alt="Stop Blinks"/> <span class="adawidget-boxtext">Stop Blinks</span></a>';
if(increase_fonts != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase size of all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="increasefont" href="javascript:void(0);" onclick="resizeText(1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+F</span></div><img src="'+hostUrl2+'assets/images/increasefonts.svg" width="28" height="46" alt="Increase Fonts"/> <span class="adawidget-boxtext ADA-text-center">Increase Fonts</span><span id="fontincreaselevelbox" class="fontincreaselevelbox"><strong></strong></span></a>';
}

if(decrease_fonts != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease size of all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="decreasefont" href="javascript:void(0);" onclick="resizeText(-1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+G</span></div><img src="'+hostUrl2+'assets/images/decreasefonts.svg" width="28" height="46" alt="Decrease Fonts"/> <span class="adawidget-boxtext ADA-text-center"> Decrease Fonts</span><span id="fontdecreaselevelbox" class="fontdecreaselevelbox"></span></a>';
}
if(reset_font != '0'){
appendHtml +='<a title="Perceivable: Click this button to reset size of all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="readablefonts" href="javascript:void(0);" onclick="readablefonts();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+H</span></div><img src="'+hostUrl2+'assets/images/reset-font.svg" width="28" height="46" alt="Reset Font"/><span class="adawidget-boxtext ADA-text-center">Reset Font</span><span class="blankbelow"></span></a>';
}

if(increasezoom != '0'){
appendHtml +='<a title="Distinguishable: Click this button to increase zoom" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="increasezoom" href="javascript:void(0);" onclick="adazoom(1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+I</span></div><img src="'+hostUrl2+'assets/images/zoom-increase.svg" width="28" height="46" alt="Zoom Increase"/> <span class="adawidget-boxtext ADA-text-center">Zoom Increase</span><span id="zoomincreaselevelbox" class="zoomincreaselevelbox"></span></a>';
}
if(decreasezoom != '0'){
appendHtml +='<a title="Distinguishable: Click this button to decrease zoom" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="decreasezoom" href="javascript:void(0);" onclick="adazoom(-1);"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+J</span></div><img src="'+hostUrl2+'assets/images/zoom-decrease.svg" width="28" height="46" alt="Zoom Decrease"/> <span class="adawidget-boxtext ADA-text-center">Zoom Decrease</span><span id="zoomdecreaselevelbox" class="zoomdecreaselevelbox"></span></a>';
}

if(increase_line_height != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase line height" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaIncreaseLineHeight" href="javascript:void(0);" onclick="adaIncreaseLineHeight();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+K</span></div><img src="'+hostUrl2+'assets/images/Adjust-word-hig.svg" width="28" height="46" alt="Increase Line Height"/> <span class="adawidget-boxtext ADA-text-center">Increase Line Height</span><span id="lineheightincreaselevelbox" class="lineheightincreaselevelbox"></span></a>';
}
if(decrease_line_height != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease line height" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaDecreaseLineHeight" href="javascript:void(0);" onclick="adaDecreaseLineHeight();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+L</span></div><img src="'+hostUrl2+'assets/images/decrease-line-height.svg" width="28" height="46" alt="Decrease Line Height"/> <span class="adawidget-boxtext ADA-text-center">Decrease Line Height</span><span id="lineheightdecreaselevelbox" class="lineheightdecreaselevelbox"></span></a>';
}
if(increase_word_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase word spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaIncreaseWordSpacing" href="javascript:void(0);" onclick="adaIncreaseWordSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+M</span></div><img src="'+hostUrl2+'assets/images/Adjust-Word-space.svg" width="28" height="46" alt="Increase Word Spacing"/> <span class="adawidget-boxtext ADA-text-center">Increase Word Spacing</span><span id="wordspacingincreaselevelbox" class="wordspacingincreaselevelbox"></span></a>';
}
if(decrease_word_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease word spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaDecreaseWordSpacing" href="javascript:void(0);" onclick="adaDecreaseWordSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+N</span></div><img src="'+hostUrl2+'assets/images/Adjust-Word-space-d.svg" width="28" height="46" alt="Decrease Word Spacing"/> <span class="adawidget-boxtext ADA-text-center">Decrease Word Spacing</span><span id="wordspacingdecreaselevelbox" class="wordspacingdecreaselevelbox"></span></a>';
}
if(increase_letter_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to increase letter spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaIncreaseLetterSpacing" href="javascript:void(0);" onclick="adaIncreaseLetterSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+O</span></div><img src="'+hostUrl2+'assets/images/Adjust-letter-spacing.svg" width="28" height="46" alt="Increase Letter Spacing"/> <span class="adawidget-boxtext ADA-text-center">Increase Letter Spacing</span><span id="letterspacingincreaselevelbox" class="letterspacingincreaselevelbox"></span></a>';
}
if(decrease_letter_spacing != '0'){
appendHtml +='<a title="Perceivable: Click this button to decrease letter spacing" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adaDecreaseLetterSpacing" href="javascript:void(0);" onclick="adaDecreaseLetterSpacing();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+P</span></div><img src="'+hostUrl2+'assets/images/Decrease-Letter-Spacing-Decrease-Letter-Spacing.svg" width="28" height="46" alt="Decrease Letter Spacing"/> <span class="adawidget-boxtext ADA-text-center">Decrease Letter Spacing</span><span id="letterspacingdecreaselevelbox" class="letterspacingdecreaselevelbox"></span></a>';
}
if(align_center != '0'){
appendHtml +='<a title="Perceivable: Click this button to align center" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextaligncenter" href="javascript:void(0);" onclick="adatextaligncenter();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+Q</span></div><img src="'+hostUrl2+'assets/images/Align-Center.svg" width="28" height="46" alt="Text Align Center"/> <span class="adawidget-boxtext ADA-text-center">Align Center</span></a>';
}
if(align_left != '0'){
appendHtml +='<a title="Perceivable: Click this button to align left" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextalignleft" href="javascript:void(0);" onclick="adatextalignleft();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+R</span></div><img src="'+hostUrl2+'assets/images/Align-Left.svg" width="28" height="46" alt="Text Align Left"/> <span class="adawidget-boxtext ADA-text-center">Align Left</span></a>';
}
if(align_right != '0'){
appendHtml +='<a title="Perceivable: Click this button to align right" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextalignright" href="javascript:void(0);" onclick="adatextalignright();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+S</span></div><img src="'+hostUrl2+'assets/images/Align-Right.svg" width="28" height="46" alt="Text Align Right"/> <span class="adawidget-boxtext ADA-text-center">Align Right</span></a>';
}
if(align_justify != '0'){
appendHtml +='<a title="Perceivable: Click this button to align justify" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="adatextalignjustify" href="javascript:void(0);" onclick="adatextalignjustify();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+T</span></div><img src="'+hostUrl2+'assets/images/Justify-Align.svg" width="28" height="46" alt="Text Align Justify"/> <span class="adawidget-boxtext ADA-text-center">Align Justify</span></a>';
}

if(bold_fonts != '0'){
appendHtml +='<a title="Perceivable: Click this button to boldface all fonts" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enableboldfonts" href="javascript:void(0);" onclick="adaenableboldfonts();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+U</span></div> <img src="'+hostUrl2+'assets/images/bold.svg" width="28" height="46" alt="Bold Fonts"/> <span class="adawidget-boxtext ADA-text-center">Bold Fonts</span></a>';
}

if(highlight_titles != '0'){
appendHtml +='<a title="Understandable: Click this button to highlight all page titles" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="highlightstitles" href="javascript:void(0);" onclick="adahighighlightstitles();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img src="'+hostUrl2+'assets/images/highlights-titles.svg" width="28" height="46" alt="Highlights Titles"/> <span class="adawidget-boxtext ADA-text-center">Highlights Titles</span></a>';
}

if(highlight_links != '0'){
appendHtml +='<a title="Navigable: Click this button to highlight all page links" class="adawidget-boxbg adaicons adawidget-boxbg-padding" id="highlightslinks" href="javascript:void(0);" onclick="adahighlightslinks();" accesskey="Z"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+W</span></div><img src="'+hostUrl2+'assets/images/highlightslinks.svg" width="28" height="46" alt="Highlights Links"/> <span class="adawidget-boxtext ADA-text-center">Highlights Links</span></a>';
}

if(black_cursor != '0'){
appendHtml +='<a title="Navigable: Click this button to show large black mouse cursor" class="adawidget-boxbg adaicons adawidget-boxbg-padding DNXSSM"  id="blackcursor" href="javascript:void(0);" onclick="adablackcursor();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+X</span></div><img src="'+hostUrl2+'assets/images/black-cursor.svg" width="28" height="46" alt="Black Cursor"/> <span class="adawidget-boxtext ADA-text-center">Black Cursor</span></a>';
}

if(white_cursor != '0'){
appendHtml +='<a title="Navigable: Click this button to show large white mouse cursor" class="adawidget-boxbg adaicons adawidget-boxbg-padding DNXSSM"  id="whitecursor" href="javascript:void(0);" onclick="adawhitecursor();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+Y</span></div><img src="'+hostUrl2+'assets/images/white-cursor.svg" width="28" height="46" alt="White Cursor"/> <span class="adawidget-boxtext ADA-text-center">White Cursor</span></a>';
}

if(reader_view != '0'){
appendHtml +='<a title="Understandable: Click this button to invoke a reader view" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="readerview" href="javascript:void(0);" onclick="readerView();"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+Z</span></div><img src="'+hostUrl2+'assets/images/reader-view.svg" width="28" height="46" alt="Reader View"/> <span class="adawidget-boxtext ADA-text-center">Reader Viewer</span></a>';
}

//appendHtml +='<a class="adawidget-boxbg adaicons"  id="enabletootlip" href="javascript:void(0);" onclick="enabletootlip();"> <img src="'+hostUrl2+'assets/images/tooltip.png" alt="Tooltip"/> <span class="adawidget-boxtext">Tooltip</span></a>';
if(tooltip_visible != '0'){
appendHtml +='<a title="Navigable: Click this button to highlight all tooltips" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enabletootlip" href="javascript:void(0);" onclick="enabletootlip();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+0</span></div><img src="'+hostUrl2+'assets/images/tooltipvisible.svg" width="28" height="46" alt="Tooltip Visible"/> <span class="adawidget-boxtext ADA-text-center">Tooltip Visible</span></a>';
}

appendHtml +='</div><div class="clearfix"></div></div>';

appendHtml +='<div class="ada-links"><div class="col-lg-12  content_adjust '+trayclass+'1 ">COLOR ADJUSTMENTS<span class="arrowdown"></span></div><div class="flexbox PR">';
if(mono_chrome != '0'){
    appendHtml +='<a title="Distinguishable: Click this button to change website to a monochromatic color scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablemonocromes" href="javascript:void(0);" onclick="adaenablemonocromes();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+1</span></div><img src="'+hostUrl2+'assets/images/monochrome.svg" width="28" height="46" alt="Mono Chrome"/>  <span class="adawidget-boxtext ADA-text-center">Mono Chrome</span></a>';
    appendHtml +='<div id="monochromecolors" class="" style="width:225px;">';
    appendHtml +='<span onclick="closedcolormonochrombx()" class="closedwhealbox" style="cursor:pointyer;position:absolute;right:6px;top:0px;font-size:20px;"><img src="'+hostUrl2+'assets/images/esc.svg" width="15" height="15" alt="close"/> </span><p>Click on the wheel colors:</p>';
    appendHtml +='<canvas id="adawhealcanvas" width="100" height="100" style="cursor: pointer;">Your browser does not support the canvas element.</canvas>';
    appendHtml +='<div id="adaslidecontainer">';
    appendHtml +='<p class="text-left MB0"><strong>Contrast</strong></p><p class="clearfix"><label for="adasatval" style="display:none;">adasatval</label><span class="pull-left PR5 PL5" onclick="satlightdecreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/minus.svg" alt="Minu"/></span><input type="range" min="40" max="100" oninput="satlight()" id="adasatval" value="100" class="adainputslider"><span class="pull-left PR5 PL5" onclick="satlightincreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/plus.svg" alt="Plus"/></span></p>';
    appendHtml +='<p class="text-left MB0"><strong>Brightness</strong></p><p class="clearfix"><label for="adalightval" style="display:none;">adalightval</label><span class="pull-left PR5 PL5"  onclick="adasatlightdecreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/minus.svg" alt="Minus"/></span><input type="range" min="60" max="140" oninput="satlight()" id="adalightval" value="100" class="adainputslider adainputslider-sun"><span class="pull-left PR5 PL5" onclick="adalightincreaseval();"><img width="15" height="15" src="'+hostUrl2+'assets/images/plus.svg" alt="Plus"/></span></p>';  
appendHtml +='</div></div>';	
}

if(gray_scale != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website to a gray scale scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablegrayscale" href="javascript:void(0);" onclick="adaenablegrayscale();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+2</span></div><img src="'+hostUrl2+'assets/images/gray-scale.svg" width="28" height="46" alt="Gray Scale"/> <span class="adawidget-boxtext ADA-text-center">Gray Scale</span></a>';
}

var appendColorHtml ='<span class="close_color" onclick="closedcolortextbx()"><img src="'+hostUrl2+'assets/images/esc.svg" width="15" height="15" alt="Change Title Color"/></span><span class="bcPicker-color adatextcolor_000000" onclick="adawidgetchangetextcolor(this);" code="#000000" style="background-color: rgb(0, 0, 0);"></span>';
appendColorHtml  +='<span class="bcPicker-color adatextcolor_993300" onclick="adawidgetchangetextcolor(this);" code="#993300" style="background-color: rgb(153, 51, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_333300" onclick="adawidgetchangetextcolor(this);" code="#333300" style="background-color: rgb(51, 51, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_000080" onclick="adawidgetchangetextcolor(this);" code="#000080" style="background-color: rgb(0, 0, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_333399" onclick="adawidgetchangetextcolor(this);" code="#333399" style="background-color: rgb(51, 51, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_333333" onclick="adawidgetchangetextcolor(this);" code="#333333" style="background-color: rgb(51, 51, 51);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_800000" onclick="adawidgetchangetextcolor(this);" code="#800000" style="background-color: rgb(128, 0, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF6600" onclick="adawidgetchangetextcolor(this);" code="#FF6600" style="background-color: rgb(255, 102, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_808000" onclick="adawidgetchangetextcolor(this);" code="#808000" style="background-color: rgb(128, 128, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_008000" onclick="adawidgetchangetextcolor(this);" code="#008000" style="background-color: rgb(0, 128, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_008080" onclick="adawidgetchangetextcolor(this);" code="#008080" style="background-color: rgb(0, 128, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_0000FF" onclick="adawidgetchangetextcolor(this);" code="#0000FF" style="background-color: rgb(0, 0, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_666699" onclick="adawidgetchangetextcolor(this);" code="#666699" style="background-color: rgb(102, 102, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_808080" onclick="adawidgetchangetextcolor(this);" code="#808080" style="background-color: rgb(128, 128, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF0000" onclick="adawidgetchangetextcolor(this);" code="#FF0000" style="background-color: rgb(255, 0, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF9900" onclick="adawidgetchangetextcolor(this);" code="#FF9900" style="background-color: rgb(255, 153, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_99CC00" onclick="adawidgetchangetextcolor(this);" code="#99CC00" style="background-color: rgb(153, 204, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_339966" onclick="adawidgetchangetextcolor(this);" code="#339966" style="background-color: rgb(51, 153, 102);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_33CCCC" onclick="adawidgetchangetextcolor(this);" code="#33CCCC" style="background-color: rgb(51, 204, 204);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_3366FF" onclick="adawidgetchangetextcolor(this);" code="#3366FF" style="background-color: rgb(51, 102, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_800080" onclick="adawidgetchangetextcolor(this);" code="#800080" style="background-color: rgb(128, 0, 128);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_999999" onclick="adawidgetchangetextcolor(this);" code="#999999" style="background-color: rgb(153, 153, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF00FF" onclick="adawidgetchangetextcolor(this);" code="#FF00FF" style="background-color: rgb(255, 0, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFCC00" onclick="adawidgetchangetextcolor(this);" code="#FFCC00" style="background-color: rgb(255, 204, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFFF00" onclick="adawidgetchangetextcolor(this);" code="#FFFF00" style="background-color: rgb(255, 255, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_00FF00" onclick="adawidgetchangetextcolor(this);" code="#00FF00" style="background-color: rgb(0, 255, 0);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_00FFFF" onclick="adawidgetchangetextcolor(this);" code="#00FFFF" style="background-color: rgb(0, 255, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_00CCFF" onclick="adawidgetchangetextcolor(this);" code="#00CCFF" style="background-color: rgb(0, 204, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_993366" onclick="adawidgetchangetextcolor(this);" code="#993366" style="background-color: rgb(153, 51, 102);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_C0C0C0" onclick="adawidgetchangetextcolor(this);" code="#C0C0C0" style="background-color: rgb(192, 192, 192);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FF99CC" onclick="adawidgetchangetextcolor(this);" code="#FF99CC" style="background-color: rgb(255, 153, 204);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFCC99" onclick="adawidgetchangetextcolor(this);" code="#FFCC99" style="background-color: rgb(255, 204, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_FFFF99" onclick="adawidgetchangetextcolor(this);" code="#FFFF99" style="background-color: rgb(255, 255, 153);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_CCFFFF" onclick="adawidgetchangetextcolor(this);" code="#CCFFFF" style="background-color: rgb(204, 255, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_99CCFF" onclick="adawidgetchangetextcolor(this);" code="#99CCFF" style="background-color: rgb(153, 204, 255);"></span>';
appendColorHtml +='<span class="bcPicker-color adatextcolor_ffffff" onclick="adawidgetchangetextcolor(this);" code="#ffffff" style="background-color: rgb(255, 255, 255);"></span>';

var appendColorHtml2 ='<span class="close_color" onclick="closedcolortextbx()"><img src="'+hostUrl2+'assets/images/esc.svg" width="15" height="15" alt="Change Title Color"/></span><span class="bcPicker-color adaheadcolor_000000" onclick="adawidgetchangeheadcolor(this);" code="#000000" style="background-color: rgb(0, 0, 0);"></span>';
appendColorHtml2  +='<span class="bcPicker-color adaheadcolor_993300" onclick="adawidgetchangeheadcolor(this);" code="#993300" style="background-color: rgb(153, 51, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adatheadcolor_333300" onclick="adawidgetchangeheadcolor(this);" code="#333300" style="background-color: rgb(51, 51, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_000080" onclick="adawidgetchangeheadcolor(this);" code="#000080" style="background-color: rgb(0, 0, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_333399" onclick="adawidgetchangeheadcolor(this);" code="#333399" style="background-color: rgb(51, 51, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_333333" onclick="adawidgetchangeheadcolor(this);" code="#333333" style="background-color: rgb(51, 51, 51);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_800000" onclick="adawidgetchangeheadcolor(this);" code="#800000" style="background-color: rgb(128, 0, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF6600" onclick="adawidgetchangeheadcolor(this);" code="#FF6600" style="background-color: rgb(255, 102, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_808000" onclick="adawidgetchangeheadcolor(this);" code="#808000" style="background-color: rgb(128, 128, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_008000" onclick="adawidgetchangeheadcolor(this);" code="#008000" style="background-color: rgb(0, 128, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_008080" onclick="adawidgetchangeheadcolor(this);" code="#008080" style="background-color: rgb(0, 128, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_0000FF" onclick="adawidgetchangeheadcolor(this);" code="#0000FF" style="background-color: rgb(0, 0, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_666699" onclick="adawidgetchangeheadcolor(this);" code="#666699" style="background-color: rgb(102, 102, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_808080" onclick="adawidgetchangeheadcolor(this);" code="#808080" style="background-color: rgb(128, 128, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF0000" onclick="adawidgetchangeheadcolor(this);" code="#FF0000" style="background-color: rgb(255, 0, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF9900" onclick="adawidgetchangeheadcolor(this);" code="#FF9900" style="background-color: rgb(255, 153, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_99CC00" onclick="adawidgetchangeheadcolor(this);" code="#99CC00" style="background-color: rgb(153, 204, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_339966" onclick="adawidgetchangeheadcolor(this);" code="#339966" style="background-color: rgb(51, 153, 102);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_33CCCC" onclick="adawidgetchangeheadcolor(this);" code="#33CCCC" style="background-color: rgb(51, 204, 204);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_3366FF" onclick="adawidgetchangeheadcolor(this);" code="#3366FF" style="background-color: rgb(51, 102, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_800080" onclick="adawidgetchangeheadcolor(this);" code="#800080" style="background-color: rgb(128, 0, 128);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_999999" onclick="adawidgetchangeheadcolor(this);" code="#999999" style="background-color: rgb(153, 153, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF00FF" onclick="adawidgetchangeheadcolor(this);" code="#FF00FF" style="background-color: rgb(255, 0, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFCC00" onclick="adawidgetchangeheadcolor(this);" code="#FFCC00" style="background-color: rgb(255, 204, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFFF00" onclick="adawidgetchangeheadcolor(this);" code="#FFFF00" style="background-color: rgb(255, 255, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_00FF00" onclick="adawidgetchangeheadcolor(this);" code="#00FF00" style="background-color: rgb(0, 255, 0);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_00FFFF" onclick="adawidgetchangeheadcolor(this);" code="#00FFFF" style="background-color: rgb(0, 255, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_00CCFF" onclick="adawidgetchangeheadcolor(this);" code="#00CCFF" style="background-color: rgb(0, 204, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_993366" onclick="adawidgetchangeheadcolor(this);" code="#993366" style="background-color: rgb(153, 51, 102);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_C0C0C0" onclick="adawidgetchangeheadcolor(this);" code="#C0C0C0" style="background-color: rgb(192, 192, 192);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FF99CC" onclick="adawidgetchangeheadcolor(this);" code="#FF99CC" style="background-color: rgb(255, 153, 204);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFCC99" onclick="adawidgetchangeheadcolor(this);" code="#FFCC99" style="background-color: rgb(255, 204, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_FFFF99" onclick="adawidgetchangeheadcolor(this);" code="#FFFF99" style="background-color: rgb(255, 255, 153);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_CCFFFF" onclick="adawidgetchangeheadcolor(this);" code="#CCFFFF" style="background-color: rgb(204, 255, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_99CCFF" onclick="adawidgetchangeheadcolor(this);" code="#99CCFF" style="background-color: rgb(153, 204, 255);"></span>';
appendColorHtml2 +='<span class="bcPicker-color adaheadcolor_ffffff" onclick="adawidgetchangeheadcolor(this);" code="#ffffff" style="background-color: rgb(255, 255, 255);"></span>';

if(title_color != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website title color scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding PR"  id="changetitlecolor" href="javascript:void(0);"><span onclick="adachangetitlecolor();" class="adablkbx"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+3</span></div><img src="'+hostUrl2+'assets/images/title-color.svg" width="28" height="46" alt="Change Title Color"/> <span class="adawidget-boxtext ADA-text-center">Title Color</span>';
appendHtml +='</span><span id="adawidgetstitlecolorbox" class="bcPicker-palette" style="display: none;">';
appendHtml +=appendColorHtml2;
appendHtml +='</span></a>';
}

if(text_color != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website text color scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding PR"  id="changetextcolor" href="javascript:void(0);"><span onclick="adachangetextcolor();" class="adablkbx"><div class="ADA-shift-DN"><span class="ADA-shift">Shift+4</span></div><img src="'+hostUrl2+'assets/images/text-color.svg" width="28" height="46" alt="Change Text Color"/> <span class="adawidget-boxtext ADA-text-center">Text Color</span>';
appendHtml +='</span><span id="adawidgetstextcolorbox" class="bcPicker-palette" style="display: none;">';
appendHtml +=appendColorHtml;
appendHtml +='</span></a>';
}

if(sepia != '0'){
appendHtml +='<a  title="Distinguishable: Click this button to change website to a sepia scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablesepia" href="javascript:void(0);" onclick="adaenablesepia();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+5</span></div><img src="'+hostUrl2+'assets/images/sepia.svg" width="28" height="46" alt="Sepia"/> <span class="adawidget-boxtext ADA-text-center">Sepia</span></a>';
}

if(high_contrast != '0'){
appendHtml +='<a title="Distinguishable: Click this button to change website to a high contrast scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enablehighcontrast" href="javascript:void(0);" onclick="adaenablehighcontrast();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+6</span></div><img src="'+hostUrl2+'assets/images/high-contrast.svg" width="28" height="46" alt="High Contrast"/> <span class="adawidget-boxtext ADA-text-center">High Contrast</span></a>';
}

if(invert != '0'){
appendHtml +='<a  title="Distinguishable: Click this button to invert colors of website" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enableinvert" href="javascript:void(0);" onclick="enableinvert();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+7</span></div><img src="'+hostUrl2+'assets/images/invert.svg" width="28" height="46" alt="Invert"/><span class="adawidget-boxtext ADA-text-center">Invert</span></a>';
}

if(black_yellow != '0'){
appendHtml +='<a  title="Distinguishable: Click this button to change website to a black & yellow scheme" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="enableblackyellow" href="javascript:void(0);" onclick="adaenableblackyellow();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+8</span></div><img src="'+hostUrl2+'assets/images/black-yellow.svg" width="28" height="46" alt="WCAG Contrast"/> <span class="adawidget-boxtext ADA-text-center">WCAG Contrast</span></a>';
}

/*appendHtml +='<a title="Click here to reset the presentation to default" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="resetbutton" href="javascript:void(0);" onclick="adaresetbutton();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img src="'+hostUrl2+'assets/images/reset-button.svg" alt="Reset Button"/> <span class="adawidget-boxtext ADA-text-center">Reset Button</span></a> ';*/

appendHtml +='</div><div class="clearfix"></div></div>';



appendHtml +='<div class="ada-links"><div class="col-lg-12 content_adjust '+trayclass+'1 ">ADDITIONAL INFORMATION<span class="arrowdown"></span></div><div class="flexbox">';



if(wai != '0'){
appendHtml +='<a title="Education: Learn more about WCAG" class="adawidget-boxbg adaicons adawidget-boxbg-padding" href="https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0"  target="_blank" ><div class="ADA-shift-DN"><span class="ADA-shift">Shift+9</span></div><img src="'+hostUrl2+'assets/images/w3c.svg" width="28" height="46" alt="You can learn more about W3C\'s Web Accessibility Initiative(WAI) HERE"/> <span class="adawidget-boxtext ADA-text-center" >Initiative</span></a>';
}

var adalinkurl = '';
if(plan_id == '40'){
	
	var redirecturl = "";
	if(adatray_type =='0'){
		var redirecturl = widgetHostUrl+"accessibility/"+subdomain;
	} else if(adatray_type =='1'){
		var redirecturl = ada_link;
	} else {
		var redirecturl = widgetHostUrl+"accessibility/"+subdomain;
	}
	
	appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+redirecturl+'" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+-</span></div><img src="'+hostUrl2+'assets/images/hotel-accessibility.svg" width="28" height="46" alt="Hotel Accessibility 1"/> <span class="adawidget-boxtext ADA-text-center">Accessibility Statement</span></a> ';
	var adalinkurl = redirecturl;
	
} else {
if(accessibility_link != '0'){
    if(ada_link != ''){
    appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+ada_link+'" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+-</span></div><img src="'+hostUrl2+'assets/images/hotel-accessibility.svg" width="28" height="46" alt="Hotel Accessibility 2"/> <span class="adawidget-boxtext ADA-text-center">Accessibility Statement</span></a> ';
	var adalinkurl = ada_link;
    } else {
    appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+website+'/ada-accessibility-amenities-services-facilities" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+-</span></div><img src="'+hostUrl2+'assets/images/hotel-accessibility.svg" width="28" height="46" alt="Hotel Accessibility 3"/> <span class="adawidget-boxtext ADA-text-center">Accessibility Statement</span></a> ';
     var adalinkurl = website+'/ada-accessibility-amenities-services-facilities';
    }
}
}

if(sitemap != '0'){
	if(sitemap_link != ''){
appendHtml +='<a title="Education: Learn more about this property\'s accessibility features" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  href="'+sitemap_link+'" target="_blank"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+></span></div><img src="'+hostUrl2+'assets/images/sitemap.svg" width="28" height="46" alt="Hotel Sitemap"/> <span class="adawidget-boxtext ADA-text-center">Sitemap</span></a> ';
	}
}

/*appendHtml +='<a title="Click here to reset the presentation to default" class="adawidget-boxbg adaicons adawidget-boxbg-padding"  id="resetbutton" href="javascript:void(0);" onclick="adaresetbutton();"> <div class="ADA-shift-DN"><span class="ADA-shift">Shift+V</span></div><img src="'+hostUrl2+'assets/images/reset-button.svg" alt="Reset Button"/> <span class="adawidget-boxtext ADA-text-center">Reset Button</span></a> ';*/
appendHtml +='</div><div class="clearfix"></div></div></div></div>';

appendHtml +='<div class="all_links2"><div class="adainnsight" style="position:relative"><p class="text-center" style="font-size: 12px;"><strong>Patent Pending</strong> Copyright &copy; '+yearvalue+' <a class="ADA-white" href="https://www.innsight.com" target="_blank">INNsight.com</a>, Inc.</p></div><div class="modal fade" id="help" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"><div class="modal-dialog" role="document"><div class="modal-content"><div class="max-content"><div class="light_grey MR20 ML20 text-left black"><div class="PT10 PB10 PL10 PR10 grey1 white inline-block text-uppercase" align="left" id="exampleModalLabel">WCAG ADA TRAY\99 <i>Powered by INNsight</i> HELP GUIDE</div><div class="modal-body text-justify MB20 MR20 black PT10"><p>The ADA Tray\99 Powered by INNsight is a website widget which provides a set of web accessibility tools and features for individuals with audio, visual, mobility or situational impairment to more easily engage and use this website.</p><p>At the simple click of a button or keystroke, you can configure this webpage to be more readable, operable, and navigable. This webpage can be rendered in a variety of combinations based on the following toggles:</p></div></div></div></div></div></div></div>';

}
appendHtml +='<audio id="playaudio" src="'+hostUrl2+'assets/images/Notification.mp3"></audio><audio id="audio1" src="'+hostUrl2+'assets/images/Notification-reverse.mp3"></audio></div>';
appendHtml +='</div><div id="readerModal" class="modal1"><div class="modal-content1"><div class="modal-header1"><span id="closedAdawdmodel" class="close1" style="font-size: 45px !important">&times;</span> </div><div class="modal-body1" id="readerContent_loder" style="display: none;"><div id="loader"><center><img src="'+hostUrl2+'assets/images/'+ada_shield_loader+'" width="308" height="308" alt="Loading" /></center><div style="text-align:center; font-size: 45px !important;">Loading...</div></div></div><div class="modal-body1" id="readerContent"></div></div>';
}
e1.innerHTML=appendHtml;
body2.appendChild(e1);
var onclikedarea = document.getElementById("ada_enable_toolbar");
onclikedarea.onclick = function(event){
  event.stopPropagation();
}
body2.onclick = function(event){
  //disabletoolbar();
var element = document.getElementById('ada_enable_toolbar_trigger');
    element.setAttribute("aria-pressed", "false");
    var toggleul = element.getAttribute('aria-flowto')
    var adaWidgetsul = document.getElementById(toggleul);
    //adaWidgetsul.style.display = 'none';
    var adaicon = document.getElementById('ada-icon');
    adaicon.style.display = 'block';
    var adaicon1 = document.getElementById('ada-icon1');
    adaicon1.style.display = 'block';
    var adatray = document.getElementById('ada-tray');
    //adatray.style.display = 'none';
	removeInnsightAdaClass(body2, 'ada-fixed')
    setInnsightAdaCookie('enabletoolbarslide',"",-1);
}

//Get loader
adaloader = document.getElementById('readerContent_loder');
// Get the modal
adamodal = document.getElementById('readerModal');
// Get the <span> element that closes the modal
//var adaspan = document.getElementsByClassName("close1")[0];
closedAdawdmodel = document.getElementById('closedAdawdmodel');
// When the user clicks on <span> (x), close the modal
closedAdawdmodel.onclick = function() {
  adamodal.style.display = "none";
  setInnsightAdaCookie('readerView',"",-1);
   var widgetshelpmodel = document.getElementsByClassName("widgetsHelpModel");
    for (var i = 0; i < widgetshelpmodel.length; i++) {
                widgetshelpmodel[i].classList.remove('widgetsHelpModel');
    }
}
// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target === adamodal) {
    adamodal.style.display = "none";
    setInnsightAdaCookie('readerView',"",-1);
    var widgetshelpmodel = document.getElementsByClassName("widgetsHelpModel");
    for (var i = 0; i < widgetshelpmodel.length; i++) {
                widgetshelpmodel[i].classList.remove('widgetsHelpModel');
    }
  }
}
var bodyelements =  document.getElementsByTagName("BODY")[0];
var except = document.getElementById('ada_enable_toolbar');
bodyelements.addEventListener("click", function (e) {
mainwordtext = [];
if (synthwdt.speaking) {
    synthwdt.cancel();
}
if(readingOn==1){
var x = e.clientX, y = e.clientY,
        elementMouseIsOver = document.elementFromPoint(x, y);
	var readingtext = inisializedReadingText(elementMouseIsOver);
        if(readingtext!=''){
            inisializedTextSpeek(readingtext,elementMouseIsOver);
        }
}

}, false);
except.addEventListener("click", function (ev) {
   
}, false);

// the positioning of each indicator relative its corresponding answer text
var indicOffsetTop = 10;
var indicOffsetLeft = 5;
// retrieve all the answer paragraphs from the DOM
var answers = document.querySelectorAll("[title]");
// build but don't yet show the answer-type indicators
// loop over each answer paragraph
[].forEach.call(answers, function(answer) {
  // create a new div element that will contain the answer-type text
  var indic = document.createElement("div");
  // style this div so it stands out and also so that it starts out hidden
  indic.classList.add("answerTypeIndicator");
  // get the position of the original answer paragraph so that
  // the new answer-type indicator can be positioned near it
  var posn = answer.getBoundingClientRect();
  // slightly offset the position of the answer-type indicator relative to
  // its corresponding answer text so that both can be seen simultaneously
  indic.style.top = posn.top + indicOffsetTop + "px";
  indic.style.left = posn.left + indicOffsetLeft + "px";
  // take the value (i.e. the text) from the title attribute of the answer paragraph
  // and put it into the content of the answer-type indicator
  indic.innerHTML = answer.getAttribute("title");
  // place the new indicator into the DOM, but note that it is still hidden at this point
  document.body.appendChild(indic);
});

// put all the newly created answer-type indicator divs into a variable for later access
var indics = document.querySelectorAll(".answerTypeIndicator");

// determine what code to call when starting and stopping hovering over an answer
// do this by adding hover listeners to each "answer" paragraph
/*[].forEach.call(answers, function(answer) {
  answer.addEventListener("mouseover", showTitleInfo);
  answer.addEventListener("mouseout",  hideTitleInfo);
});*/
document.onkeydown = function(evt) {
    evt = evt || window.event;
    // toggle widget on ESCAPE key
    if (evt.keyCode === 27) {
        document.getElementById("ada_enable_toolbar_trigger").click();
        //adamodal.style.display = "none";
    }
    var adabuttonbox = document.getElementById('ada_enable_toolbar_buttons');
    if(!isInnsightAdaHiddenCheck(adabuttonbox)){
    var a = '1';//65 =>A
    if(evt.shiftKey === true && evt.keyCode === 65){
        var idelm = document.getElementById("enable_keyboard_nav"); 
        if(idelm){
            enableKeyboardNav(idelm);
        }
    }
    // keyboard nav
    if(evt.shiftKey === true && keyboard_nav === true){  
 		switch(evt.keyCode){ 
            case 49:
                document.getElementById('enablemonocromes').click();
                break;
            case 53:
                document.getElementById('enablesepia').click();
                break;
            case 54:
                document.getElementById('enablehighcontrast').click();
                break;
            case 56:
                document.getElementById('enableblackyellow').click();
                break;
            case 50:
                document.getElementById('enablegrayscale').click();
                break;
			case 51:
			    //document.getElementById('changetitlecolor').click();
                adachangetitlecolor();
                break;
			case 52:
			    //document.getElementById('changetextcolor').click();
                adachangetextcolor();
                break;			
            case 55:
                document.getElementById('enableinvert').click();
                break;
            case 86:
                document.getElementById('highlightstitles').click();
                break;
            case 87:
                document.getElementById('highlightslinks').click();
                break;
            case 48:
                document.getElementById('enabletootlip').click();
                break;
            case 85:
                document.getElementById('enableboldfonts').click();
                break;
            case 70:
                document.getElementById('increasefont').click();
                break;
            case 71:
                document.getElementById('decreasefont').click();
                break;
            case 72:
                document.getElementById('readablefonts').click();
                break;
            case 73:
                document.getElementById('increasezoom').click();
                break;
            case 74:
                document.getElementById('decreasezoom').click();
                break;
            case 89:
                document.getElementById('whitecursor').click();
                break;
            case 88:
                document.getElementById('blackcursor').click();
                break;
            case 90:
                document.getElementById('readerview').click();
                break;
            case 57:
                window.open("https://www.w3.org/WAI/","_blank");
                break;    
            case 189:
                window.open(""+adalinkurl+"","_blank");
                break;
	    case 173:
                window.open(""+adalinkurl+"","_blank");
                break;
	    case 190:
                window.open(""+sitemap_link+"","_blank");
                break;
            case 191:
                document.getElementById('helpview').click();
                break;    
            case 66:
                document.getElementById('resetbutton').click();
                var a = '0';
                break;
            case 68:
                startReading();
                break;
            case 81:
                adatextaligncenter();
                break;
            case 82:
                adatextalignleft();
                break;
            case 83:
                adatextalignright();
                break;
            case 84:
                adatextalignjustify();
                break;
            case 77:
                adaIncreaseWordSpacing();
                break;
            case 78:
                adaDecreaseWordSpacing();
                break;
            case 79:
                adaIncreaseLetterSpacing();
                break;
            case 80:
                adaDecreaseLetterSpacing();
                break;
            case 75:
                adaIncreaseLineHeight();
                break;
            case 76:
                adaDecreaseLineHeight();
                break;
            case 69:
                adaStopAnimations();
                break;
            case 67:
                adaRemoveImages();
                break;
        }
        if(a == '1'){
            var keyboardtext = document.getElementsByClassName("ADA-shift-DN");
            for (var i = 0; i < keyboardtext.length; i++) {
                keyboardtext[i].classList.add('ADA-shift-DN-block');
            }
        }
    }
    var activedomeElemet = document.activeElement;
    if(!hasInnsightAdaClass(activedomeElemet,'adawidget-boxbg')){
        var navactiveclasses = document.getElementsByClassName("adaiconsactive");
        if(navactiveclasses.length>0){
            for (var i = 0; i < navactiveclasses.length; i++) {
                navactiveclasses[i].focus();
            }
        }else{
            //do nothing
        }
    }
    //var adaButtonLists = document.getElementsByClassName("adawidget-boxbg");
        
        if (evt.keyCode === 39) { 
            var activeElemet = document.activeElement;
            if(hasInnsightAdaClass(activeElemet,'adawidget-boxbg')){
                /*while(activeElemet.nextElementSibling && activeElemet.nextElementSibling.style.display === 'block') {
                   activeElemet =  activeElemet.nextElementSibling;
                }*/
                activeElemet.nextElementSibling.focus();
                //activeElemet.nextElementSibling.scrollIntoView();
            }
        }
        if (evt.keyCode === 37) {   
            var activeElemet = document.activeElement;
            if(hasInnsightAdaClass(activeElemet,'adawidget-boxbg')){
               /* while(activeElemet.previousElementSibling && activeElemet.previousElementSibling.style.display === 'block') {
                    activeElemet = activeElemet.previousElementSibling;
                }*/
                activeElemet.previousElementSibling.focus();
            }
        }
    }
};

/*show hide bottom tray*/
/*$(document).ready(function(){

$(".content_adjust").click(function () {
	//alert("test");
    $header = $(this);
    //getting the next element
    $content = $header.next();
    //open up the content needed - toggle the slide- if visible, slide up, if not slidedown.
    $content.slideToggle(500, function () {
        //execute this after slideToggle is done
        //change text of header based on visibility of content div
        $header.text(function () {
            //change text based on condition
            //return $content.is(":visible") ? "Collapse" : "Expand";
        });
    });
	$('.arrowdown',this).toggleClass('arrowup')
});

});*/


if(cookieListInnsightAda.length>0){
    setTimeout(function(){
        var adacontainer = document.getElementById("ada_enable_toolbar");
        if(adacontainer){
            for(var i=0;i<cookieListInnsightAda.length;i++){
               console.log('cookie: '+cookieListInnsightAda[i]);
               callToInitializeCookieAdaTools(cookieListInnsightAda[i]);
            }  
            document.getElementById("ada_enable_toolbar_trigger").click();
        /*var cookiemonocrome = getInnsightAdaCookie('adaenablemonocromes');
        if(cookiemonocrome!=''){    
            document.getElementById("ada_enable_toolbar_trigger").click();
            adaenablemonocromes();
        } */
        }
    },1500);
}
getAllMonochromicElements();
getAllWordspaceingElements();
getAlltextandheadingElements();
},1500);
function readerView(){
    document.getElementById("readerContent").innerHTML = "";
    adaloader.style.display = "block";
    adamodal.style.display = "block";
    var xhttp;
    xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
        if (this.readyState === 4 && this.status === 200) {
            var reader = JSON.parse(this.responseText);
            document.getElementById("readerContent").innerHTML = "";
            //Get modal content
            var modal_content = document.getElementById("readerContent");
            //Append Data after the last child
            modal_content.insertAdjacentHTML("beforeend", "<h3>"+reader.word_count+" Words </h3>");
            modal_content.insertAdjacentHTML("beforeend", reader.title);
            modal_content.insertAdjacentHTML("beforeend", reader.content);
            adaloader.style.display = "none";
        }
    };
    xhttp.open("GET", hostUrl2+"views/readerView.php?url="+url, true);
    xhttp.send();
    setInnsightAdaCookie('readerView', 'readerView', 365);
}
//widgetsHelpModel
function helpview(){    
    addInnsightAdaClass(adamodal, 'widgetsHelpModel');            
    document.getElementById("readerContent").innerHTML = "";
    adaloader.style.display = "block";
    adamodal.style.display = "block";
    var xhttp;
    xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
        if (this.readyState === 4 && this.status === 200) {
            var reader = JSON.parse(this.responseText);
            document.getElementById("readerContent").innerHTML = "";
            //Get modal content
            var modal_content = document.getElementById("readerContent");
            //Append Data after the last child
            modal_content.insertAdjacentHTML("beforeend", reader.content);
            adaloader.style.display = "none";
            (function($){                
                //$(".scrollhelpcontent").mCustomScrollbar({theme:"dark-3"});
            })(jQuery);	
        }
    };
    xhttp.open("GET", hostUrl2+"views/readerHelp.php?q="+ada_shield_bar, true);
    xhttp.send();
}
function getDomain(url) {
    var hostName = getHostName(url);
    var domain = hostName;
    
    if (hostName != null) {
        var parts = hostName.split('.').reverse();
        
        if (parts != null && parts.length > 1) {
            domain = parts[1] + '.' + parts[0];
                
            if (hostName.toLowerCase().indexOf('.co.uk') != -1 && parts.length > 2) {
              domain = parts[2] + '.' + domain;
            }
        }
    }
    
    return domain;
}
function getHostName(url) {
    var match = url.match(/:\/\/(www[0-9]?\.)?(.[^/:]+)/i);
    if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {
    return match[2];
    }
    else {
        return null;
    }
}

function htmlInnsightAdaDecode(html) {
    var textarea = document.createElement("textarea");
    html= html.replace(/\r/g, String.fromCharCode(0xe000)); // Replace "\r" with reserved unicode character.
    textarea.innerHTML = html;
    var result = textarea.value;
    return result.replace(new RegExp(String.fromCharCode(0xe000), 'g'), '\r');
}
function isInnsightAdaHiddenCheck(el) {
    //console.log('isInnsightAdaHiddenCheck node ' + el.nodeName);   
    var style = window.getComputedStyle
        ? getComputedStyle(el) // Standards
        : el.currentStyle;     // Old IE
    return ((style.display === 'none') || (style.visibility === 'hidden'))
}
//window.addEventListener("resize", readingWidgetsWindowResize);
function readingWidgetsWindowResize(){
    clearInterval(timerwdt);
    if (synthwdt.speaking) {
        synthwdt.cancel();
    }    
    speachTextobject = [];
    speachElementobject = [];
    mainwordtext = [];
    speachInt = 0;
    wordInt = 0;
    intwdt=0;
    timerwdt = null;
    readingwdt = false;
    readingOn=0;
    readingElements= '';
    var widgetsfocusdotted = document.getElementsByClassName("widgets_focus_dotted");
    for (var i = 0; i < widgetsfocusdotted.length; i++) {
        widgetsfocusdotted[i].classList.remove('widgets_focus_dotted');
    }
    setInnsightAdaCookie('startReading',"",-1);
}
function startReading(){    
    var readtextelement = document.getElementById('readtext');
    if(readingOn==0){
        readingOn=1;
        addInnsightAdaClass(readtextelement, 'adaiconsactive');
        addInnsightAdaClass(readtextelement, 'ADA-outer-bor');
        setInnsightAdaCookie('startReading', 'startReading', 365);
        if (synthwdt.speaking) {
            synthwdt.cancel();
        }        
    }else{
        removeInnsightAdaClass(readtextelement, 'adaiconsactive');
        removeInnsightAdaClass(readtextelement, 'ADA-outer-bor');
        mainwordtext = [];
        readingOn=0;
        if (synthwdt.speaking) {
            synthwdt.cancel();
        }         
        var widgetsfocusdotted = document.getElementsByClassName("widgets_focus_dotted");
        for (var i = 0; i < widgetsfocusdotted.length; i++) {
            widgetsfocusdotted[i].classList.remove('widgets_focus_dotted');
        }
        setInnsightAdaCookie('startReading',"",-1);
    }
}

function inisializedReadingText(clickedElement){
    var pElement = clickedElement;
    var bodyChilds = clickedElement.childNodes;
    if(bodyChilds.length>0){
        var istext = 0;
        var i;
        for (i = 0; i < bodyChilds.length; i++) {
            console.log('child node name '+bodyChilds[i].nodeName);
            if(bodyChilds[i].nodeName=='#text'){
		var contenttext = bodyChilds[i].innerText || bodyChilds[i].textContent; 
		if(contenttext.trim() !=''){
               	   istext = istext+1;
		}
            }     
        }
        var stext = '';
        if(istext>0){            
            stext = pElement.innerText || pElement.textContent; 
            stext = stext.trim();
            stext = stext.replace(/\s\s+/g, ' ');
            if(stext!=''){
                return stext;
            }else{
                if(pElement.nodeName=='A' || pElement.nodeName=='a'){                    
                        stext = pElement.title;
                        stext = stext.trim();
                        stext = stext.replace(/\s\s+/g, ' ');  
                        if(stext!=''){
                            return stext;
                        }
                }
            }
        }
        return stext;
    }else{
	console.log('parent node name '+pElement.nodeName);
        var stext = '';
        if(pElement.nodeName=='IMG'){
            stext = pElement.alt;
        }else if(pElement.nodeName=='INPUT'){
            stext = pElement.value;
            if(stext.trim()==''){
                stext = pElement.getAttribute("placeholder");
            }
        }else if(pElement.nodeName=='A' || pElement.nodeName=='a'){
            stext = pElement.innerText || pElement.textContent;
            if(stext.trim()==''){
                stext = pElement.title;
            }
        }else{
            stext = pElement.innerText || pElement.textContent;            
        }
        stext = stext.trim();
        stext = stext.replace(/\s\s+/g, ' ');
        if(stext!=''){
            return stext;
        }else{
            return '';
        }
    }
}
function inisializedTextSpeek(text,element){
if(readingOn==1){
    wordInt = 0;        
        var widgetsfocusdotted = document.getElementsByClassName("widgets_focus_dotted");
        for (var i = 0; i < widgetsfocusdotted.length; i++) {
            widgetsfocusdotted[i].classList.remove('widgets_focus_dotted');
        }
        addInnsightAdaClass(element, 'widgets_focus_dotted');
        //console.log('node text: ' + text);
        text = htmlInnsightAdaDecode(text);
        mainwordtext = [];
        var textfetch = '';
        var drtext = text.split(' ');
        var breakwordlength = drtext.length;
        if(breakwordlength>10){
            var j=0;
            for(j=0;j<breakwordlength;j++){
                if(j==0){
                    textfetch = drtext[j];
                }else{
                    if(j%10==0){
                        textfetch = textfetch+' '+drtext[j];
                        mainwordtext.push(textfetch);
                        textfetch = '';
                    }else{
                        if(textfetch==''){
                            textfetch = drtext[j];
                        }else{
                            textfetch = textfetch+' '+drtext[j];
                        }
                    }
                }                
            }
            mainwordtext.push(textfetch);
            textfetch = '';
        }else{
            var j=0;
            for(j=0;j<breakwordlength;j++){
                if(j==0){
                    textfetch = drtext[j];
                }else{
                    textfetch = textfetch+' '+drtext[j];
                }                
            }
            mainwordtext.push(textfetch);
            textfetch = '';
        }          
        if(mainwordtext.length>0){
                inisializedReadingSentancesWords(element)
        }
}
}
function inisializedReadingSentancesWords(element){
if(readingOn==1){
if (!synthwdt.speaking) {
	var speachLength = mainwordtext.length;
	if(speachLength>wordInt){
		var text = mainwordtext[wordInt];
		var element = element;
		speakWordsFromSentence(text,element);
		wordInt = wordInt+1;
	}
}else{
      setTimeout(function(){
	inisializedReadingSentancesWords(element);
    }, 1000);
}
}
}

function speakWordsFromSentence(text,element){ 
    if (synthwdt.speaking) {
            synthwdt.cancel();
        }
    if (timerwdt) {
        clearInterval(timerwdt);
    }	
    var msg = new SpeechSynthesisUtterance();
    var voices = synthwdt.getVoices();
    msg.voice = voices['Google US English'];
    msg.volume = 1; 
    msg.rate = 10 / 10;
    msg.pitch = 1;
    msg.text = text;
    msg.onstart = function(event) {	
        console.log('We have started uttering this speech: ' + event.utterance.text);
    };
    msg.onend = function(event) {	
        inisializedReadingSentancesWords(element)    
        console.log('Finished in ' + event.elapsedTime + ' seconds.');            
    };
    msg.onerror = function(event)
    {
        synthwdt.cancel();
        readingwdt = false;
        clearInterval(timerwdt);
        console.log('Errored ' + event);
    };
    msg.onpause = function (event)
    {
        console.log('onpause in ' + event.elapsedTime + ' seconds.');

    };
    msg.onboundary = function (event)
    {
        console.log('onboundary ' + event);
    };  
    synthwdt.onerror = function(event) {
        console.log('speechSynthesis onerror in ' + event.elapsedTime + ' seconds.');
        synthwdt.cancel();
        readingwdt = false;
        clearInterval(timerwdt);
    };      
    synthwdt.speak(msg);
    if(readingElements!=element){
        readingElements = element;
        element.scrollIntoView({behavior: "smooth", block: "center", inline: "nearest"});
    }
    setTimeout(function(){
	inisializedReadingSentancesWords(element);
    }, 1000);   
    readingwdt = true;
}
/* Reading text one by one end*/

if ('speechSynthesis' in window) {
/*speechSynthesis.onvoiceschanged = function() {
  var $voicelist = $('#voices');

  if($voicelist.find('option').length == 0) {
    speechSynthesis.getVoices().forEach(function(voice, index) {
      var $option = $('<option>')
      .val(index)
      .html(voice.name + (voice.default ? ' (default)' :''));

      $voicelist.append($option);
    });
     //$voicelist.material_select();
  }
    }*/
}
/*
function getTextFromNode(node, addSpaces) {
    var i, result, text, child;
    result = '';
    for (i = 0; i < node.childNodes.length; i++) {
        child = node.childNodes[i];
        text = null;
        if (child.nodeType === 1) {
            text = getTextFromNode(child, addSpaces);
        } else if (child.nodeType === 3) {
            text = child.nodeValue;
        }
        if (text) {
            if (addSpaces && /\S$/.test(result) && /^\S/.test(text)) text = ' ' + text;
            result += text;
        }
    }
    return result;
}    
if (window.speechSynthesis.speaking) {
    window.speechSynthesis.cancel();
}
function startReading_olds(){
        var pElement = document.body;
        var speachText = '';
	var bodyChilds = document.body.childNodes;
	var i;
	for (i = 0; i < bodyChilds.length; i++) {
		if(bodyChilds[i].nodeName=='#comment' || bodyChilds[i].nodeName=='STYLE' || bodyChilds[i].nodeName=='IFRAME' || bodyChilds[i].nodeName=='LINK' || bodyChilds[i].nodeName=='SCRIPT'){
		    //bodyChilds[i].remove(); 
		}else{
		      if(bodyChilds[i].nodeName!='#text'){
			    if (isInnsightAdaHiddenCheck(bodyChilds[i])){
				//bodyChilds[i].remove(); 
			    }else{
				fetchreadableChildsOfElement(bodyChilds[i]);
			    }
		     }else{
			var stext = bodyChilds[i].nodeValue;
			stext = stext.trim();
                        stext = stext.replace(/\s\s+/g, ' ');
			if(stext!=''){
                       	   speak(stext,pElement);
			}
                     }
		}      
	}
}
function fetchreadableChildsOfElement(pElement){
	var pElement = pElement;
        var speachText = '';
	var bodyChilds = pElement.childNodes;
        if(bodyChilds.length>0){
	var i;
	for (i = 0; i < bodyChilds.length; i++) {
		if(bodyChilds[i].nodeName=='#comment' || bodyChilds[i].nodeName=='STYLE' || bodyChilds[i].nodeName=='IFRAME' || bodyChilds[i].nodeName=='LINK' || bodyChilds[i].nodeName=='SCRIPT'){
		    //bodyChilds[i].remove(); 
		}else{
		      if(bodyChilds[i].nodeName!='#text'){
			    if (isInnsightAdaHiddenCheck(bodyChilds[i])){
				//bodyChilds[i].remove(); 
			    }else{
				fetchreadableChildsOfElement(bodyChilds[i]);
			    }
		     }else{
			var stext = bodyChilds[i].nodeValue;
			stext = stext.trim();
                        stext = stext.replace(/\s\s+/g, ' ');
			if(stext!=''){
                       	   speak(stext,pElement);
			}
                     }
		}      
	}
  }else{
   var stext = '';
   if(pElement.nodeName=='IMG'){
        stext = pElement.alt;
    }else if(pElement.nodeName=='INPUT'){
        stext = pElement.value;            
    }else if(pElement.nodeName=='A' || pElement.nodeName=='a'){
        stext = pElement.innerText || pElement.textContent;
        if(stext.trim()==''){
            stext = pElement.title;
        }
    }else{
        stext = pElement.innerText || pElement.textContent;            
    }
	stext = stext.trim();
	stext = stext.replace(/\s\s+/g, ' ');
	if(stext!=''){
       	   speak(stext,pElement);
	}
  }
}
function isInnsightAdaHiddenCheck_olds(el) {   
//alert(el.nodeName)
     var style = window.getComputedStyle
        ? getComputedStyle(el) // Standards
        : el.currentStyle;     // Old IE
    return ((style.display === 'none') || (style.visibility === 'hidden'))

}
function speak(text,element){
    //alert(text)
    //var synth = window.speechSynthesis;
    var msg = new SpeechSynthesisUtterance();
        var voices = window.speechSynthesis.getVoices();
        msg.voice = voices['Google US English'];
        msg.rate = 10 / 10;
        msg.pitch = 1;
        msg.text = text;
        window.speechSynthesis.speak(msg);
        msg.onstart = function(event) {            
            var widgetsfocusdotted = document.getElementsByClassName("widgets_focus_dotted");
            //alert(widgetsfocusdotted.length)
            for (var i = 0; i < widgetsfocusdotted.length; i++) {
                        widgetsfocusdotted[i].classList.remove('widgets_focus_dotted');
            }
            addInnsightAdaClass(element, 'widgets_focus_dotted');
            //element.focus();
            console.log('We have started uttering this speech: ' + event.utterance.text);
        };
        msg.onend = function(event) {
            //element.blur();
          console.log('Finished in ' + event.elapsedTime + ' seconds.');            
        };        
}*/


/*var bodyelements =  document.getElementsByTagName("BODY")[0];
var except = document.getElementById('ada_enable_toolbar');

bodyelements.addEventListener("click", function (e) {
var widgetsfocusdotted = document.getElementsByClassName("widgets_focus_dotted");
for (var i = 0; i < widgetsfocusdotted.length; i++) {
            widgetsfocusdotted[i].classList.remove('widgets_focus_dotted');
}
var x = e.clientX, y = e.clientY,
        elementMouseIsOver = document.elementFromPoint(x, y);
       addInnsightAdaClass(elementMouseIsOver, 'widgets_focus_dotted')
}, false);
except.addEventListener("click", function (ev) {
   
}, false);*/




function showChar(e){
  alert(
    "Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
    + "charCode: " + e.charCode + "\n"
    + "SHIFT key pressed: " + e.shiftKey + "\n"
    + "ALT key pressed: " + e.altKey + "\n"
  );
}

function enableinvert(){
    var enableinvert = document.getElementById("enableinvert");
    if (hasInnsightAdaClass(body2,'adashield-invert') ) {
        removeInnsightAdaClass(body2, 'adashield-invert');
        removeInnsightAdaClass(enableinvert, 'adaiconsactive');
        removeInnsightAdaClass(enableinvert, 'ADA-outer-bor');
        setInnsightAdaCookie('enableinvert',"",-1);
    } else {
        if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
             hideMonochromeColorWheelBox();
        }
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        removeactiveadaclass();
        addInnsightAdaClass(body2, 'adashield-invert');
        addInnsightAdaClass(enableinvert, 'adaiconsactive');
        addInnsightAdaClass(enableinvert, 'ADA-outer-bor');
        var cookieListInnAda = ['adaenablemonocromes','adaenablesepia','adaenablehighcontrast','adaenableblackyellow','adaenablegrayscale','adahighighlightstitles','adahighlightslinks'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('enableinvert', 'enableinvert', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}
function adazoom(multiplier){  
    var zoomlevelbox = document.getElementById("zoomincreaselevelbox");
    var zoomlevelbox2 = document.getElementById("zoomdecreaselevelbox");
  if(multiplier == '1' && mozzoom<3){      
      var increasezoom = document.getElementById("increasezoom");
      var decreasezoom = document.getElementById("decreasezoom");
      if(increasezoom){
      addInnsightAdaClass(increasezoom, 'adaiconsactive');
      addInnsightAdaClass(increasezoom, 'ADA-outer-bor'); }
      if(decreasezoom){
      removeInnsightAdaClass(decreasezoom, 'adaiconsactive');
      removeInnsightAdaClass(decreasezoom, 'ADA-outer-bor'); }
      mozzoom = mozzoom+1;      
        if(mozzoom==0){
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='';
          }
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='';
          }
        }else if(mozzoom==1){
          if(zoomlevelbox){  
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==2){  
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==3){
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==-1){  
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==-2){  
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }
      zoompagetodecided(mozzoom);
           
  }
  if(multiplier == '-1' && mozzoom>-3){
      var increasezoom = document.getElementById("increasezoom");
      var decreasezoom = document.getElementById("decreasezoom");
      if(decreasezoom){
      addInnsightAdaClass(decreasezoom, 'adaiconsactive');
      addInnsightAdaClass(decreasezoom, 'ADA-outer-bor'); }
      if(increasezoom){
      removeInnsightAdaClass(increasezoom, 'adaiconsactive');
      removeInnsightAdaClass(increasezoom, 'ADA-outer-bor'); }
      mozzoom = mozzoom-1;
      if(mozzoom==0){
        if(zoomlevelbox){
            zoomlevelbox.innerHTML='';
        }
        if(zoomlevelbox2){
            zoomlevelbox2.innerHTML='';
        }
      }else if(mozzoom==1){ 
        if(zoomlevelbox){
            zoomlevelbox.innerHTML='<span class="zoomindicaters"></span>';
        }
      }else if(mozzoom==2){  
        if(zoomlevelbox){
            zoomlevelbox.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
        }
      }else if(mozzoom==-1){
        if(zoomlevelbox2){
            zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span>';
        }
      }else if(mozzoom==-2){ 
        if(zoomlevelbox2){
            zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
        }
      }else if(mozzoom==-3){   
        if(zoomlevelbox2){
            zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
        }
      }
      zoompagetodecided(mozzoom);      
  }  
  setInnsightAdaCookie('adazoom', 'adazoom', 365);
  setInnsightAdaCookie('adamultiplier', multiplier, 365);
  setInnsightAdaCookie('adazoomlavel', mozzoom, 365);
}
function adazoomfromcookies(multiplier1,mozzoom1){ 
    var zoomlevelbox = document.getElementById("zoomincreaselevelbox");
    var zoomlevelbox2 = document.getElementById("zoomdecreaselevelbox");
    multiplier = multiplier1;
    mozzoom = mozzoom1;
  if(multiplier == '1' && mozzoom<4){      
      var increasezoom = document.getElementById("increasezoom");
      var decreasezoom = document.getElementById("decreasezoom");
      if(increasezoom){
      addInnsightAdaClass(increasezoom, 'adaiconsactive');
      addInnsightAdaClass(increasezoom, 'ADA-outer-bor');
      }
      if(decreasezoom){
      removeInnsightAdaClass(decreasezoom, 'adaiconsactive');
      removeInnsightAdaClass(decreasezoom, 'ADA-outer-bor');
      }
      mozzoom = mozzoom;
        if(mozzoom==0){
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='';
          }
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='';
          }
        }else if(mozzoom==1){
          if(zoomlevelbox){  
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==2){  
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==3){
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==-1){  
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==-2){  
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }
      zoompagetodecided(mozzoom);
           
  }
  if(multiplier == '-1' && mozzoom>-4){
      var increasezoom = document.getElementById("increasezoom");
      var decreasezoom = document.getElementById("decreasezoom");
      if(decreasezoom){
      addInnsightAdaClass(decreasezoom, 'adaiconsactive');
      addInnsightAdaClass(decreasezoom, 'ADA-outer-bor');
      }
      if(increasezoom){
      removeInnsightAdaClass(increasezoom, 'adaiconsactive');
      removeInnsightAdaClass(increasezoom, 'ADA-outer-bor');
      }
      mozzoom = mozzoom;
        if(mozzoom==0){
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='';
          }
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='';
          }
        }else if(mozzoom==1){ 
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==2){  
          if(zoomlevelbox){
              zoomlevelbox.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==-1){
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==-2){ 
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }else if(mozzoom==-3){   
          if(zoomlevelbox2){
              zoomlevelbox2.innerHTML='<span class="zoomindicaters"></span><span class="zoomindicaters"></span><span class="zoomindicaters"></span>';
          }
        }
      zoompagetodecided(mozzoom);      
  }  
  setInnsightAdaCookie('adazoom', 'adazoom', 365);
  setInnsightAdaCookie('adamultiplier', multiplier, 365);
  setInnsightAdaCookie('adazoomlavel', mozzoom, 365);
}
function zoompagetodecided(mozzoom){
    if(mozzoom==0){
          removeAllZoomClass();
      }
      if(mozzoom==1){
          removeAllZoomClass();
          addInnsightAdaClass(body2, 'zoom-in-1');
      }
      if(mozzoom==2){
          removeAllZoomClass();
          addInnsightAdaClass(body2, 'zoom-in-2');
      }
      if(mozzoom==3){
          removeAllZoomClass();
          addInnsightAdaClass(body2, 'zoom-in-3');
      }
      if(mozzoom==-1){
          removeAllZoomClass();
          addInnsightAdaClass(body2, 'zoom-out-1');
      }
      if(mozzoom==-2){
          removeAllZoomClass();
          addInnsightAdaClass(body2, 'zoom-out-2');
      }
      if(mozzoom==-3){
          removeAllZoomClass();
          addInnsightAdaClass(body2, 'zoom-out-3');
      }
}
function removeAllZoomClass(){
    removeInnsightAdaClass(body2, 'zoom-in-1');
    removeInnsightAdaClass(body2, 'zoom-in-2');
    removeInnsightAdaClass(body2, 'zoom-in-3');
    removeInnsightAdaClass(body2, 'zoom-out-1');
    removeInnsightAdaClass(body2, 'zoom-out-2');
    removeInnsightAdaClass(body2, 'zoom-out-3');
}
/*function adazoom(multiplier) {
  if (document.body.style.zoom == "") {
    document.body.style.zoom = "1";
    
  }
  
  if(multiplier == '1'){
      mozzoom = mozzoom + 0.2;
      var increasezoom = document.getElementById("increasezoom");
      var decreasezoom = document.getElementById("decreasezoom");
      addInnsightAdaClass(increasezoom, 'adaiconsactive');
      addInnsightAdaClass(increasezoom, 'ADA-outer-bor');
      removeInnsightAdaClass(decreasezoom, 'adaiconsactive');
      removeInnsightAdaClass(decreasezoom, 'ADA-outer-bor');
  }
  if(multiplier == '-1'){
      mozzoom = mozzoom - 0.2;
      var increasezoom = document.getElementById("increasezoom");
      var decreasezoom = document.getElementById("decreasezoom");
      addInnsightAdaClass(decreasezoom, 'adaiconsactive');
      addInnsightAdaClass(decreasezoom, 'ADA-outer-bor');
      removeInnsightAdaClass(increasezoom, 'adaiconsactive');
      removeInnsightAdaClass(increasezoom, 'ADA-outer-bor');
  }
  document.body.style.zoom = parseFloat(document.body.style.zoom) + (multiplier * 0.2) + "";
  document.body.style.MozTransform = "scale("+(parseFloat(mozzoom))+")"; 
  document.body.style.MozTransformOrigin = "0 0";
}*/

function resizeText(multiplier) { 
    fontzoom = parseInt(fontzoom);
    var zoomtextlevel = fontzoom;
    if (document.body.style.fontSize == "") {
        var el = body2;
        var style = window.getComputedStyle(el, null).getPropertyValue('font-size');
        var fontSize = parseFloat(style); 
        if(fontSize!='' && fontSize>0){
            document.body.style.fontSize = fontSize+'px';
        }else {
           document.body.style.fontSize = "15px";
        }
    }
  if(multiplier == '1'){
      var increasefont = document.getElementById("increasefont");
      var decreasefont = document.getElementById("decreasefont");
      if(increasefont){
        addInnsightAdaClass(increasefont, 'adaiconsactive');
        addInnsightAdaClass(increasefont, 'ADA-outer-bor');
      }
      if(decreasefont){
        removeInnsightAdaClass(decreasefont, 'adaiconsactive');
        removeInnsightAdaClass(decreasefont, 'ADA-outer-bor');
      }
        if(fontzoom<5 && fontzoom>=-5){
            fontzoom = fontzoom+1;
        }
        zoomtextlevel = parseFloat(zoomtextlevel)+1;
  }
  if(multiplier == '-1'){
      var increasefont = document.getElementById("increasefont");
      var decreasefont = document.getElementById("decreasefont");
      if(increasefont){
      removeInnsightAdaClass(increasefont, 'adaiconsactive');
      removeInnsightAdaClass(increasefont, 'ADA-outer-bor');
      }
      if(decreasefont){
      addInnsightAdaClass(decreasefont, 'adaiconsactive');
      addInnsightAdaClass(decreasefont, 'ADA-outer-bor');
      }
        if(fontzoom<=5 && fontzoom>-5){
            fontzoom = fontzoom-1;
        }
        zoomtextlevel = parseFloat(zoomtextlevel)-1;
  }
  if(zoomtextlevel<=5 && zoomtextlevel>=-5){    
    document.body.style.fontSize = parseFloat(document.body.style.fontSize) + (multiplier * 1) + "px";
    increasedecresefontslevelindicators(multiplier,fontzoom);
    setInnsightAdaCookie('resizeText', 'resizeText', 365);
    setInnsightAdaCookie('multiplier', multiplier, 365);
    setInnsightAdaCookie('bodyfontsize', document.body.style.fontSize, 365);
    setInnsightAdaCookie('adafontslavel', fontzoom, 365);
  }
}
function increasedecresefontslevelindicators(multipliers,fontzooms){
    var fontslevelbox = document.getElementById("fontincreaselevelbox");
    var fontslevelbox2 = document.getElementById("fontdecreaselevelbox");
    if(multipliers == '1'){
        if(fontzooms==0){
          if(fontslevelbox){
              fontslevelbox.innerHTML='';
          }
          if(fontslevelbox2){
              fontslevelbox2.innerHTML='';
          }
        }else if(fontzooms==1){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span>';
            }
        }else if(fontzooms==2){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==3){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==4){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==5){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-1){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-2){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-3){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-4){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }
    }
    if(multipliers == '-1'){
        if(fontzooms==0){
          if(fontslevelbox){
              fontslevelbox.innerHTML='';
          }
          if(fontslevelbox2){
              fontslevelbox2.innerHTML='';
          }
        }else if(fontzooms==1){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span>';
            }
        }else if(fontzooms==2){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==3){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==4){
            if(fontslevelbox){
                  fontslevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-1){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-2){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-3){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-4){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }else if(fontzooms==-5){
            if(fontslevelbox2){
                  fontslevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
            }
        }
    }
}
function resizeTextFromCookie(multiplier,fontsize,fontszooms) {  
  document.body.style.fontSize = fontsize;
  if(multiplier == '1'){
      var increasefont = document.getElementById("increasefont");
      var decreasefont = document.getElementById("decreasefont");
      if(increasefont){
        addInnsightAdaClass(increasefont, 'adaiconsactive');
        addInnsightAdaClass(increasefont, 'ADA-outer-bor');
      }
      if(decreasefont){
        removeInnsightAdaClass(decreasefont, 'adaiconsactive');
        removeInnsightAdaClass(decreasefont, 'ADA-outer-bor');
      }
      fontzoom = parseInt(fontszooms);
  }
  if(multiplier == '-1'){
      var increasefont = document.getElementById("increasefont");
      var decreasefont = document.getElementById("decreasefont");
      if(increasefont){
      removeInnsightAdaClass(increasefont, 'adaiconsactive');
      removeInnsightAdaClass(increasefont, 'ADA-outer-bor');
      }
      if(decreasefont){
      addInnsightAdaClass(decreasefont, 'adaiconsactive');
      addInnsightAdaClass(decreasefont, 'ADA-outer-bor');
      }
      fontzoom = parseInt(fontszooms);
  }
  document.body.style.fontSize = parseFloat(document.body.style.fontSize) + (0) + "px";
  increasedecresefontslevelindicators(multiplier,fontzoom);
  setInnsightAdaCookie('resizeText', 'resizeText', 365);
  setInnsightAdaCookie('multiplier', multiplier, 365);
  setInnsightAdaCookie('bodyfontsize', document.body.style.fontSize, 365);
  setInnsightAdaCookie('adafontslavel', fontzoom, 365);
}
function increasedecresefontslevelremove(){
    var fontslevelbox = document.getElementById("fontincreaselevelbox");
    var fontslevelbox2 = document.getElementById("fontdecreaselevelbox");
    if(fontslevelbox){
        fontslevelbox.innerHTML='';
    }
    if(fontslevelbox2){
        fontslevelbox2.innerHTML='';
    }
}
function readablefonts(){
    var element = document.getElementsByTagName('body')[0];
    element.style.fontSize = null;
    var increasefont = document.getElementById("increasefont");
    var decreasefont = document.getElementById("decreasefont");
    if(increasefont){
    removeInnsightAdaClass(increasefont, 'adaiconsactive');
    removeInnsightAdaClass(increasefont, 'ADA-outer-bor');
    }
    if(decreasefont){
    removeInnsightAdaClass(decreasefont, 'adaiconsactive');
    removeInnsightAdaClass(decreasefont, 'ADA-outer-bor');
    }
    var readablefonts = document.getElementById("readablefonts");
    removeInnsightAdaClass(readablefonts, 'adaiconsactive');
    removeInnsightAdaClass(readablefonts, 'ADA-outer-bor');
     /*if(hasInnsightAdaClass(readablefonts,'adaiconsactive')){
        removeInnsightAdaClass(readablefonts, 'adaiconsactive');
        removeInnsightAdaClass(readablefonts, 'ADA-outer-bor');
    }else{
        addInnsightAdaClass(readablefonts, 'adaiconsactive');
        addInnsightAdaClass(readablefonts, 'ADA-outer-bor');
    }*/
    fontzoom = 0;
    increasedecresefontslevelremove();
    setInnsightAdaCookie('resizeText', "", -1);
    setInnsightAdaCookie('multiplier', "", -1);
    setInnsightAdaCookie('bodyfontsize', "", -1);
    setInnsightAdaCookie('adafontslavel', "", -1);
}
/*function adahighlightslinks(){
    if (hasInnsightAdaClass(body2,'highlights-links') ) {
        removeInnsightAdaClass(body2, 'highlights-links');
    } else {
        addInnsightAdaClass(body2, 'highlights-links');
    }
}*/
function adahighlightslinks(){
    var highlightslinks = document.getElementById("highlightslinks");
    if (hasInnsightAdaClass(body2,'highlights-links') ) {
        removeInnsightAdaClass(body2, 'highlights-links');
        removeInnsightAdaClass(highlightslinks, 'adaiconsactive');
        removeInnsightAdaClass(highlightslinks, 'ADA-outer-bor');
        setInnsightAdaCookie('adahighlightslinks',"",-1);
    } else {
        if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
             hideMonochromeColorWheelBox();
        }
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        //removeactiveadaclass('highlightstitles');
        addInnsightAdaClass(body2, 'highlights-links');
        addInnsightAdaClass(highlightslinks, 'adaiconsactive');
        addInnsightAdaClass(highlightslinks, 'ADA-outer-bor');
        
        var enablehighcontrast = document.getElementById("enablehighcontrast");
        removeInnsightAdaClass(enablehighcontrast, 'adaiconsactive');
        removeInnsightAdaClass(enablehighcontrast, 'ADA-outer-bor');
        var enablemonocromes = document.getElementById("enablemonocromes");
        removeInnsightAdaClass(enablemonocromes, 'adaiconsactive');
        removeInnsightAdaClass(enablemonocromes, 'ADA-outer-bor');
        var enablesepia = document.getElementById("enablesepia");
        removeInnsightAdaClass(enablesepia, 'adaiconsactive');
        removeInnsightAdaClass(enablesepia, 'ADA-outer-bor'); 
        var enableblackyellow = document.getElementById("enableblackyellow");
        removeInnsightAdaClass(enableblackyellow, 'adaiconsactive');
        removeInnsightAdaClass(enableblackyellow, 'ADA-outer-bor');
        var enablegrayscale = document.getElementById("enablegrayscale");
        removeInnsightAdaClass(enablegrayscale, 'adaiconsactive');
        removeInnsightAdaClass(enablegrayscale, 'ADA-outer-bor');
        var enableinvert = document.getElementById("enableinvert");
        removeInnsightAdaClass(enableinvert, 'adaiconsactive');
        removeInnsightAdaClass(enableinvert, 'ADA-outer-bor');
        
        var cookieListInnAda = ['enableinvert','adaenablemonocromes','adaenablesepia','adaenablehighcontrast','adaenableblackyellow','adaenablegrayscale'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('adahighlightslinks', 'adahighlightslinks', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}
function adahighighlightstitles(){
    var highlightstitles = document.getElementById("highlightstitles");
    if (hasInnsightAdaClass(body2,'highlight-titles') ) {
        removeInnsightAdaClass(body2, 'highlight-titles');
        removeInnsightAdaClass(highlightstitles, 'adaiconsactive');
        removeInnsightAdaClass(highlightstitles, 'ADA-outer-bor');
        setInnsightAdaCookie('adahighighlightstitles',"",-1);
    } else {
        if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
             hideMonochromeColorWheelBox();
        }
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        //removeactiveadaclass('highlightslinks');
        addInnsightAdaClass(body2, 'highlight-titles');
        addInnsightAdaClass(highlightstitles, 'adaiconsactive');
        addInnsightAdaClass(highlightstitles, 'ADA-outer-bor');
        
        var enablehighcontrast = document.getElementById("enablehighcontrast");
        removeInnsightAdaClass(enablehighcontrast, 'adaiconsactive');
        removeInnsightAdaClass(enablehighcontrast, 'ADA-outer-bor');
        var enablemonocromes = document.getElementById("enablemonocromes");
        removeInnsightAdaClass(enablemonocromes, 'adaiconsactive');
        removeInnsightAdaClass(enablemonocromes, 'ADA-outer-bor');
        var enablesepia = document.getElementById("enablesepia");
        removeInnsightAdaClass(enablesepia, 'adaiconsactive');
        removeInnsightAdaClass(enablesepia, 'ADA-outer-bor'); 
        var enableblackyellow = document.getElementById("enableblackyellow");
        removeInnsightAdaClass(enableblackyellow, 'adaiconsactive');
        removeInnsightAdaClass(enableblackyellow, 'ADA-outer-bor');
        var enablegrayscale = document.getElementById("enablegrayscale");
        removeInnsightAdaClass(enablegrayscale, 'adaiconsactive');
        removeInnsightAdaClass(enablegrayscale, 'ADA-outer-bor');
        var enableinvert = document.getElementById("enableinvert");
        removeInnsightAdaClass(enableinvert, 'adaiconsactive');
        removeInnsightAdaClass(enableinvert, 'ADA-outer-bor'); 
        
        var cookieListInnAda = ['enableinvert','adaenablemonocromes','adaenablesepia','adaenablehighcontrast','adaenableblackyellow','adaenablegrayscale'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('adahighighlightstitles', 'adahighighlightstitles', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}

function adaenablemonocromes(){
    var enablemonocromes = document.getElementById("enablemonocromes");
    if (hasInnsightAdaClass(body2,'adashieldMonochrome') ) {//hasInnsightAdaClass(body2,'adashield-filter-monochrome')
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(enablemonocromes, 'adaiconsactive');
        removeInnsightAdaClass(enablemonocromes, 'ADA-outer-bor');
        setInnsightAdaCookie('adaenablemonocromes',"",-1);
        hideMonochromeColorWheelBox();
    } else {
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        removeactiveadaclass();
        addInnsightAdaClass(body2, 'adashieldMonochrome');
        showMonochromeColorWheelBox();
        addInnsightAdaClass(enablemonocromes, 'adaiconsactive');
        addInnsightAdaClass(enablemonocromes, 'ADA-outer-bor');
        var cookieListInnAda = ['enableinvert','adaenablesepia','adaenablehighcontrast','adaenableblackyellow','adaenablegrayscale','adahighighlightstitles','adahighlightslinks'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('adaenablemonocromes', 'adaenablemonocromes', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}
function adaenablesepia(){
    var enablesepia = document.getElementById("enablesepia");
    if (hasInnsightAdaClass(body2,'adashield-filter-sepia') ) {
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(enablesepia, 'adaiconsactive');
        removeInnsightAdaClass(enablesepia, 'ADA-outer-bor');
        setInnsightAdaCookie('adaenablesepia',"",-1);
    } else {
        if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
             hideMonochromeColorWheelBox();
        }
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        removeactiveadaclass();
        addInnsightAdaClass(body2, 'adashield-filter-sepia');
        addInnsightAdaClass(enablesepia, 'adaiconsactive');
        addInnsightAdaClass(enablesepia, 'ADA-outer-bor');
        var cookieListInnAda = ['enableinvert','adaenablemonocromes','adaenablehighcontrast','adaenableblackyellow','adaenablegrayscale','adahighighlightstitles','adahighlightslinks'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('adaenablesepia', 'adaenablesepia', 365);
		hidetextColorWheelBox();
        hidetitleColorWheelBox();
    }
}
function adaenablehighcontrast(){
    var enablehighcontrast = document.getElementById("enablehighcontrast");
    if (hasInnsightAdaClass(body2,'adashield-filter-highContrast') ) {
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(enablehighcontrast, 'adaiconsactive');
        removeInnsightAdaClass(enablehighcontrast, 'ADA-outer-bor');
        setInnsightAdaCookie('adaenablehighcontrast',"",-1);
    } else {
        if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
             hideMonochromeColorWheelBox();
        }
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        removeactiveadaclass();
        addInnsightAdaClass(body2, 'adashield-filter-highContrast');
        addInnsightAdaClass(enablehighcontrast, 'adaiconsactive');
        addInnsightAdaClass(enablehighcontrast, 'ADA-outer-bor');
        var cookieListInnAda = ['enableinvert','adaenablemonocromes','adaenablesepia','adaenableblackyellow','adaenablegrayscale','adahighighlightstitles','adahighlightslinks'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('adaenablehighcontrast', 'adaenablehighcontrast', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}
function adaenableblackyellow(){
    var enableblackyellow = document.getElementById("enableblackyellow");
    if (hasInnsightAdaClass(body2,'adashield-filter-blackyellow') ) {
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(enableblackyellow, 'adaiconsactive');
        removeInnsightAdaClass(enableblackyellow, 'ADA-outer-bor');
        setInnsightAdaCookie('adaenableblackyellow',"",-1);
    } else {
        if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
             hideMonochromeColorWheelBox();
        }
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        removeactiveadaclass();
        addInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        addInnsightAdaClass(enableblackyellow, 'adaiconsactive');
        addInnsightAdaClass(enableblackyellow, 'ADA-outer-bor');
        var cookieListInnAda = ['enableinvert','adaenablemonocromes','adaenablesepia','adaenablehighcontrast','adaenablegrayscale','adahighighlightstitles','adahighlightslinks'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('adaenableblackyellow', 'adaenableblackyellow', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}
function adaenablegrayscale(){
    var enablegrayscale = document.getElementById("enablegrayscale");
    if (hasInnsightAdaClass(body2,'adashield-filter-grayscale') ) {
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(enablegrayscale, 'adaiconsactive');
        removeInnsightAdaClass(enablegrayscale, 'ADA-outer-bor');
        setInnsightAdaCookie('adaenablegrayscale',"",-1);
    } else {
        if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
             hideMonochromeColorWheelBox();
        }
        removeInnsightAdaClass(body2, 'adashieldMonochrome');
        removeInnsightAdaClass(body2, 'adashield-filter-sepia');
        removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
        removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
        removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
        removeInnsightAdaClass(body2, 'adashield-invert');
        removeactiveadaclass();
        addInnsightAdaClass(body2, 'adashield-filter-grayscale');
        addInnsightAdaClass(enablegrayscale, 'adaiconsactive');
        addInnsightAdaClass(enablegrayscale, 'ADA-outer-bor');
        var cookieListInnAda = ['enableinvert','adaenablemonocromes','adaenablesepia','adaenablehighcontrast','adaenableblackyellow','adahighighlightstitles','adahighlightslinks'];
        eraseInnsightAdaCookie(cookieListInnAda);
        setInnsightAdaCookie('adaenablegrayscale', 'adaenablegrayscale', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}
function adaenableboldfonts(){
    var enableboldfonts = document.getElementById("enableboldfonts");
    if (hasInnsightAdaClass(body2,'adashield-bold-fonts') ) {
        removeInnsightAdaClass(body2, 'adashield-bold-fonts');
        removeInnsightAdaClass(enableboldfonts, 'adaiconsactive');
        removeInnsightAdaClass(enableboldfonts, 'ADA-outer-bor');
        setInnsightAdaCookie('adaenableboldfonts',"",-1);
    } else {
        addInnsightAdaClass(body2, 'adashield-bold-fonts');
        addInnsightAdaClass(enableboldfonts, 'adaiconsactive');
        addInnsightAdaClass(enableboldfonts, 'ADA-outer-bor');
        setInnsightAdaCookie('adaenableboldfonts', 'adaenableboldfonts', 365);
    }
	hidetextColorWheelBox();
	hidetitleColorWheelBox();
}
function adaincreasezoom(){
    var increasezoom = document.getElementById("increasezoom");
    if (hasInnsightAdaClass(body2,'zoom-in-1') ) {
        removeInnsightAdaClass(body2, 'zoom-in-1');
        removeInnsightAdaClass(increasezoom, 'adaiconsactive');
        removeInnsightAdaClass(increasezoom, 'ADA-outer-bor');
        setInnsightAdaCookie('adaincreasezoom',"",-1);
    } else {
        addInnsightAdaClass(body2, 'zoom-in-1');
        addInnsightAdaClass(increasezoom, 'adaiconsactive');
        addInnsightAdaClass(increasezoom, 'ADA-outer-bor');
        setInnsightAdaCookie('adaincreasezoom', 'adaincreasezoom', 365);
    }
	hidetextColorWheelBox();
	hidetitleColorWheelBox();
}
function adadecreasezoom(){
    var decreasezoom = document.getElementById("decreasezoom");
    if (hasInnsightAdaClass(body2,'zoom-out-1') ) {
        removeInnsightAdaClass(body2, 'zoom-out-1');
        removeInnsightAdaClass(decreasezoom, 'adaiconsactive');
        removeInnsightAdaClass(decreasezoom, 'ADA-outer-bor');
        setInnsightAdaCookie('adadecreasezoom',"",-1);
    } else {
        addInnsightAdaClass(body2, 'zoom-out-1');
        addInnsightAdaClass(decreasezoom, 'adaiconsactive');
        addInnsightAdaClass(decreasezoom, 'ADA-outer-bor');
        setInnsightAdaCookie('adadecreasezoom', 'adadecreasezoom', 365);
    }
	hidetextColorWheelBox();
	hidetitleColorWheelBox();
}
function adablackcursor(){
    var blackcursor = document.getElementById("blackcursor");
    var whitecursor = document.getElementById("whitecursor");
    if (hasInnsightAdaClass(body2,'cursor-larger-black') ) {
        removeInnsightAdaClass(body2, 'cursor-larger-black');
        removeInnsightAdaClass(blackcursor, 'adaiconsactive');
        removeInnsightAdaClass(blackcursor, 'ADA-outer-bor');
        setInnsightAdaCookie('adablackcursor',"",-1);
    } else {
        removeInnsightAdaClass(body2, 'cursor-larger-white');
        if(whitecursor){
            removeInnsightAdaClass(whitecursor, 'adaiconsactive');
            removeInnsightAdaClass(whitecursor, 'ADA-outer-bor');
        }
        addInnsightAdaClass(body2, 'cursor-larger-black');
        addInnsightAdaClass(blackcursor, 'adaiconsactive');
        addInnsightAdaClass(blackcursor, 'ADA-outer-bor');
        setInnsightAdaCookie('adablackcursor', 'adablackcursor', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}

function adawhitecursor(){
    var blackcursor = document.getElementById("blackcursor");
    var whitecursor = document.getElementById("whitecursor");
    if (hasInnsightAdaClass(body2,'cursor-larger-white') ) {
        removeInnsightAdaClass(body2, 'cursor-larger-white');
        removeInnsightAdaClass(whitecursor, 'adaiconsactive');
        removeInnsightAdaClass(whitecursor, 'ADA-outer-bor');
        setInnsightAdaCookie('adawhitecursor',"",-1);
    } else {
        removeInnsightAdaClass(body2, 'cursor-larger-black');
        if(blackcursor){
            removeInnsightAdaClass(blackcursor, 'adaiconsactive');
            removeInnsightAdaClass(blackcursor, 'ADA-outer-bor');
        }
        addInnsightAdaClass(body2, 'cursor-larger-white');
        addInnsightAdaClass(whitecursor, 'adaiconsactive');
        addInnsightAdaClass(whitecursor, 'ADA-outer-bor');
        setInnsightAdaCookie('adawhitecursor', 'adawhitecursor', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}

function adaresetbutton(){
    if (hasInnsightAdaClass(body2,'adashieldMonochrome')) {
        hideMonochromeColorWheelBox();
    }
    removeInnsightAdaClass(body2, 'cursor-larger-white');
    removeInnsightAdaClass(body2, 'cursor-larger-black');
    removeInnsightAdaClass(body2, 'zoom-out-1');
    removeInnsightAdaClass(body2, 'zoom-in-1');
    removeInnsightAdaClass(body2, 'adashield-bold-fonts');
    removeInnsightAdaClass(body2, 'adashield-filter-grayscale');
    removeInnsightAdaClass(body2, 'adashield-filter-blackyellow');
    removeInnsightAdaClass(body2, 'adashield-filter-highContrast');
    removeInnsightAdaClass(body2, 'adashield-filter-sepia');
    removeInnsightAdaClass(body2, 'adashieldMonochrome');
    removeInnsightAdaClass(body2, 'highlights-links');
    removeInnsightAdaClass(body2, 'highlight-titles');
    removeInnsightAdaClass(body2, 'adashield-invert');
    removeInnsightAdaClass(body2, 'widgets_focus_dotted23');
	
	removeInnsightAdaClass(body2, 'adachangetextcolor');
	removeInnsightAdaClass(body2, 'adachangetitlecolor');
    
    removeInnsightAdaClass(body2, 'enableadatextaligncenter');
    removeInnsightAdaClass(body2, 'enableadatextalignleft');
    removeInnsightAdaClass(body2, 'enableadatextalignright');
    removeInnsightAdaClass(body2, 'enableadatextalignjustify');
    removeInnsightAdaClass(body2, 'adastopanimations');
    removeInnsightAdaClass(body2, 'adaremoveallimages');
	hideTextTitleColorWheelBox();
    var ua = window.navigator.userAgent;
    var msie = ua.indexOf("MSIE ");
    var operab = ua.indexOf("OP");

    if (msie > 0 || operab > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) // If Internet Explorer, return version number
    {

    } else { 
            if (window.speechSynthesis.speaking) {
                    window.speechSynthesis.cancel();
            }
    }
    var element = document.getElementsByTagName('body')[0];
    element.style.fontSize = null;
    //element.style.zoom = null;
    //element.style.MozTransform = null;
    removeactiveadaclass('reset');
    hideTitleInfo();
    //disable keyboard nav
    keyboard_nav = false;
    var eknav = document.getElementById("enable_keyboard_nav");
    if(eknav){
       eknav.setAttribute("status", "false");
    }
    deleteAllInnsightAdaCookies();
    removeAllZoomClass();
    resettextpropertystyles();
    mozzoom = 0;
    var zoomlevelbox = document.getElementById("zoomincreaselevelbox");
    var zoomlevelbox2 = document.getElementById("zoomdecreaselevelbox");
    if(zoomlevelbox){
        zoomlevelbox.innerHTML='';
    }
    if(zoomlevelbox2){
        zoomlevelbox2.innerHTML='';
    }
    fontzoom = 0;
    increasedecresefontslevelremove();
    readingWidgetsWindowResize();
}

function removeactiveadaclass(flag){
  var els = document.getElementsByClassName("adawidget-boxbg");
    for (var i = 0; i < els.length; i++) {
        // if div is of keyboard nav
        if(els[i].getAttribute('id') === 'enable_keyboard_nav'){
            if(flag === 'reset'){
                els[i].classList.remove('adaiconsactive');
                els[i].classList.remove('ADA-outer-bor');
             }else{
                continue;
            }
        }else{
            if(flag === 'reset'){
                els[i].classList.remove('adaiconsactive');
                els[i].classList.remove('ADA-outer-bor');
             }else{
                if(els[i].getAttribute('id') === 'changetextcolor' || els[i].getAttribute('id') === 'changetitlecolor' || els[i].getAttribute('id') === 'enabletootlip' ||  els[i].getAttribute('id') === 'enableboldfonts' || els[i].getAttribute('id')==='highlightstitles' || els[i].getAttribute('id')==='highlightslinks' || els[i].getAttribute('id') === 'increasefont' || els[i].getAttribute('id')==='decreasefont' || els[i].getAttribute('id')==='increasezoom' || els[i].getAttribute('id') === 'decreasezoom' || els[i].getAttribute('id')==='whitecursor' || els[i].getAttribute('id')==='blackcursor'){
                    //do nothing...
                }else{
                    els[i].classList.remove('adaiconsactive');
                    els[i].classList.remove('ADA-outer-bor');
                }
            }
         }
    }
    var els = document.getElementsByClassName("ADA-shift-DN");
    for (var i = 0; i < els.length; i++) {
        // if div is of keyboard nav
        if(els[i].getAttribute('id') === 'enable_keyboard_nav'){
            if(flag === 'reset'){
                els[i].classList.remove('ADA-shift-DN-block');
              }else{
                continue;
            }
        }else{
            if(flag === 'reset'){
                els[i].classList.remove('ADA-shift-DN-block');
            }
        }
    }
}
 
function play() {
var playaudio = document.getElementById("playaudio");
playaudio.play();
}
function play1() {
var audio1 = document.getElementById("audio1");
audio1.play();
}
 
function enabletoolbarslide(element){   
    play();
	if(mobileview != 'yes'){
    /*setTimeout(function(){$(".all_links").mCustomScrollbar({theme:"dark-3"});
        $(".all_links1").mCustomScrollbar({theme:"dark-3"}); },500)*/
	}	
    if(element.getAttribute("aria-pressed")=='false'){
        element.setAttribute("aria-pressed", "true");
        var toggleul = element.getAttribute('aria-flowto')
        var adaWidgetsul = document.getElementById(toggleul);
        adaWidgetsul.style.display = 'block';
        var adatray = document.getElementById('ada-tray');
        adatray.style.display = 'block';
        var adaicon = document.getElementById('ada-icon');
        adaicon.style.display = 'none';
        var adaicon1 = document.getElementById('ada-icon1');
//        adaicon1.style.display = 'none';
        adaicon1.style.cssText = 'display:none !important';
		addInnsightAdaClass(body2, 'ada-fixed')
        setInnsightAdaCookie('enabletoolbarslide',"",-1);
     }else{
        element.setAttribute("aria-pressed", "false");
        var toggleul = element.getAttribute('aria-flowto')
        var adaWidgetsul = document.getElementById(toggleul);
        adaWidgetsul.style.display = 'none';
        var adatray = document.getElementById('ada-tray');
        adatray.style.display = 'none';
        var adaicon = document.getElementById('ada-icon');
        adaicon.style.display = 'block';
        var adaicon1 = document.getElementById('ada-icon1');
        adaicon1.style.display = 'block';
		removeInnsightAdaClass(body2, 'ada-fixed');
        setInnsightAdaCookie('enabletoolbarslide', 'enabletoolbarslide', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
        
    }
}

function disabletoolbar(){
    play1();  
    var element = document.getElementById('ada_enable_toolbar_trigger');
    element.setAttribute("aria-pressed", "false");
    var toggleul = element.getAttribute('aria-flowto')
    var adaWidgetsul = document.getElementById(toggleul);
    adaWidgetsul.style.display = 'none';
    var adaicon = document.getElementById('ada-icon');
    adaicon.style.display = 'block';
    var adaicon1 = document.getElementById('ada-icon1');
    adaicon1.style.display = 'block';
    var adatray = document.getElementById('ada-tray');
    adatray.style.display = 'none';
	removeInnsightAdaClass(body2, 'ada-fixed')
    setInnsightAdaCookie('enabletoolbarslide',"",-1);
}

function hasInnsightAdaClass(el, className)
{
    if (el.classList)
        return el.classList.contains(className);
    return !!el.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'));
}

function addInnsightAdaClass(el, className)
{
    if (el.classList)
        el.classList.add(className)
    else if (!hasInnsightAdaClass(el, className))
        el.className += " " + className;
}

function removeInnsightAdaClass(el, className)
{
    if (el.classList)
        el.classList.remove(className)
    else if (hasInnsightAdaClass(el, className))
    {
        var reg = new RegExp('(\\s|^)' + className + '(\\s|$)');
        el.className = el.className.replace(reg, ' ');
    }
}
// do this when starting to hover over an answer
function showTitleInfo() {
  var indics = document.querySelectorAll(".answerTypeIndicator");
  // loop through each answer-style indicator div
  [].forEach.call(indics, function(indic) {
    // make each indicator visible
    indic.classList.add("showing");
  });
}
// do this when stopping hovering over an answer
function hideTitleInfo() {
  var indics = document.querySelectorAll(".answerTypeIndicator");
  // loop through each answer-style indicator div
  [].forEach.call(indics, function(indic) {
    // hide each indicator
    indic.classList.remove("showing");
  });
}
function enabletootlip(){
    var enabletootlip = document.getElementById("enabletootlip");
    if (hasInnsightAdaClass(body2,'enable-tooltip') ) {
        removeInnsightAdaClass(body2, 'enable-tooltip');
        hideTitleInfo();
        removeInnsightAdaClass(enabletootlip, 'adaiconsactive');
        removeInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
        setInnsightAdaCookie('enabletootlip',"",-1);
    } else {
        addInnsightAdaClass(body2, 'enable-tooltip');
        showTitleInfo();
        addInnsightAdaClass(enabletootlip, 'adaiconsactive');
        addInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
        setInnsightAdaCookie('enabletootlip', 'enabletootlip', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }
}

//enable keyboard navigation
function enableKeyboardNav(element){
    var keyboardNavClass = document.getElementById("enable_keyboard_nav");
    var keyboardtext = document.getElementsByClassName("ADA-shift-DN");
    if(element.getAttribute("status") === "false"){
        keyboard_nav = true;
        element.setAttribute("status", "true");
        //addInnsightAdaClass(keyboardNavClass, 'adaiconsactive');
        //addInnsightAdaClass(keyboardNavClass, 'ADA-outer-bor');
        for (var i = 0; i < keyboardtext.length; i++) {
            keyboardtext[i].classList.add('ADA-shift-DN-block');
        }
        setInnsightAdaCookie('enableKeyboardNav', 'enableKeyboardNav', 365);
		hidetextColorWheelBox();
		hidetitleColorWheelBox();
    }else{
        keyboard_nav = false;
        element.setAttribute("status", "false");
        //removeInnsightAdaClass(keyboardNavClass, 'adaiconsactive');
        //removeInnsightAdaClass(keyboardNavClass, 'ADA-outer-bor');
        for (var i = 0; i < keyboardtext.length; i++) {
            keyboardtext[i].classList.remove('ADA-shift-DN-block');
        }
        setInnsightAdaCookie('enableKeyboardNav',"",-1);
    }
}
function setInnsightAdaCookie(cname, cvalue, exdays) {
  var d = new Date();
  d.setTime(d.getTime() + (exdays * 24 * 60 * 60));
  var expires = "expires="+d.toUTCString();
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}
function getInnsightAdaCookie(cname) {
  var name = cname + "=";
  var ca = document.cookie.split(';');
  for(var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}
function checkInnsightAdaCookie() {
    var cookies = document.cookie.split(";");
    var cookieLists = [];
    var j=0;
    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var cname = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        if(checkadaselection(cname.trim())){            
            var name = cname.trim() + "=";
            while (cookie.charAt(0) == ' ') {
                cookie = cookie.substring(1);
            }
            if (cookie.indexOf(name) == 0) {
               cookieLists[j] = cookie.substring(name.length, cookie.length);
               j = j+1;
            }
        }
    }
    return cookieLists;
}
function eraseInnsightAdaCookie(mycookieList) 
{
    for(var i=0;i<mycookieList.length;i++){
        setInnsightAdaCookie(mycookieList[i],"",-1);
    } 
    
}
function deleteAllInnsightAdaCookies(){
    var cookies = document.cookie.split(";");
    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        if(checkadaselection(name.trim())){  
            document.cookie = name.trim() + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/";
        }        
    }
}
function callToInitializeCookieAdaTools(itemname){
    switch(itemname.trim()) {
    case 'adaenablemonocromes':
      adaenablemonocromes();
      break;
    case 'readerView':
      readerView();
      break;
    case 'enableinvert':
      enableinvert();
      break;
    /*case 'adazoom':
      adazoom();
      break;*/
    case 'resizeText':
      //resizeText();
      var multiplier = (getInnsightAdaCookie('multiplier')!='')?getInnsightAdaCookie('multiplier'):1;
      var fontsize = (getInnsightAdaCookie('bodyfontsize')!='')?getInnsightAdaCookie('bodyfontsize'):'14px';
      var fontszooms = (getInnsightAdaCookie('adafontslavel')!='')?getInnsightAdaCookie('adafontslavel'):0;
      resizeTextFromCookie(multiplier,fontsize,fontszooms);
      break;
    case 'adazoom':
      //resizeText();
      var multiplier1 = (getInnsightAdaCookie('adamultiplier')!='')?getInnsightAdaCookie('adamultiplier'):1;
      var adazoomlavel = (getInnsightAdaCookie('adazoomlavel')!='')?getInnsightAdaCookie('adazoomlavel'):0;
      adazoomfromcookies(multiplier1,adazoomlavel);
      break;  
    case 'readablefonts':
      readablefonts();
      break;
    case 'adahighlightslinks':
      adahighlightslinks();
      break;
    case 'adahighighlightstitles':
      adahighighlightstitles();
      break;
    case 'adaenablesepia':
      adaenablesepia();
      break;
    case 'adaenablehighcontrast':
      adaenablehighcontrast();
      break;
    case 'adaenableblackyellow':
      adaenableblackyellow();
      break;
    case 'adaenablegrayscale':
      adaenablegrayscale();
      break;
    case 'adaenableboldfonts':
      adaenableboldfonts();
      break;
    case 'adaincreasezoom':
      adaincreasezoom();
      break;
    case 'adadecreasezoom':
      adadecreasezoom();
      break;
    case 'adablackcursor':
      adablackcursor();
      break;
    case 'adawhitecursor':
      adawhitecursor();
      break;
    case 'enabletoolbarslide':
      var elements = document.getElementById('ada_enable_toolbar_trigger');  
      enabletoolbarslide(elements);
      break;
    case 'disabletoolbar':
      disabletoolbar();
      break;
    case 'enabletootlip':
      enabletootlip();
      break;
    case 'startReading':
        setTimeout(function(){
            synthwdt.cancel();
            startReading();
        },5000);
      break;
    case 'enableKeyboardNav':
        var elements = document.getElementById('enable_keyboard_nav');
        enableKeyboardNav(elements);
      break;
      
    case 'adatextaligncenter':
      adatextaligncenter();
      break;
    case 'adatextalignleft':
      adatextalignleft();
      break;
    case 'adatextalignright':
      adatextalignright();
      break;
    case 'adatextalignjustify':
      adatextalignjustify();
      break;
      
    case 'adaIncreaseWordSpacing':
      wordspacing = (getInnsightAdaCookie('wordspacing')!='')?getInnsightAdaCookie('wordspacing'):0;
      adaIncreaseWordSpacing();
      break;
    case 'adaDecreaseWordSpacing':
      wordspacing = (getInnsightAdaCookie('wordspacing')!='')?getInnsightAdaCookie('wordspacing'):0;
      adaDecreaseWordSpacing();
      break;
    case 'adaIncreaseLetterSpacing':
      letterspacing = (getInnsightAdaCookie('letterspacing')!='')?getInnsightAdaCookie('letterspacing'):0;
      adaIncreaseLetterSpacing();
      break;
    case 'adaDecreaseLetterSpacing':
      letterspacing = (getInnsightAdaCookie('letterspacing')!='')?getInnsightAdaCookie('letterspacing'):0;
      adaDecreaseLetterSpacing();
      break;
    case 'adaIncreaseLineHeight':
      lineheight = (getInnsightAdaCookie('lineheight')!='')?getInnsightAdaCookie('lineheight'):0;
      adaIncreaseLineHeight();
      break;
    case 'adaDecreaseLineHeight':
      lineheight = (getInnsightAdaCookie('lineheight')!='')?getInnsightAdaCookie('lineheight'):0;
      adaDecreaseLineHeight();
      break;
    case 'adaStopAnimations':
      adaStopAnimations();
      break;
    case 'adaRemoveImages':
      adaRemoveImages();
      break;  
	  
	case 'adachangetextcolor':
      var textColor = (getInnsightAdaCookie('adatextcolor')!='')?getInnsightAdaCookie('adatextcolor'):'';
      adaupdatetextcolor(textColor);
      break;
    case 'adachangetitlecolor':
      var headcolor = (getInnsightAdaCookie('adaheadingcolor')!='')?getInnsightAdaCookie('adaheadingcolor'):'';
      adaupdateheadingcolor(headcolor);
      break;  
	  
    default:
    break;
} 
}
function checkadaselection(itemname){    
    switch(itemname.trim()) {
    case "adaenablemonocromes":
      return true;
      break;
    case 'readerView':
      return true;
      break;
    case 'enableinvert':
      return true;
      break;
    case 'adazoom':
      return true;
      break;
    case 'resizeText':
      return true;
      break;
    case 'readablefonts':
      return true;
      break;
    case 'adahighlightslinks':
      return true;
      break;
    case 'adahighighlightstitles':
      return true;
      break;
    case 'adaenablesepia':
      return true;
      break;
    case 'adaenablehighcontrast':
      return true;
      break;
    case 'adaenableblackyellow':
      return true;
      break;
    case 'adaenablegrayscale':
      return true;
      break;
    case 'adaenableboldfonts':
      return true;
      break;
    case 'adaincreasezoom':
      return true;
      break;
    case 'adadecreasezoom':
      return true;
      break;
    case 'adablackcursor':
      return true;
      break;
    case 'adawhitecursor':
      return true;
      break;
    case 'enabletoolbarslide':
      return true;
      break;
    case 'disabletoolbar':
      return true;
      break;
    case 'enabletootlip':
      return true;
      break;
    case 'enableKeyboardNav':
      return true;
      break;      
    case 'multiplier':
      return true;
      break;   
    case 'bodyfontsize':
      return true;
      break;
   case 'adazoom':
      return true;
      break; 
    case 'adamultiplier':
      return true;
      break; 
    case 'adazoomlavel':
      return true;
      break; 
    case 'startReading':
      return true;
      break;
    case 'adafontslavel':
      return true;
      break; 
  
    case 'adatextaligncenter':
      return true;
      break; 
    case 'adatextalignleft':
      return true;
      break; 
    case 'adatextalignright':
      return true;
      break; 
    case 'adatextalignjustify':
      return true;
      break; 
      
    case 'adaIncreaseWordSpacing':
      return true;
      break; 
    case 'adaDecreaseWordSpacing':
      return true;
      break; 
    case 'adaIncreaseLetterSpacing':
      return true;
      break; 
    case 'adaDecreaseLetterSpacing':
      return true;
      break; 
    case 'adaIncreaseLineHeight':
      return true;
      break; 
    case 'adaDecreaseLineHeight':
      return true;
      break; 
    case 'adaStopAnimations':
      return true;
      break;
    case 'adaRemoveImages':
      return true;
      break;
    
    case 'adachangetextcolor':
      return true;
      break;
    case 'adachangetitlecolor':
      return true;
      break;
    case 'adaheadingcolor':
      return true;
      break;
    case 'adatextcolor':
      return true;
      break;
	  
    default:
      return false;
      break;
} 
}
function closedcolormonochrombx(){
    var elements = document.getElementById('monochromecolors');
    elements.style.display = 'none';
}
function closedcolortextbx(){
    var elements = document.getElementById('adawidgetstextcolorbox');
    elements.style.display = 'none';
	
    var elements = document.getElementById('adawidgetstitlecolorbox');
    elements.style.display = 'none';
}
(function () {
    'use strict';
    
    var module = {
        options: [],
        header: [navigator.platform, navigator.userAgent, navigator.appVersion, navigator.vendor, window.opera],
        dataos: [
            { name: 'Windows Phone', value: 'Windows Phone', version: 'OS' },
            { name: 'Windows', value: 'Win', version: 'NT' },
            { name: 'iPhone', value: 'iPhone', version: 'OS' },
            { name: 'iPad', value: 'iPad', version: 'OS' },
            { name: 'Kindle', value: 'Silk', version: 'Silk' },
            { name: 'Android', value: 'Android', version: 'Android' },
            { name: 'PlayBook', value: 'PlayBook', version: 'OS' },
            { name: 'BlackBerry', value: 'BlackBerry', version: '/' },
            { name: 'Macintosh', value: 'Mac', version: 'OS X' },
            { name: 'Linux', value: 'Linux', version: 'rv' },
            { name: 'Palm', value: 'Palm', version: 'PalmOS' }
        ],
        databrowser: [
            { name: 'Chrome', value: 'Chrome', version: 'Chrome' },
            { name: 'Firefox', value: 'Firefox', version: 'Firefox' },
            { name: 'Safari', value: 'Safari', version: 'Version' },
            { name: 'Internet Explorer', value: 'MSIE', version: 'MSIE' },
            { name: 'Trident', value: 'Trident', version: 'Trident' },
            { name: 'Edge', value: 'Edge', version: 'Edge' },
            { name: 'Opera', value: 'Opera', version: 'Opera' },
            { name: 'BlackBerry', value: 'CLDC', version: 'CLDC' },
            { name: 'Mozilla', value: 'Mozilla', version: 'Mozilla' }
        ],
        init: function () {
            var agent = this.header.join(' '),
                os = this.matchItem(agent, this.dataos),
                browser = this.matchItem(agent, this.databrowser);
            
            return { os: os, browser: browser };
        },
        matchItem: function (string, data) {
            var i = 0,
                j = 0,
                html = '',
                regex,
                regexv,
                match,
                matches,
                version;
            
            for (i = 0; i < data.length; i += 1) {
                regex = new RegExp(data[i].value, 'i');
                match = regex.test(string);
                if (match) {
                    regexv = new RegExp(data[i].version + '[- /:;]([\\d._]+)', 'i');
                    matches = string.match(regexv);
                    version = '';
                    if (matches) { if (matches[1]) { matches = matches[1]; } }
                    if (matches) {
                        matches = matches.split(/[._]+/);
                        for (j = 0; j < matches.length; j += 1) {
                            if (j === 0) {
                                version += matches[j] + '.';
                            } else {
                                version += matches[j];
                            }
                        }
                    } else {
                        version = '0';
                    }
                    return {
                        name: data[i].name,
                        version: parseFloat(version)
                    };
                }
            }
            return { name: 'unknown', version: 0 };
        }
    };
    
    var e = module.init(),
        debug = '';
    var htmltags = document.getElementsByTagName("HTML")[0];
    if(e.browser.name=='Firefox' || e.browser.name=='Mozilla'){
        addInnsightAdaClass(htmltags, 'Enable-Firefox');
    }
    if(e.browser.name=='Internet Explorer' || e.browser.name=='MSIE' || e.browser.name=='Trident' || e.browser.name=='Edge'){
        addInnsightAdaClass(htmltags, 'Enable-IE');
    }
    /*debug += 'os.name = ' + e.os.name + '<br/>';
    debug += 'os.version = ' + e.os.version + '<br/>';
    debug += 'browser.name = ' + e.browser.name + '<br/>';
    debug += 'browser.version = ' + e.browser.version + '<br/>';
    
    debug += '<br/>';
    debug += 'navigator.userAgent = ' + navigator.userAgent + '<br/>';
    debug += 'navigator.appVersion = ' + navigator.appVersion + '<br/>';
    debug += 'navigator.platform = ' + navigator.platform + '<br/>';
    debug += 'navigator.vendor = ' + navigator.vendor + '<br/>';
    
    document.getElementById('log').innerHTML = debug;*/
}());
function getAllWordspaceingElements(){
    var body3 = document.getElementsByTagName("BODY")[0];
    var bodyChildElements = body3.childNodes;
    if(bodyChildElements.length>0){
        var i;
        var d=0;
        for (i = 0; i < bodyChildElements.length; i++) {
            var elementsd = body3;
            //console.log('child node name '+bodyChildElements[i].nodeName);
            if(bodyChildElements[i].nodeName=='#comment' || bodyChildElements[i].nodeName=='STYLE' || bodyChildElements[i].nodeName=='IFRAME' || bodyChildElements[i].nodeName=='LINK' || bodyChildElements[i].nodeName=='SCRIPT'){
                        //bodyChilds[i].remove();                         
            }else{                        
                //console.log('child node name '+bodyChildElements[i].nodeName+' class name: '+bodyChildElements[i].className);
                if(bodyChildElements[i].id!='ada_enable_toolbar'){
                    if(bodyChildElements[i].nodeName =='#text' && (bodyChildElements[i].nodeValue.trim()!='')){
                        if(d==0){
                            adawordspaceelements.push(elementsd);
                            d=d+1;
                        }
                    }else{
                        var childElements = bodyChildElements[i].childNodes;
                        if(childElements.length>0){
                            getallchildementsWithWordspaceing(childElements,bodyChildElements[i]);
                        }
                    }
                }
            }
        }
    }
}
function getallchildementsWithWordspaceing(childElements,parantElement){
    var d=0;
    for (var j = 0; j < childElements.length; j++) {
        var elementsd = parantElement;
        if(childElements[j].nodeName=='#comment' || childElements[j].nodeName=='STYLE' || childElements[j].nodeName=='IFRAME' || childElements[j].nodeName=='LINK' || childElements[j].nodeName=='SCRIPT'){
		    //bodyChilds[i].remove(); 
        }else{
            //console.log('child node name '+childElements[j].nodeName+' class name: '+childElements[j].className);
            if(childElements[j].id!='ada_enable_toolbar'){                        
                if(childElements[j].nodeName =='#text' && (childElements[j].nodeValue.trim()!='')){
                    if(d==0){
                        adawordspaceelements.push(elementsd);
                        d=d+1;
                    }
                }else{
                    var childElements2 = childElements[j].childNodes;
                    if(childElements2.length>0){
                        getallchildementsWithWordspaceing(childElements2,childElements[j]);
                    }
                }
            }
        }
    }
}
function getAlltextandheadingElements(){
    var body3 = document.getElementsByTagName("BODY")[0];
    var bodyChildElements = body3.childNodes;
    if(bodyChildElements.length>0){
        var istext = 0;
        var i;
        for (i = 0; i < bodyChildElements.length; i++) {
            var elementsd = bodyChildElements[i];
            //console.log('child node name '+bodyChildElements[i].nodeName);
            if(bodyChildElements[i].nodeName =='#text' || bodyChildElements[i].nodeName=='#comment' || bodyChildElements[i].nodeName=='STYLE' || bodyChildElements[i].nodeName=='IFRAME' || bodyChildElements[i].nodeName=='LINK' || bodyChildElements[i].nodeName=='SCRIPT'){
                        //bodyChilds[i].remove();                         
                    }else{                        
                        //console.log('child node name '+bodyChildElements[i].nodeName+' class name: '+bodyChildElements[i].className);
                        if(bodyChildElements[i].id!='ada_enable_toolbar'){                            
                            var fontcolors = window.getComputedStyle(elementsd, null).getPropertyValue('color'); 
                            if(fontcolors!='' && fontcolors!="rgb(0, 0, 0)"){
								if(bodyChildElements[i].nodeName=='H1' || bodyChildElements[i].nodeName=='H2' || bodyChildElements[i].nodeName=='H3' || bodyChildElements[i].nodeName=='H4' || bodyChildElements[i].nodeName=='H5' || bodyChildElements[i].nodeName=='H6'){
									adaheadingfontcolorelements.push(elementsd);
								}else{
									adatextfontcolorelements.push(elementsd);
								}		
                                //console.log('child node name '+bodyChildElements[i].nodeName+' font color :'+fontcolors+' class name: '+bodyChildElements[i].className);
                            }
                            var childElements = bodyChildElements[i].childNodes;
                            if(childElements.length>0){
								if(bodyChildElements[i].nodeName=='H1' || bodyChildElements[i].nodeName=='H2' || bodyChildElements[i].nodeName=='H3' || bodyChildElements[i].nodeName=='H4' || bodyChildElements[i].nodeName=='H5' || bodyChildElements[i].nodeName=='H6'){
									getallchildementforheadingcolor(childElements);
								}else{
									getallchildementfortextcolor(childElements);
								}                                
                            }
                        }
                    }
        }
    }
}
function getallchildementforheadingcolor(childElements){
	for (var j = 0; j < childElements.length; j++) {
        var elementsd = childElements[j];
        if(childElements[j].nodeName =='#text' || childElements[j].nodeName=='#comment' || childElements[j].nodeName=='STYLE' || childElements[j].nodeName=='IFRAME' || childElements[j].nodeName=='LINK' || childElements[j].nodeName=='SCRIPT'){
		    //bodyChilds[i].remove(); 
		}else{
			//console.log('child node name '+childElements[j].nodeName+' class name: '+childElements[j].className);
			if(childElements[j].id!='ada_enable_toolbar'){                        
				var fontcolors = window.getComputedStyle(elementsd, null).getPropertyValue('color');  
				if(fontcolors!='' && fontcolors!="rgb(0, 0, 0)"){					
					adaheadingfontcolorelements.push(elementsd);	
					//console.log('child node name '+childElements[j].nodeName+' font color :'+fontcolors+' class name: '+childElements[j].className);
				}
				var childElements2 = childElements[j].childNodes;
				if(childElements2.length>0){
					getallchildementforheadingcolor(childElements2);					 
				}
			}
		}
    }
}
function getallchildementfortextcolor(childElements){
	for (var j = 0; j < childElements.length; j++) {
        var elementsd = childElements[j];
        if(childElements[j].nodeName =='#text' || childElements[j].nodeName=='#comment' || childElements[j].nodeName=='STYLE' || childElements[j].nodeName=='IFRAME' || childElements[j].nodeName=='LINK' || childElements[j].nodeName=='SCRIPT'){
		    //bodyChilds[i].remove(); 
		}else{
			//console.log('child node name '+childElements[j].nodeName+' class name: '+childElements[j].className);
			if(childElements[j].id!='ada_enable_toolbar'){                        
				var fontcolors = window.getComputedStyle(elementsd, null).getPropertyValue('color');  
				if(fontcolors!='' && fontcolors!="rgb(0, 0, 0)"){						
					if(childElements[j].nodeName=='H1' || childElements[j].nodeName=='H2' || childElements[j].nodeName=='H3' || childElements[j].nodeName=='H4' || childElements[j].nodeName=='H5' || childElements[j].nodeName=='H6'){
							adaheadingfontcolorelements.push(elementsd);
					}else{
						adatextfontcolorelements.push(elementsd);
					}
					
					//console.log('child node name '+childElements[j].nodeName+' font color :'+fontcolors+' class name: '+childElements[j].className);
				}
				var childElements2 = childElements[j].childNodes;
				if(childElements2.length>0){
					if(childElements[j].nodeName=='H1' || childElements[j].nodeName=='H2' || childElements[j].nodeName=='H3' || childElements[j].nodeName=='H4' || childElements[j].nodeName=='H5' || childElements[j].nodeName=='H6'){
						getallchildementforheadingcolor(childElements2);
					}else{
						getallchildementfortextcolor(childElements2);
					} 
				}
			}
		}
    }
}
//https://awik.io/determine-color-bright-dark-using-javascript/
//https://tutsplus.github.io/how-to-manipulate-colors-in-javascript-using-chroma.js/
//https://webdesign.tutsplus.com/tutorials/how-to-manipulate-colors-in-javascript-using-chromajs--cms-29059
//https://www.w3schools.com/colors/colors_monochromatic.asp
function getAllMonochromicElements(){
    var body3 = document.getElementsByTagName("BODY")[0];
    var bodyChildElements = body3.childNodes;
    if(bodyChildElements.length>0){
        var istext = 0;
        var i;
        for (i = 0; i < bodyChildElements.length; i++) {
            var elementsd = bodyChildElements[i];
            //console.log('child node name '+bodyChildElements[i].nodeName);
            if(bodyChildElements[i].nodeName =='#text' || bodyChildElements[i].nodeName=='#comment' || bodyChildElements[i].nodeName=='STYLE' || bodyChildElements[i].nodeName=='IFRAME' || bodyChildElements[i].nodeName=='LINK' || bodyChildElements[i].nodeName=='SCRIPT'){
                        //bodyChilds[i].remove();                         
                    }else{                        
                        //console.log('child node name '+bodyChildElements[i].nodeName+' class name: '+bodyChildElements[i].className);
                        if(bodyChildElements[i].id!='ada_enable_toolbar'){
                            var bgcolors = window.getComputedStyle(elementsd, null).getPropertyValue('background-color');
                            var fontcolors = window.getComputedStyle(elementsd, null).getPropertyValue('color');
                            var bdrtopcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-top-color');
                            var bdrrightcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-right-color');
                            var bdrbottomcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-bottom-color');
                            var bdrleftcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-left-color');
                            if(bgcolors!='' && (bgcolors!="rgba(0, 0, 0, 0)" && bgcolors!="rgba(0, 0, 0,)")){
                                pushBgColorElements(bgcolors,elementsd);
                                 adabgcolorelements.push(elementsd);
                                 //console.log('child node name '+bodyChildElements[i].nodeName+' bg color :'+bgcolors+' class name: '+bodyChildElements[i].className);
                            }
                            if(fontcolors!='' && fontcolors!="rgb(0, 0, 0)"){
                                pushFontColorElements(fontcolors,elementsd);
                                adafontcolorelements.push(elementsd);	
                                //console.log('child node name '+bodyChildElements[i].nodeName+' font color :'+fontcolors+' class name: '+bodyChildElements[i].className);
                            }
                            
                            if(bdrtopcolors!='' && bdrtopcolors!="rgb(0, 0, 0)"){
                                pushBdrTopColorElements(bdrtopcolors,elementsd);
                                adabdrtopcolorelements.push(elementsd);
                                //console.log('child node name '+bodyChildElements[i].nodeName+' BDR color :'+bdrtopcolors+' class name: '+bodyChildElements[i].className);
                            }
                            if(bdrrightcolors!='' && bdrrightcolors!="rgb(0, 0, 0)"){
                                pushBdrRightColorElements(bdrrightcolors,elementsd);
                                adabdrrightcolorelements.push(elementsd);
                                //console.log('child node name '+bodyChildElements[i].nodeName+' BDR color :'+bdrrightcolors+' class name: '+bodyChildElements[i].className);
                            }
                            if(bdrbottomcolors!='' && bdrbottomcolors!="rgb(0, 0, 0)"){
                                pushBdrBottomColorElements(bdrbottomcolors,elementsd);
                                adabdrbottomcolorelements.push(elementsd);
                                //console.log('child node name '+bodyChildElements[i].nodeName+' BDR color :'+bdrbottomcolors+' class name: '+bodyChildElements[i].className);
                            }
                            if(bdrleftcolors!='' && bdrleftcolors!="rgb(0, 0, 0)"){
                                pushBdrLeftColorElements(bdrleftcolors,elementsd);
                                adabdrleftcolorelements.push(elementsd);
                                //console.log('child node name '+bodyChildElements[i].nodeName+' BDR color :'+bdrleftcolors+' class name: '+bodyChildElements[i].className);
                            }
                            var childElements = bodyChildElements[i].childNodes;
                            if(childElements.length>0){
                                getallchildementswithcolor(childElements);
                            }
                        }
                    }
        }
    }
}
function getallchildementswithcolor(childElements){
	for (var j = 0; j < childElements.length; j++) {
        var elementsd = childElements[j];
        if(childElements[j].nodeName =='#text' || childElements[j].nodeName=='#comment' || childElements[j].nodeName=='STYLE' || childElements[j].nodeName=='IFRAME' || childElements[j].nodeName=='LINK' || childElements[j].nodeName=='SCRIPT'){
		    //bodyChilds[i].remove(); 
		}else{
                    //console.log('child node name '+childElements[j].nodeName+' class name: '+childElements[j].className);
                    if(childElements[j].id!='ada_enable_toolbar'){
                        var bgcolors = window.getComputedStyle(elementsd, null).getPropertyValue('background-color');
                        var fontcolors = window.getComputedStyle(elementsd, null).getPropertyValue('color');
                        var bdrtopcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-top-color');
                        var bdrrightcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-right-color');
                        var bdrbottomcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-bottom-color');
                        var bdrleftcolors = window.getComputedStyle(elementsd, null).getPropertyValue('border-left-color');
                        if(bgcolors!='' && (bgcolors!="rgba(0, 0, 0, 0)" && bgcolors!="rgba(0, 0, 0,)")){
                            pushBgColorElements(bgcolors,elementsd);
                            adabgcolorelements.push(elementsd);
                            //console.log('child node name '+childElements[j].nodeName+' bg color :'+bgcolors+' class name: '+childElements[j].className);
                        }
                        if(fontcolors!='' && fontcolors!="rgb(0, 0, 0)"){
                            pushFontColorElements(fontcolors,elementsd);
                            adafontcolorelements.push(elementsd);
                            //console.log('child node name '+childElements[j].nodeName+' font color :'+fontcolors+' class name: '+childElements[j].className);
                        }
                        if(bdrtopcolors!='' && bdrtopcolors!="rgb(0, 0, 0)"){
                            pushBdrTopColorElements(bdrtopcolors,elementsd);
                            adabdrtopcolorelements.push(elementsd);
                            //console.log('child node name '+childElements[j].nodeName+' BDR color :'+bdrtopcolors+' class name: '+childElements[j].className);
                        }
                        if(bdrrightcolors!='' && bdrrightcolors!="rgb(0, 0, 0)"){
                            pushBdrRightColorElements(bdrrightcolors,elementsd);
                            adabdrrightcolorelements.push(elementsd);
                           // console.log('child node name '+childElements[j].nodeName+' BDR color :'+bdrrightcolors+' class name: '+childElements[j].className);
                        }
                        if(bdrbottomcolors!='' && bdrbottomcolors!="rgb(0, 0, 0)"){
                            pushBdrBottomColorElements(bdrbottomcolors,elementsd);
                            adabdrbottomcolorelements.push(elementsd);
                            //console.log('child node name '+childElements[j].nodeName+' BDR color :'+bdrbottomcolors+' class name: '+childElements[j].className);
                        }
                        if(bdrleftcolors!='' && bdrleftcolors!="rgb(0, 0, 0)"){
                            pushBdrLeftColorElements(bdrleftcolors,elementsd);
                            adabdrleftcolorelements.push(elementsd);
                            //console.log('child node name '+childElements[j].nodeName+' BDR color :'+bdrleftcolors+' class name: '+childElements[j].className);
                        }
                        
                        var childElements2 = childElements[j].childNodes;
                        if(childElements2.length>0){
                            getallchildementswithcolor(childElements2);
                        }
                    }
                }
    }
}
function pushBgColorElements(bgcolors,elements){
    var colorTheme = lightOrDark(bgcolors);
    switch(colorTheme){
    case 'lightest':
           lightestbgcolor.push(elements)
           break;
    case 'light':
	   lightbgcolor.push(elements)
           break;
    case 'darklight':
	   darklightbgcolor.push(elements)
           break;
    case 'dark':
	   darkbgcolor.push(elements)
           break;
    case 'darkest':
	   darkestbgcolor.push(elements)
           break;
    }
}
function pushFontColorElements(fontcolors,elements){
	var colorTheme = lightOrDark(fontcolors);
	switch(colorTheme){
	    case 'lightest':
		   lightestfontcolor.push(elements)
		   break;
	    case 'light':
	           lightfontcolor.push(elements)
		   break;
	    case 'darklight':
		   darklightfontcolor.push(elements)
		   break;
	    case 'dark':
 		   darkfontcolor.push(elements)
		   break;
	    case 'darkest':
		   darkestfontcolor.push(elements)
		   break;
	}
}
function pushBdrTopColorElements(bdrcolors,elements){
	var colorTheme = lightOrDark(bdrcolors);
	switch(colorTheme){
	    case 'lightest':
		   lightestbdrtopcolor.push(elements)
		   break;
	    case 'light':
	           lightbdrtopcolor.push(elements)
		   break;
	    case 'darklight':
		   darklightbdrtopcolor.push(elements)
		   break;
	    case 'dark':
 		   darkbdrtopcolor.push(elements)
		   break;
	    case 'darkest':
		   darkestbdrtopcolor.push(elements)
		   break;
	}
}
function pushBdrRightColorElements(bdrcolors,elements){
	var colorTheme = lightOrDark(bdrcolors);
	switch(colorTheme){
	    case 'lightest':
		   lightestbdrrightcolor.push(elements)
		   break;
	    case 'light':
	           lightbdrrightcolor.push(elements)
		   break;
	    case 'darklight':
		   darklightbdrrightcolor.push(elements)
		   break;
	    case 'dark':
 		   darkbdrrightcolor.push(elements)
		   break;
	    case 'darkest':
		   darkestbdrrightcolor.push(elements)
		   break;
	}
}
function pushBdrBottomColorElements(bdrcolors,elements){
	var colorTheme = lightOrDark(bdrcolors);
	switch(colorTheme){
	    case 'lightest':
		   lightestbdrbottomcolor.push(elements)
		   break;
	    case 'light':
	           lightbdrbottomcolor.push(elements)
		   break;
	    case 'darklight':
		   darklightbdrbottomcolor.push(elements)
		   break;
	    case 'dark':
 		   darkbdrbottomcolor.push(elements)
		   break;
	    case 'darkest':
		   darkestbdrbottomcolor.push(elements)
		   break;
	}
}
function pushBdrLeftColorElements(bdrcolors,elements){
	var colorTheme = lightOrDark(bdrcolors);
	switch(colorTheme){
	    case 'lightest':
		   lightestbdrleftcolor.push(elements)
		   break;
	    case 'light':
	           lightbdrleftcolor.push(elements)
		   break;
	    case 'darklight':
		   darklightbdrleftcolor.push(elements)
		   break;
	    case 'dark':
 		   darkbdrleftcolor.push(elements)
		   break;
	    case 'darkest':
		   darkestbdrleftcolor.push(elements)
		   break;
	}
}
function lightOrDark(color){
    // Variables for red, green, blue values
    var r, g, b, hsp;
    
    // Check the format of the color, HEX or RGB?
    if (color.match(/^rgb/)) {

        // If HEX --> store the red, green, blue values in separate variables
        color = color.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$/);
        
        r = color[1];
        g = color[2];
        b = color[3];
    } 
    else {
        
        // If RGB --> Convert it to HEX: http://gist.github.com/983661
        color = +("0x" + color.slice(1).replace( 
        color.length < 5 && /./g, '$&$&'));

        r = color >> 16;
        g = color >> 8 & 255;
        b = color & 255;
    }
    
    // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html
    hsp = Math.sqrt(
    0.299 * (r * r) +
    0.587 * (g * g) +
    0.114 * (b * b)
    );
    //console.log('color hsp: '+hsp);
    // Using the HSP value, determine whether the color is light or dark
    if (hsp>200) {
        return 'lightest';
    }else if(hsp>150){
        return 'light';
    }else if(hsp>100){
        return 'darklight';
    }else if(hsp>50){
        return 'dark';
    }else {
        return 'darkest';
    }
}
var i, n, ryb = [], rybRule = -1;
ryb[0] = "#fe2712" //red
ryb[6] = "#fb9902" //orange
ryb[12] = "#fefe33" //yellow
ryb[18] = "#66b032" //green
ryb[24] = "#0247fe" //blue
ryb[30] = "#8601af" //violet
var oRyb = [];
setTimeout(function(){

var arr = mixColors(ryb[0], ryb[6], 6);
n = 0;
for (i = 1; i < 6; i++) {
  ryb[i] = arr[n];
  n++;
}
var arr = mixColors(ryb[6], ryb[12], 6);
n = 0;
for (i = 7; i < 12; i++) {
  ryb[i] = arr[n];
  n++;
}
var arr = mixColors(ryb[12], ryb[18], 6);
n = 0;
for (i = 13; i < 18; i++) {
  ryb[i] = arr[n];
  n++;
}
var arr = mixColors(ryb[18], ryb[24], 6);
n = 0;
for (i = 19; i < 24; i++) {
  ryb[i] = arr[n];
  n++;
}
var arr = mixColors(ryb[24], ryb[30], 6);
n = 0;
for (i = 25; i < 30; i++) {
  ryb[i] = arr[n];
  n++;
}
var arr = mixColors(ryb[30], ryb[0], 6);
n = 0;
for (i = 31; i < 36; i++) {
  ryb[i] = arr[n];
  n++;
}
oRyb = ryb.slice();
},2500);

function mixColors(from, to, n) {
  var i, z, arr = [], fromObj, toObj, r, g, b, resultObj;
  fromObj = w3color(to);
  toObj = w3color(from);
  r = fromObj.red;
  g = fromObj.green;
  b = fromObj.blue;
  for (i = 1; i < n; i++) {
    z = i / n;
    r = z * fromObj.red + (1 - z) * toObj.red;
    g = z * fromObj.green + (1 - z) * toObj.green;
    b = z * fromObj.blue + (1 - z) * toObj.blue;
    resultObj = w3color("rgb(" + r + "," + g + "," + b + ")");
    arr.push(resultObj.toHexString());
  }
  return arr;
}

var col1, col2, col3, col4, col5;
function changeRule(n) {

  var i, c, t1, t2, a1, a2, x, sc1, sc2, satval, lightval, col1light, col5light, col4light, col;
  satval = document.getElementById("adasatval").value;
  lightval = document.getElementById("adalightval").value;
  rybRule = n;
  changesrulecols = rybNo;
  col1light = 0.9;
  col5light = 0.12;  
  if (n == 0) {
    x = w3color(ryb[rybNo]);
    col3 = x.toHexString();
    col1light = 0.93;
    x.lightness = (col1light * (lightval / 100));
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col1 = x.toHexString();
    x = w3color(ryb[rybNo]);
    x.lighter(20);
    col2 = x.toHexString();
    x = w3color(ryb[rybNo]);
    x.darker(20);
    col4 = x.toHexString();
    x = w3color(ryb[rybNo]);
    x.lightness = (col5light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col5 = x.toHexString();
    clearLine();    
    drawLine((rybNo * (2 / 36)));
  }
  if (n == 1) {
    a1 = rybNo - 3;
    if (a1 < 0) a1 = 36 + a1;
    a2 = rybNo + 3;
    if (a2 > 35) a2 = a2 - 36;
    col3 = ryb[rybNo];
    col2 = ryb[a1];
    col4 = ryb[a2];
    x = w3color(ryb[a1]);
    x.lightness = (col1light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col1 = x.toHexString();
    x = w3color(ryb[a2]);
    x.lightness = (col5light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col5 = x.toHexString();
    clearLine();    
    drawLine((rybNo * (2 / 36)));
    drawLine((a1 * (2 / 36)));
    drawLine((a2 * (2 / 36)));
  }
  if (n == 2) {
    col3 = ryb[rybNo];
    c = rybNo + 18;
    if (c > 35) c = c - 36;
    col2 = ryb[c];
    x = w3color(ryb[rybNo]);
    x.lightness = (col5light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col5 = x.toHexString();
    x = w3color(ryb[c]);
    x.lightness = (col1light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col1 = x.toHexString();
    x = w3color(ryb[rybNo]);
    col4light = 0.4;
    x.lightness = (col4light * (lightval / 100));
    x.sat = (satval * 8) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col4 = x.toHexString();
    clearLine();    
    drawLine((rybNo * (2 / 36)));
    drawLine((c * (2 / 36)));
  }
  if (n == 3) {
    col3 = ryb[rybNo];
    t1 = rybNo + 12;
    if (t1 > 35) t1 = t1 - 36;
    t2 = rybNo + 24;
    if (t2 > 35) t2 = t2 - 36;
    col2 = ryb[t2];
    col4 = ryb[t1];
    x = w3color(ryb[rybNo]);
    x.lightness = (col5light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col5 = x.toHexString();
    x = w3color(ryb[t2]);
    x.lightness = (col1light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col1 = x.toHexString();
    clearLine();    
    drawLine((rybNo * (2 / 36)));
    drawLine((t1 * (2 / 36)));
    drawLine((t2 * (2 / 36)));
  }
  if (n == 4) {
    col3 = ryb[rybNo];
    sc1 = rybNo + 15;
    if (sc1 > 35) sc1 = sc1 - 36;
    sc2 = rybNo + 21;
    if (sc2 > 35) sc2 = sc2 - 36;
    col4 = ryb[sc2];
    col2 = ryb[sc1];
    x = w3color(ryb[sc2]);
    x.lightness = (col5light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col5 = x.toHexString();
    x = w3color(ryb[sc1]);
    x.lightness = (col1light * (lightval / 100));
    x.sat = (satval * 7) / 1000;
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    col1 = x.toHexString();
    clearLine();
    drawLine((rybNo * (2 / 36)));
    drawLine((sc1 * (2 / 36)));
    drawLine((sc2 * (2 / 36)));
  }
  drawWebPage();
}


function drawWebPage() {
  var x, l, i, col;
  //x = document.getElementsByClassName("txcolor1");
  x = lightestfontcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.color = col1;
  }
  x = lightfontcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.color = col2;
  }
  x = darklightfontcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.color = col3;
  }
  x = darkfontcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.color = col4;
  }
  x = darkestfontcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.color = col5;
  }
  x = lightestbgcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.backgroundColor = col1;
  }
  x = lightbgcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.backgroundColor = col2;
  }
  x = darklightbgcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.backgroundColor = col3;
  }
  x = darkbgcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.backgroundColor = col4;
  }
  x = darkestbgcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.backgroundColor = col5;
  }
  /*x = document.getElementsByClassName("borderrightcolor3");
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderColor = col3;
  }*/
  x = lightestbdrtopcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderTopColor = col1;
  }
  x = lightbdrtopcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderTopColor = col2;
  }
  x = darklightbdrtopcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderTopColor = col3;
  }
  x = darkbdrtopcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderTopColor = col4;
  }
  x = darkestbdrtopcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderTopColor = col5;
  }


  x = lightestbdrrightcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderRightColor = col1;
  }
  x = lightbdrrightcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderRightColor = col2;
  }
  x = darklightbdrrightcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderRightColor = col3;
  }
  x = darkbdrrightcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderRightColor = col4;
  }
  x = darkestbdrrightcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderRightColor = col5;
  }


  x = lightestbdrbottomcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderBottomColor = col1;
  }
  x = lightbdrbottomcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderBottomColor = col2;
  }
  x = darklightbdrbottomcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderBottomColor = col3;
  }
  x = darkbdrbottomcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderBottomColor = col4;
  }
  x = darkestbdrbottomcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderBottomColor = col5;
  }


  x = lightestbdrleftcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderLeftColor = col1;
  }
  x = lightbdrleftcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderLeftColor = col2;
  }
  x = darklightbdrleftcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderLeftColor = col3;
  }
  x = darkbdrleftcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderLeftColor = col4;
  }
  x = darkestbdrleftcolor;
  l = x.length;
  for (i = 0; i < l; i++) {
    x[i].style.borderLeftColor = col5;
  }
}

var canvas, ctx, lastend, myColor, radius, rybNo;
function initCanvas(rn) {
  rybNo = rn;
  canvas = document.getElementById("adawhealcanvas");
  ctx = canvas.getContext("2d");
  lastend = 1.474 * Math.PI;
  myColor = ryb;
  drawCanvas()
  clearLine();
  detectEdge();
  radius = (canvas.height / 2) * 0.90;
  document.getElementById('adawhealcanvas').onclick = function getCursorPosition(event) {
    var rect = canvas.getBoundingClientRect();
    var x = event.clientX - rect.left;
    var y = event.clientY - rect.top;
    var i, c, a1, a2, t1, t2, sc1, sc2, r1, r2, r3, sq1, sq2, sq3;
    rgb=ctx.getImageData(x, y, 1, 1).data;
    var c = w3color("rgb(" + rgb[0] + ", " + rgb[1] + ", " + rgb[2] + ")");
    for (i = 0; i < ryb.length; i++) {
      if (c.toHexString() == ryb[i]) {
        d = i;
        break;
      }
    }
    rybNo = d;
    x = w3color(ryb[rybNo]);
    changeRule(rybRule);
  }
  document.getElementById('adawhealcanvas').onmousemove = function (event) {
    var rect = canvas.getBoundingClientRect();
    var x = event.clientX - rect.left;
    var y = event.clientY - rect.top;
    var i, c, a1, a2, t1, t2, sc1, sc2, r1, r2, r3, sq1, sq2, sq3;
    rgb=ctx.getImageData(x, y, 1, 1).data;
    var c = w3color("rgb(" + rgb[0] + ", " + rgb[1] + ", " + rgb[2] + ")");
    document.getElementById("adawhealcanvas").style.cursor = "default";
    for (i = 0; i < ryb.length; i++) {
      if (c.toHexString() == ryb[i]) {
        document.getElementById("adawhealcanvas").style.cursor = "pointer";
      }
    }
  }
}

function drawCanvas() {
  var x;
  ctx.setTransform(1,0,0,1,0,0);
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  for (var i = 0; i < myColor.length; i++) {
    ctx.fillStyle = myColor[i];
    ctx.beginPath();
    ctx.moveTo(canvas.width / 2, canvas.height / 2);
    ctx.arc(canvas.width / 2, canvas.height / 2, canvas.height / 2, lastend, lastend + (Math.PI * 2 * ((360 / myColor.length) / 360)), false);
    ctx.lineTo(canvas.width / 2, canvas.height / 2);
    ctx.fill();
    lastend += Math.PI * 2 * ((360 / myColor.length) / 360);
  }
}

function clearLine() {
  ctx.setTransform(1,0,0,1,0,0);
  var lastend = 0;
  var myColor = ["#ffffff"];
  for (var i = 0; i < myColor.length; i++) {
    ctx.fillStyle = myColor[i];
    ctx.beginPath();
    ctx.moveTo(canvas.width / 2, canvas.height / 2);
    ctx.arc(canvas.width / 2, canvas.height / 2, canvas.height / 2.5, lastend, lastend + (Math.PI * 2 * ((360 / myColor.length) / 360)), true);
    ctx.lineTo(canvas.width / 2, canvas.height / 2);
    ctx.fill();
    lastend += Math.PI * 2 * ((360 / myColor.length) / 360);
  }
}



function drawLine(degrees) {
  ctx.setTransform(1,0,0,1,0,0);
  ctx.translate(canvas.height / 2, canvas.height / 2);
  ctx.beginPath();
  ctx.lineWidth = radius * 0.07;
  ctx.lineCap = "round";
  ctx.moveTo(0,0);
  ctx.rotate(degrees * Math.PI);
  ctx.lineTo(0, - (radius * 0.75));
  ctx.stroke();
  ctx.rotate(-(degrees) * Math.PI);
}



function satlight() {
  var lightval, satval, i, x;
  lightval = document.getElementById("adalightval").value;
  satval = document.getElementById("adasatval").value;
  for (i = 0; i < oRyb.length; i++) {
    x = w3color(oRyb[i]);
    x.lightness = (x.lightness * (lightval / 100));
    x.sat = (x.sat * (satval / 100));
    x = w3color("hsl(" + x.hue + "," + x.sat + "," + x.lightness + ")");
    ryb[i] = x.toHexString();
  }
  drawCanvas();
  changeRule(rybRule);
}

var wheelspin, wheelspincounter, wheelspinspeed, wheelstopspeed;
function colorwheelspin() {
  wheelspincounter = 0, wheelspinspeed = 30, wheelstopspeed = 1;
  spinspinspin();
}


function spinspinspin() {
  wheelspincounter++;
  if (wheelspincounter > 50) {
    wheelspinspeed += wheelstopspeed;
    wheelstopspeed = wheelstopspeed * 1.1;
  }
  if (wheelspinspeed > 200) {
    window.clearTimeout(wheelspin);
    return;
  }
  rybNo = (rybNo + 1);
  if (rybNo > 35) {rybNo = 0;}
  wheelspin = window.setTimeout(function () {
    changeRule(rybRule);
    spinspinspin();
  }, wheelspinspeed);
}

function detectEdge() {
  var i, y, x = navigator.userAgent;
  if (x.indexOf("Edge") > -1) {
    y = document.getElementById("adaslidecontainer").getElementsByClassName("adainputslider");
    for (i = 0; i < y.length; i++) {
      y[i].style.height = "24px";
    }
  }
};

function showMonochromeColorWheelBox(){
    var monochromecolors = document.getElementById('monochromecolors');
    monochromecolors.style.display = "block";
    initCanvas(changesrulecols);changeRule(0);
}
function hideMonochromeColorWheelBox(){
var x;
  x = adabgcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('background-color');
        } else {
            x[i].style.removeAttribute('background-color');
        }
  }
  x = adafontcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('color');
        } else {
            x[i].style.removeAttribute('color');
        }
  }
  x = adabdrtopcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('border-top-color');
        } else {
            x[i].style.removeAttribute('border-top-color');
        }
  }  
  x = adabdrrightcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('border-right-color');
        } else {
            x[i].style.removeAttribute('border-right-color');
        }
  } 
  x = adabdrbottomcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('border-bottom-color');
        } else {
            x[i].style.removeAttribute('border-bottom-color');
        }
  } 
  x = adabdrleftcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('border-left-color');
        } else {
            x[i].style.removeAttribute('border-left-color');
        }
  }
  var monochromecolors = document.getElementById('monochromecolors');
  monochromecolors.style.display = "none";
  changesrulecols = 18;
}

function satlightincreaseval(){
    var vals = document.getElementById("adasatval").value;
    if((parseInt(vals)+10)<=90){
         document.getElementById("adasatval").value = parseInt(vals)+10;
    }else{
        document.getElementById("adasatval").value = 100;
    }
    satlight();
}
function satlightdecreaseval(){
    var vals = document.getElementById("adasatval").value;
    if((vals-10)>40){
         document.getElementById("adasatval").value = vals-10;
    }else{
        document.getElementById("adasatval").value = 40;
    }
    satlight();
}
function adalightincreaseval(){
    var vals = document.getElementById("adalightval").value;
    if((parseInt(vals)+10)<=130){
         document.getElementById("adalightval").value = parseInt(vals)+10;
    }else{
        document.getElementById("adalightval").value = 140;
    }
    satlight();
}
function adasatlightdecreaseval(){
    var vals = document.getElementById("adalightval").value;
    if((vals-10)>60){
         document.getElementById("adalightval").value = vals-10;
    }else{
        document.getElementById("adalightval").value = 60;
    }
    satlight();
}

function adatextaligncenter(){
    var enabletootlip = document.getElementById("adatextaligncenter");
    if(enabletootlip){
        var adaright = document.getElementById("adatextalignright");
        var adaleft = document.getElementById("adatextalignleft");
        var adajustify = document.getElementById("adatextalignjustify");
        if (hasInnsightAdaClass(body2,'enableadatextaligncenter') ) {
            removeInnsightAdaClass(body2, 'enableadatextaligncenter');
            removeInnsightAdaClass(enabletootlip, 'adaiconsactive');
            removeInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextaligncenter',"",-1);
        }else{
            removeInnsightAdaClass(body2, 'enableadatextalignleft');
            removeInnsightAdaClass(body2, 'enableadatextalignright');
            removeInnsightAdaClass(body2, 'enableadatextalignjustify');

            if(adaright){
                removeInnsightAdaClass(adaright, 'adaiconsactive');
                removeInnsightAdaClass(adaright, 'ADA-outer-bor');
            }
            if(adaleft){
                removeInnsightAdaClass(adaleft, 'adaiconsactive');
                removeInnsightAdaClass(adaleft, 'ADA-outer-bor');
            }
            if(adajustify){
                removeInnsightAdaClass(adajustify, 'adaiconsactive');
                removeInnsightAdaClass(adajustify, 'ADA-outer-bor');
            }

            addInnsightAdaClass(body2, 'enableadatextaligncenter');
            addInnsightAdaClass(enabletootlip, 'adaiconsactive');
            addInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextaligncenter', 'adatextaligncenter', 365);
        }
    }
}
function adatextalignleft(){
    var enabletootlip = document.getElementById("adatextalignleft");
    if(enabletootlip){
        var adaright = document.getElementById("adatextalignright");
        var adajustify = document.getElementById("adatextalignjustify");
        var adacenter = document.getElementById("adatextaligncenter");
        if (hasInnsightAdaClass(body2,'enableadatextalignleft') ) {
            removeInnsightAdaClass(body2, 'enableadatextalignleft');
            removeInnsightAdaClass(enabletootlip, 'adaiconsactive');
            removeInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextalignleft',"",-1);
        } else {
            removeInnsightAdaClass(body2, 'enableadatextaligncenter');
            removeInnsightAdaClass(body2, 'enableadatextalignright');
            removeInnsightAdaClass(body2, 'enableadatextalignjustify');

            if(adaright){
                removeInnsightAdaClass(adaright, 'adaiconsactive');
                removeInnsightAdaClass(adaright, 'ADA-outer-bor');
            }
            if(adacenter){
                removeInnsightAdaClass(adacenter, 'adaiconsactive');
                removeInnsightAdaClass(adacenter, 'ADA-outer-bor');
            }
            if(adajustify){
                removeInnsightAdaClass(adajustify, 'adaiconsactive');
                removeInnsightAdaClass(adajustify, 'ADA-outer-bor');
            }

            addInnsightAdaClass(body2, 'enableadatextalignleft');
            addInnsightAdaClass(enabletootlip, 'adaiconsactive');
            addInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextalignleft', 'adatextalignleft', 365);
        }
    }
}
function adatextalignright(){
    var enabletootlip = document.getElementById("adatextalignright");
    if(enabletootlip){
        var adajustify = document.getElementById("adatextalignjustify");
        var adaleft = document.getElementById("adatextalignleft");
        var adacenter = document.getElementById("adatextaligncenter");
        if (hasInnsightAdaClass(body2,'enableadatextalignright') ) {
            removeInnsightAdaClass(body2, 'enableadatextalignright');
            removeInnsightAdaClass(enabletootlip, 'adaiconsactive');
            removeInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextalignright',"",-1);
        } else {
            removeInnsightAdaClass(body2, 'enableadatextalignleft');
            removeInnsightAdaClass(body2, 'enableadatextaligncenter');
            removeInnsightAdaClass(body2, 'enableadatextalignjustify');

            if(adaleft){
                removeInnsightAdaClass(adaleft, 'adaiconsactive');
                removeInnsightAdaClass(adaleft, 'ADA-outer-bor');
            }
            if(adacenter){
                removeInnsightAdaClass(adacenter, 'adaiconsactive');
                removeInnsightAdaClass(adacenter, 'ADA-outer-bor');
            }
            if(adajustify){
                removeInnsightAdaClass(adajustify, 'adaiconsactive');
                removeInnsightAdaClass(adajustify, 'ADA-outer-bor');
            }

            addInnsightAdaClass(body2, 'enableadatextalignright');
            addInnsightAdaClass(enabletootlip, 'adaiconsactive');
            addInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextalignright', 'adatextalignright', 365);
        }
    }
}
function adatextalignjustify(){
    var enabletootlip = document.getElementById("adatextalignjustify");
    if(enabletootlip){
        var adaright = document.getElementById("adatextalignright");
        var adaleft = document.getElementById("adatextalignleft");
        var adacenter = document.getElementById("adatextaligncenter");
        if (hasInnsightAdaClass(body2,'enableadatextalignjustify') ) {
            removeInnsightAdaClass(body2, 'enableadatextalignjustify');
            removeInnsightAdaClass(enabletootlip, 'adaiconsactive');
            removeInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextalignjustify',"",-1);
        } else {
            removeInnsightAdaClass(body2, 'enableadatextalignleft');
            removeInnsightAdaClass(body2, 'enableadatextaligncenter');
            removeInnsightAdaClass(body2, 'enableadatextalignright');

            if(adaleft){
                removeInnsightAdaClass(adaleft, 'adaiconsactive');
                removeInnsightAdaClass(adaleft, 'ADA-outer-bor');
            }
            if(adacenter){
                removeInnsightAdaClass(adacenter, 'adaiconsactive');
                removeInnsightAdaClass(adacenter, 'ADA-outer-bor');
            }
            if(adaright){
                removeInnsightAdaClass(adaright, 'adaiconsactive');
                removeInnsightAdaClass(adaright, 'ADA-outer-bor');
            }

            addInnsightAdaClass(body2, 'enableadatextalignjustify');
            addInnsightAdaClass(enabletootlip, 'adaiconsactive');
            addInnsightAdaClass(enabletootlip, 'ADA-outer-bor');
            setInnsightAdaCookie('adatextalignjustify', 'adatextalignjustify', 365);
        }
    }
}
function adaIncreaseWordSpacing(){ 
    wordspacing = parseInt(wordspacing);
    var wordspacinglevel = wordspacing;
    if(wordspacinglevel<10 && wordspacinglevel>=-10){ 
        //var textElement = textNodesUnder(body2);
        var textElement = adawordspaceelements;
        var lth = textElement.length;
        for (var i = 0; i < lth; i++) {
            /*console.log(textElement[i].nodeName);
            if (textElement[i].style.wordSpacing == "") {
                var el = textElement[i];
                var style = window.getComputedStyle(el, null).getPropertyValue('word-spacing');
                var wordspacingSize = parseFloat(style); 
                if(wordspacingSize!='' && wordspacingSize>0){
                    textElement[i].style.wordSpacing = (wordspacingSize+2)+'px';
                }else {
                   textElement[i].style.wordSpacing = (wordspacinglevel+2)+'px';
                }
            }else{
                textElement[i].style.wordSpacing = parseFloat(textElement[i].style.wordSpacing) + 2 + "px";
            }*/
            textElement[i].style.wordSpacing = wordspacing + 2 + "px";
        }    


          var increaseWordSpacing = document.getElementById("adaIncreaseWordSpacing");
          var decreaseWordSpacing = document.getElementById("adaDecreaseWordSpacing");
          if(increaseWordSpacing){
            addInnsightAdaClass(increaseWordSpacing, 'adaiconsactive');
            addInnsightAdaClass(increaseWordSpacing, 'ADA-outer-bor');
          }
          if(decreaseWordSpacing){
            removeInnsightAdaClass(decreaseWordSpacing, 'adaiconsactive');
            removeInnsightAdaClass(decreaseWordSpacing, 'ADA-outer-bor');
          }
            if(wordspacing<10 && wordspacing>=-10){
                wordspacing = wordspacing+2;
            }
            wordspacinglevel = parseFloat(wordspacinglevel)+2;

        adaIncreaseWordSpacinglevelindicators(wordspacing);
        setInnsightAdaCookie('adaIncreaseWordSpacing', 'adaIncreaseWordSpacing', 365);
        setInnsightAdaCookie('wordspacing', wordspacing, 365);
        setInnsightAdaCookie('wordspacinglevel', wordspacinglevel, 365);
    }
}

function adaDecreaseWordSpacing(){ 
    wordspacing = parseInt(wordspacing);
    var wordspacinglevel = wordspacing;
    if(wordspacinglevel<=10 && wordspacinglevel>-10){ 
      var textElement = adawordspaceelements;
        //var textElement = textNodesUnder(body2);
        var lth = textElement.length;
        for (var i = 0; i < lth; i++) {
            /*if (textElement[i].style.wordSpacing == "") {
                var el = textElement[i];
                var style = window.getComputedStyle(el, null).getPropertyValue('word-spacing');
                var wordspacingSize = parseFloat(style); 
                if(wordspacingSize!='' && wordspacingSize>0){
                    textElement[i].style.wordSpacing = (wordspacingSize-2)+'px';
                }else {
                   textElement[i].style.wordSpacing = (wordspacinglevel-2)+'px';
                }
            }else{
                textElement[i].style.wordSpacing = parseFloat(textElement[i].style.wordSpacing) - 2 + "px";
            }*/
            textElement[i].style.wordSpacing = wordspacing - 2 + "px";
        }    
        var increaseWordSpacing = document.getElementById("adaIncreaseWordSpacing");
          var decreaseWordSpacing = document.getElementById("adaDecreaseWordSpacing");
        if(increaseWordSpacing){
            removeInnsightAdaClass(increaseWordSpacing, 'adaiconsactive');
            removeInnsightAdaClass(increaseWordSpacing, 'ADA-outer-bor');
        }
        if(decreaseWordSpacing){
            addInnsightAdaClass(decreaseWordSpacing, 'adaiconsactive');
            addInnsightAdaClass(decreaseWordSpacing, 'ADA-outer-bor');
        }
        if(wordspacing<=10 && wordspacing>-10){
            wordspacing = wordspacing-2;
        }
        wordspacinglevel = parseFloat(wordspacinglevel)-2;
        adaDecreaseWordSpacinglevelindicators(wordspacing);
        setInnsightAdaCookie('adaDecreaseWordSpacing', 'adaDecreaseWordSpacing', 365);
        setInnsightAdaCookie('wordspacing', wordspacing, 365);
        setInnsightAdaCookie('wordspacinglevel', wordspacinglevel, 365);
    }
}
function adaIncreaseWordSpacinglevelindicators(wordspacingdrs){
    var wordspacinglevelbox = document.getElementById("wordspacingincreaselevelbox");
    var wordspacinglevelbox2 = document.getElementById("wordspacingdecreaselevelbox"); 
    if(wordspacingdrs==0){
      if(wordspacinglevelbox){
          wordspacinglevelbox.innerHTML='';
      }
      if(wordspacinglevelbox2){
          wordspacinglevelbox2.innerHTML='';
      }
    }else if(wordspacingdrs==2){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==4){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==6){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==8){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==10){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-2){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-4){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-6){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-8){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }
}
function adaDecreaseWordSpacinglevelindicators(wordspacingdrs){
    var wordspacinglevelbox = document.getElementById("wordspacingincreaselevelbox");
    var wordspacinglevelbox2 = document.getElementById("wordspacingdecreaselevelbox"); 
    if(wordspacingdrs==0){
      if(wordspacinglevelbox){
          wordspacinglevelbox.innerHTML='';
      }
      if(wordspacinglevelbox2){
          wordspacinglevelbox2.innerHTML='';
      }
    }else if(wordspacingdrs==2){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==4){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==6){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==8){
        if(wordspacinglevelbox){
              wordspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-2){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-4){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-6){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-8){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(wordspacingdrs==-10){
        if(wordspacinglevelbox2){
              wordspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }
}

function adaIncreaseLetterSpacing(){ 
    letterspacing = parseFloat(letterspacing);
    var letterspacinglevel = letterspacing;
    if(letterspacinglevel<1 && letterspacinglevel>=-1){ 
        //var textElement = textNodesUnder(body2);
        var textElement = adawordspaceelements;
        var lth = textElement.length;
        for (var i = 0; i < lth; i++) {
            /*console.log(textElement[i].nodeName);
            if (textElement[i].style.wordSpacing == "") {
                var el = textElement[i];
                var style = window.getComputedStyle(el, null).getPropertyValue('word-spacing');
                var wordspacingSize = parseFloat(style); 
                if(wordspacingSize!='' && wordspacingSize>0){
                    textElement[i].style.wordSpacing = (wordspacingSize+2)+'px';
                }else {
                   textElement[i].style.wordSpacing = (wordspacinglevel+2)+'px';
                }
            }else{
                textElement[i].style.wordSpacing = parseFloat(textElement[i].style.wordSpacing) + 2 + "px";
            }*/
            textElement[i].style.letterSpacing = (parseFloat(letterspacing) + parseFloat(0.2)).toFixed(1) + "px";
        }    


          var increaseLetterSpacing = document.getElementById("adaIncreaseLetterSpacing");
          var decreaseLetterSpacing = document.getElementById("adaDecreaseLetterSpacing");
          if(increaseLetterSpacing){
            addInnsightAdaClass(increaseLetterSpacing, 'adaiconsactive');
            addInnsightAdaClass(increaseLetterSpacing, 'ADA-outer-bor');
          }
          if(decreaseLetterSpacing){
            removeInnsightAdaClass(decreaseLetterSpacing, 'adaiconsactive');
            removeInnsightAdaClass(decreaseLetterSpacing, 'ADA-outer-bor');
          }
            if(letterspacing<1 && letterspacing>=-1){
                letterspacing = (parseFloat(letterspacing) + parseFloat(0.2)).toFixed(1);
            }
            letterspacinglevel = parseFloat(letterspacinglevel)+parseFloat(0.2).toFixed(1);

        adaIncreaseLetterSpacinglevelindicators(letterspacing);
        setInnsightAdaCookie('adaIncreaseLetterSpacing', 'adaIncreaseLetterSpacing', 365);
        setInnsightAdaCookie('letterspacing', letterspacing, 365);
        setInnsightAdaCookie('letterspacinglevel', letterspacinglevel, 365);
    }
}

function adaDecreaseLetterSpacing(){ 
    letterspacing = parseFloat(letterspacing);
    var letterspacinglevel = letterspacing;
    if(letterspacinglevel<=1 && letterspacinglevel>-1){ 
      var textElement = adawordspaceelements;
        //var textElement = textNodesUnder(body2);
        var lth = textElement.length;
        for (var i = 0; i < lth; i++) {
            /*if (textElement[i].style.wordSpacing == "") {
                var el = textElement[i];
                var style = window.getComputedStyle(el, null).getPropertyValue('word-spacing');
                var wordspacingSize = parseFloat(style); 
                if(wordspacingSize!='' && wordspacingSize>0){
                    textElement[i].style.wordSpacing = (wordspacingSize-2)+'px';
                }else {
                   textElement[i].style.wordSpacing = (wordspacinglevel-2)+'px';
                }
            }else{
                textElement[i].style.wordSpacing = parseFloat(textElement[i].style.wordSpacing) - 2 + "px";
            }*/
            textElement[i].style.letterSpacing = (parseFloat(letterspacing) - parseFloat(0.2)).toFixed(1) + "px";
        }    
        var increaseLetterSpacing = document.getElementById("adaIncreaseLetterSpacing");
          var decreaseLetterSpacing = document.getElementById("adaDecreaseLetterSpacing");
        if(increaseLetterSpacing){
            removeInnsightAdaClass(increaseLetterSpacing, 'adaiconsactive');
            removeInnsightAdaClass(increaseLetterSpacing, 'ADA-outer-bor');
        }
        if(decreaseLetterSpacing){
            addInnsightAdaClass(decreaseLetterSpacing, 'adaiconsactive');
            addInnsightAdaClass(decreaseLetterSpacing, 'ADA-outer-bor');
        }
        if(letterspacing<=1 && letterspacing>-1){
            letterspacing = (parseFloat(letterspacing) - parseFloat(0.2)).toFixed(1);
        }
        letterspacinglevel = parseFloat(letterspacinglevel)-parseFloat(0.2).toFixed(1);
        adaDecreaseLetterSpacinglevelindicators(letterspacing);
        setInnsightAdaCookie('adaDecreaseLetterSpacing', 'adaDecreaseLetterSpacing', 365);
        setInnsightAdaCookie('letterspacing', letterspacing, 365);
        setInnsightAdaCookie('letterspacinglevel', letterspacinglevel, 365);
    }
}
function adaIncreaseLetterSpacinglevelindicators(letterspacingss){
    var letterspacingdrs = parseFloat(letterspacingss);
    var letterspacinglevelbox = document.getElementById("letterspacingincreaselevelbox");
    var letterspacinglevelbox2 = document.getElementById("letterspacingdecreaselevelbox"); 
    if(letterspacingdrs==0){
      if(letterspacinglevelbox){
          letterspacinglevelbox.innerHTML='';
      }
      if(letterspacinglevelbox2){
          letterspacinglevelbox2.innerHTML='';
      }
    }else if(letterspacingdrs==0.2){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==0.4){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==0.6){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==0.8){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==1.0){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.2){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.4){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.6){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.8){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }
}
function adaDecreaseLetterSpacinglevelindicators(letterspacingss){
    var letterspacingdrs = parseFloat(letterspacingss);
   var letterspacinglevelbox = document.getElementById("letterspacingincreaselevelbox");
    var letterspacinglevelbox2 = document.getElementById("letterspacingdecreaselevelbox"); 
    if(letterspacingdrs==0){
      if(letterspacinglevelbox){
          letterspacinglevelbox.innerHTML='';
      }
      if(letterspacinglevelbox2){
          letterspacinglevelbox2.innerHTML='';
      }
    }else if(letterspacingdrs==0.2){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==0.4){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==0.6){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==0.8){
        if(letterspacinglevelbox){
              letterspacinglevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.2){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.4){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.6){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-0.8){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(letterspacingdrs==-1.0){
        if(letterspacinglevelbox2){
              letterspacinglevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }
}
function resettextpropertystyles(){
    var x = adawordspaceelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('word-spacing');
            x[i].style.removeProperty('letter-spacing');
            x[i].style.removeProperty('line-height');
        } else {
            x[i].style.removeAttribute('word-spacing');
            x[i].style.removeAttribute('letter-spacing');
            x[i].style.removeAttribute('line-height');
        }
  }
    var wordspacinglevelbox = document.getElementById("wordspacingincreaselevelbox");
    var wordspacinglevelbox2 = document.getElementById("wordspacingdecreaselevelbox");
    var letterspacinglevelbox = document.getElementById("letterspacingincreaselevelbox");
    var letterspacinglevelbox2 = document.getElementById("letterspacingdecreaselevelbox");
    var lineheightlevelbox = document.getElementById("lineheightincreaselevelbox");
    var lineheightlevelbox2 = document.getElementById("lineheightdecreaselevelbox");
    if(wordspacinglevelbox){
        wordspacinglevelbox.innerHTML='';
    }
    if(wordspacinglevelbox2){
        wordspacinglevelbox2.innerHTML='';
    }
    if(letterspacinglevelbox){
        letterspacinglevelbox.innerHTML='';
    }
    if(letterspacinglevelbox2){
        letterspacinglevelbox2.innerHTML='';
    }
    if(lineheightlevelbox){
        lineheightlevelbox.innerHTML='';
    }
    if(lineheightlevelbox2){
        lineheightlevelbox2.innerHTML='';
    }
    wordspacing = 0;
    letterspacing = 0;
    lineheight = 0;
}
function getuniqueArray(arraydata){
   var flags = [], output = [], l = arraydata.length, i;
    for( i=0; i<l; i++) {
        if( flags[arraydata[i]]) continue;
        flags[arraydata[i]] = true;
        output.push(arraydata[i]);
    }
    return output;
}
function adaIncreaseLineHeight(){ 
    lineheight = parseFloat(lineheight);
    var lineheightlevel = lineheight;
    if(lineheightlevel<20 && lineheightlevel>=-20){ 
        //var textElement = textNodesUnder(body2);
        var textElement = adawordspaceelements;
        var lth = textElement.length;
        for (var i = 0; i < lth; i++) {
            if (textElement[i].style.lineHeight == "") {
                var el = textElement[i];
                var style = window.getComputedStyle(el, null).getPropertyValue('line-height');
                var lineHeightSize = parseFloat(style); 
                if(lineHeightSize!='' && lineHeightSize>0){
                    textElement[i].style.lineHeight = (lineHeightSize+4)+'px';
                }else {
                   textElement[i].style.lineHeight = (lineheightlevel+4)+'px';
                }
            }else{
                textElement[i].style.lineHeight = (parseFloat(textElement[i].style.lineHeight) + 4) + "px";
            }
            //textElement[i].style.lineHeight = (parseFloat(lineheight) + parseFloat(4)) + "px";
        }    


          var increaseLineHeight = document.getElementById("adaIncreaseLineHeight");
          var decreaseLineHeight = document.getElementById("adaDecreaseLineHeight");
          if(increaseLineHeight){
            addInnsightAdaClass(increaseLineHeight, 'adaiconsactive');
            addInnsightAdaClass(increaseLineHeight, 'ADA-outer-bor');
          }
          if(decreaseLineHeight){
            removeInnsightAdaClass(decreaseLineHeight, 'adaiconsactive');
            removeInnsightAdaClass(decreaseLineHeight, 'ADA-outer-bor');
          }
            if(lineheight<20 && lineheight>=-20){
                lineheight = (parseFloat(lineheight) + parseFloat(4));
            }
            lineheightlevel = parseFloat(lineheightlevel)+parseFloat(4);

        adaIncreaseLineHeightlevelindicators(lineheight);
        setInnsightAdaCookie('adaIncreaseLineHeight', 'adaIncreaseLineHeight', 365);
        setInnsightAdaCookie('lineheight', lineheight, 365);
        setInnsightAdaCookie('lineheightlevel', lineheightlevel, 365);
    }
}

function adaDecreaseLineHeight(){ 
    lineheight = parseFloat(lineheight);
    var lineheightlevel = lineheight;
    if(lineheightlevel<=20 && lineheightlevel>-20){ 
      var textElement = adawordspaceelements;
        //var textElement = textNodesUnder(body2);
        var lth = textElement.length;
        for (var i = 0; i < lth; i++) {
            if (textElement[i].style.lineHeight == "") {
                var el = textElement[i];
                var style = window.getComputedStyle(el, null).getPropertyValue('line-height');
                var lineHeightSize = parseFloat(style); 
                if(lineHeightSize!=''){
                    textElement[i].style.lineHeight = (lineHeightSize-4)+'px';
                }else {
                   textElement[i].style.lineHeight = (lineheightlevel-4)+'px';
                }
            }else{
                textElement[i].style.lineHeight = (parseFloat(textElement[i].style.lineHeight) - 4) + "px";
            }
            //textElement[i].style.lineHeight = (parseFloat(lineheight) - parseFloat(4)) + "px";
        }    
        var increaseLineHeight = document.getElementById("adaIncreaseLineHeight");
        var decreaseLineHeight = document.getElementById("adaDecreaseLineHeight");
        if(increaseLineHeight){
            removeInnsightAdaClass(increaseLineHeight, 'adaiconsactive');
            removeInnsightAdaClass(increaseLineHeight, 'ADA-outer-bor');
        }
        if(decreaseLineHeight){
            addInnsightAdaClass(decreaseLineHeight, 'adaiconsactive');
            addInnsightAdaClass(decreaseLineHeight, 'ADA-outer-bor');
        }
        if(lineheight<=20 && lineheight>-20){
            lineheight = (parseFloat(lineheight) - 4);
        }
        lineheightlevel = parseFloat(lineheightlevel)-4;
        adaDecreaseLineHeightlevelindicators(lineheight);
        setInnsightAdaCookie('adaDecreaseLineHeight', 'adaDecreaseLineHeight', 365);
        setInnsightAdaCookie('lineheight', lineheight, 365);
        setInnsightAdaCookie('lineheightlevel', lineheightlevel, 365);
    }
}
function adaIncreaseLineHeightlevelindicators(lineheightss){
    var lineheightdrs = parseFloat(lineheightss);
    var lineheightlevelbox = document.getElementById("lineheightincreaselevelbox");
    var lineheightlevelbox2 = document.getElementById("lineheightdecreaselevelbox"); 
    if(lineheightdrs==0){
      if(lineheightlevelbox){
          lineheightlevelbox.innerHTML='';
      }
      if(lineheightlevelbox2){
          lineheightlevelbox2.innerHTML='';
      }
    }else if(lineheightdrs==4){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==8){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==12){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==16){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==20){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-4){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-8){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-12){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-16){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }
}
function adaDecreaseLineHeightlevelindicators(lineheightss){
    var lineheightdrs = parseFloat(lineheightss);
    var lineheightlevelbox = document.getElementById("lineheightincreaselevelbox");
    var lineheightlevelbox2 = document.getElementById("lineheightdecreaselevelbox"); 
    if(lineheightdrs==0){
      if(lineheightlevelbox){
          lineheightlevelbox.innerHTML='';
      }
      if(lineheightlevelbox2){
          lineheightlevelbox2.innerHTML='';
      }
    }else if(lineheightdrs==4){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==8){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==14){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==16){
        if(lineheightlevelbox){
              lineheightlevelbox.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-4){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-8){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-12){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-16){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }else if(lineheightdrs==-20){
        if(lineheightlevelbox2){
              lineheightlevelbox2.innerHTML='<span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span><span class="fontindicaters"></span>';
        }
    }
}

function adaStopAnimations(){
    var disableAnimations = document.getElementById("adaStopAnimations");
    if(disableAnimations){        
        if (hasInnsightAdaClass(body2,'adastopanimations') ) {
            removeInnsightAdaClass(body2, 'adastopanimations');
            removeInnsightAdaClass(disableAnimations, 'adaiconsactive');
            removeInnsightAdaClass(disableAnimations, 'ADA-outer-bor');
            setInnsightAdaCookie('adaStopAnimations',"",-1);
        }else{
            addInnsightAdaClass(body2, 'adastopanimations');
            addInnsightAdaClass(disableAnimations, 'adaiconsactive');
            addInnsightAdaClass(disableAnimations, 'ADA-outer-bor');
            setInnsightAdaCookie('adaStopAnimations', 'adaStopAnimations', 365);
			hidetextColorWheelBox();
            hidetitleColorWheelBox();
        }
    }
}
function adaRemoveImages(){
    var disableImages = document.getElementById("adaRemoveImages");
    if(disableImages){        
        if (hasInnsightAdaClass(body2,'adaremoveallimages') ) {
            removeInnsightAdaClass(body2, 'adaremoveallimages');
            removeInnsightAdaClass(disableImages, 'adaiconsactive');
            removeInnsightAdaClass(disableImages, 'ADA-outer-bor');
            setInnsightAdaCookie('adaRemoveImages',"",-1);
        }else{
            addInnsightAdaClass(body2, 'adaremoveallimages');
            addInnsightAdaClass(disableImages, 'adaiconsactive');
            addInnsightAdaClass(disableImages, 'ADA-outer-bor');
            setInnsightAdaCookie('adaRemoveImages', 'adaRemoveImages', 365);
			hidetextColorWheelBox();
            hidetitleColorWheelBox();
        }
    }
}
function removeactiveadaclassexact(){
  var els = document.getElementsByClassName("adawidget-boxbg");
    for (var i = 0; i < els.length; i++) {        
		if(els[i].getAttribute('id') === 'enablemonocromes' ||  els[i].getAttribute('id') === 'enablegrayscale' || els[i].getAttribute('id')==='enablegrayscale' || els[i].getAttribute('id')==='enablehighcontrast' || els[i].getAttribute('id') === 'enableinvert' || els[i].getAttribute('id')==='enableblackyellow'){
			els[i].classList.remove('adaiconsactive');
			els[i].classList.remove('ADA-outer-bor');
		}
	}
}
function adachangetitlecolor(){
	var enabletextcolor = document.getElementById("changetitlecolor");
    if (hasInnsightAdaClass(body2,'adachangetitlecolor') ) { 
        removeInnsightAdaClass(body2, 'adachangetitlecolor');        
        hidetitleColorWheelBox();
    } else {        
        addInnsightAdaClass(body2, 'adachangetitlecolor');
        showtitleColorWheelBox();        
    }
}
function showtitleColorWheelBox(){
    var adawidgetstextcolorbox = document.getElementById('adawidgetstitlecolorbox');
    adawidgetstextcolorbox.style.display = "block";
	hidetextColorWheelBox();
}
function hidetitleColorWheelBox(){
  /*var x;
  x = adatextfontcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('color');
        } else {
            x[i].style.removeAttribute('color');
        }
  }  */
  removeInnsightAdaClass(body2, 'adachangetitlecolor');  
  var adawidgetstextcolorbox = document.getElementById('adawidgetstitlecolorbox');
  adawidgetstextcolorbox.style.display = "none";
}
function adachangetextcolor(){
	var enabletextcolor = document.getElementById("changetextcolor");
    if (hasInnsightAdaClass(body2,'adachangetextcolor') ) { 
        removeInnsightAdaClass(body2, 'adachangetextcolor');        
        hidetextColorWheelBox();
    } else {        
        addInnsightAdaClass(body2, 'adachangetextcolor');
        showtextColorWheelBox();        
    }
}

function showtextColorWheelBox(){
    var adawidgetstextcolorbox = document.getElementById('adawidgetstextcolorbox');
    adawidgetstextcolorbox.style.display = "block";
	hidetitleColorWheelBox();
}
function hidetextColorWheelBox(){
  /*var x;
  x = adatextfontcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('color');
        } else {
            x[i].style.removeAttribute('color');
        }
  }  */
  removeInnsightAdaClass(body2, 'adachangetextcolor'); 
  var adawidgetstextcolorbox = document.getElementById('adawidgetstextcolorbox');
  adawidgetstextcolorbox.style.display = "none";
}
function adawidgetchangetextcolor(elements){
	var adawidgetstextcolorbox = document.getElementById('adawidgetstextcolorbox');
    var indics = adawidgetstextcolorbox.querySelectorAll(".bcPicker-color");
	var enabletextcolor = document.getElementById("changetextcolor");
  if (hasInnsightAdaClass(elements,'bcPickerActiveada') ) { 
		  var x = adatextfontcolorelements;
		  var l = x.length;
		  for (i = 0; i < l; i++) {
				if (x[i].style.removeProperty) {
					x[i].style.removeProperty('color');
				} else {
					x[i].style.removeAttribute('color');
				}
		  }
		  [].forEach.call(indics, function(indic) {
			indic.classList.remove("bcPickerActiveada");
		  });
		  removeInnsightAdaClass(enabletextcolor, 'adaiconsactive');
          removeInnsightAdaClass(enabletextcolor, 'ADA-outer-bor');
		  setInnsightAdaCookie('adachangetextcolor',"",-1);
		  setInnsightAdaCookie('adatextcolor',"",-1);
  }else{	  
        if(!hasInnsightAdaClass(enabletextcolor,'adaiconsactive') ) { 
			addInnsightAdaClass(enabletextcolor, 'adaiconsactive');
			addInnsightAdaClass(enabletextcolor, 'ADA-outer-bor');        
			setInnsightAdaCookie('adachangetextcolor', 'adachangetextcolor', 365);
		}
	  // loop through each answer-style indicator div
	  [].forEach.call(indics, function(indic) {
		// make each indicator visible
		indic.classList.remove("bcPickerActiveada");
	  });
	  var x = adatextfontcolorelements;
	  var l = x.length;
	  for (i = 0; i < l; i++) {
		x[i].style.color = elements.getAttribute('code');
	  }
	  addInnsightAdaClass(elements, 'bcPickerActiveada');
	  setInnsightAdaCookie('adatextcolor', elements.getAttribute('code'), 365);
  }	  
}
function adawidgetchangeheadcolor(elements){
  var adawidgetstitlecolorbox = document.getElementById('adawidgetstitlecolorbox');
  var indics = adawidgetstitlecolorbox.querySelectorAll(".bcPicker-color");
  var enabletextcolor = document.getElementById("changetitlecolor");
  if (hasInnsightAdaClass(elements,'bcPickerActiveada') ) { 
	var x = adaheadingfontcolorelements;
		  var l = x.length;
		  for (i = 0; i < l; i++) {
				if (x[i].style.removeProperty) {
					x[i].style.removeProperty('color');
				} else {
					x[i].style.removeAttribute('color');
				}
		  }
		  [].forEach.call(indics, function(indic) {
			indic.classList.remove("bcPickerActiveada");
		  });
		  removeInnsightAdaClass(enabletextcolor, 'adaiconsactive');
		  removeInnsightAdaClass(enabletextcolor, 'ADA-outer-bor');
		  setInnsightAdaCookie('adachangetitlecolor',"",-1);
		  setInnsightAdaCookie('adaheadingcolor', "", -1);
  }else{
	  if(!hasInnsightAdaClass(enabletextcolor,'adaiconsactive') ) { 
		  addInnsightAdaClass(enabletextcolor, 'adaiconsactive');
		  addInnsightAdaClass(enabletextcolor, 'ADA-outer-bor');        
		  setInnsightAdaCookie('adachangetitlecolor', 'adachangetitlecolor', 365);
	  }
	   // loop through each answer-style indicator div
	  [].forEach.call(indics, function(indic) {
		// make each indicator visible
		indic.classList.remove("bcPickerActiveada");
	  });
	  var x = adaheadingfontcolorelements;
	  var l = x.length;
	  for (i = 0; i < l; i++) {
		x[i].style.color = elements.getAttribute('code');
	  }
	  addInnsightAdaClass(elements, 'bcPickerActiveada');
	  setInnsightAdaCookie('adaheadingcolor', elements.getAttribute('code'), 365);
  }  
}
function hideTextTitleColorWheelBox(){
var x;  
  x = adaheadingfontcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('color');
        } else {
            x[i].style.removeAttribute('color');
        }
  }
  
  x = adatextfontcolorelements;
  l = x.length;
  for (i = 0; i < l; i++) {
        if (x[i].style.removeProperty) {
            x[i].style.removeProperty('color');
        } else {
            x[i].style.removeAttribute('color');
        }
  }
  
  var testcolors = document.getElementById('adawidgetstextcolorbox');
  var headingcolors = document.getElementById('adawidgetstitlecolorbox');
  testcolors.style.display = "none";
  headingcolors.style.display = "none";
  var indics = testcolors.querySelectorAll(".bcPicker-color");
  [].forEach.call(indics, function(indic) {
    indic.classList.remove("bcPickerActiveada");
  });
  var indics2 = headingcolors.querySelectorAll(".bcPicker-color");
  [].forEach.call(indics2, function(indic1) {
    indic1.classList.remove("bcPickerActiveada");
  });
}
function adaupdatetextcolor(textColor){
  var adawidgetstextcolorbox = document.getElementById('adawidgetstextcolorbox');
  var indics = adawidgetstextcolorbox.querySelectorAll(".bcPicker-color");
  var enabletextcolor = document.getElementById("changetextcolor");
  if(enabletextcolor && textColor!=''){
	  addInnsightAdaClass(enabletextcolor, 'adaiconsactive');
	  addInnsightAdaClass(enabletextcolor, 'ADA-outer-bor');        
	  setInnsightAdaCookie('adachangetextcolor', 'adachangetextcolor', 365);
	  var elements = 0;
	 [].forEach.call(indics, function(indic) {
		if(indic.getAttribute('code')==textColor){
			elements = indic;
		}
	  });
	  
	  var x = adatextfontcolorelements;
	  var l = x.length;
	  for (i = 0; i < l; i++) {
		x[i].style.color = textColor;
	  }
	  if(elements){
	  addInnsightAdaClass(elements, 'bcPickerActiveada');
	  setInnsightAdaCookie('adatextcolor', textColor, 365);
	  }
  }
}
function adaupdateheadingcolor(headcolor){
  var adawidgetstextcolorbox = document.getElementById('adawidgetstitlecolorbox');
  var indics = adawidgetstextcolorbox.querySelectorAll(".bcPicker-color");
  var enabletextcolor = document.getElementById("changetitlecolor");
  if(enabletextcolor && headcolor!=''){
	  addInnsightAdaClass(enabletextcolor, 'adaiconsactive');
	  addInnsightAdaClass(enabletextcolor, 'ADA-outer-bor');        
	  setInnsightAdaCookie('adachangetitlecolor', 'adachangetitlecolor', 365);
	  var elements = 0;
	 [].forEach.call(indics, function(indic) {
		if(indic.getAttribute('code')==headcolor){
			elements = indic;
		}
	  });
	  
	  var x = adaheadingfontcolorelements;
	  var l = x.length;
	  for (i = 0; i < l; i++) {
		x[i].style.color = headcolor;
	  }
	  if(elements){
	  addInnsightAdaClass(elements, 'bcPickerActiveada');
	  setInnsightAdaCookie('adaheadingcolor', headcolor, 365);
	  }
  }
}
var DOMAnimations = {
    
    /**
    * SlideUp
    *
    * @param {HTMLElement} element
    * @param {Number} duration
    * @returns {Promise<boolean>}
    */
    slideUp: function (element, duration = 500) {

        return new Promise(function (resolve, reject) {

            element.style.height = element.offsetHeight + 'px';
            element.style.transitionProperty = `height, margin, padding`;
            element.style.transitionDuration = duration + 'ms';
            element.offsetHeight;
            element.style.overflow = 'hidden';
            element.style.height = 0;
            element.style.paddingTop = 0;
            element.style.paddingBottom = 0;
            element.style.marginTop = 0;
            element.style.marginBottom = 0;
            window.setTimeout(function () {
                element.style.display = 'none';
                element.style.removeProperty('height');
                element.style.removeProperty('padding-top');
                element.style.removeProperty('padding-bottom');
                element.style.removeProperty('margin-top');
                element.style.removeProperty('margin-bottom');
                element.style.removeProperty('overflow');
                element.style.removeProperty('transition-duration');
                element.style.removeProperty('transition-property');
                resolve(false);
            }, duration)
        })
    },

    /**
    * SlideDown
    *
    * @param {HTMLElement} element
    * @param {Number} duration
    * @returns {Promise<boolean>}
    */
    slideDown: function (element, duration = 500) {

        return new Promise(function (resolve, reject) {

            element.style.removeProperty('display');
            let display = window.getComputedStyle(element).display;

            if (display === 'none') 
                display = 'block';

            element.style.display = display;
            let height = element.offsetHeight;
            element.style.overflow = 'hidden';
            element.style.height = 0;
            element.style.paddingTop = 0;
            element.style.paddingBottom = 0;
            element.style.marginTop = 0;
            element.style.marginBottom = 0;
            element.offsetHeight;
            element.style.transitionProperty = `height, margin, padding`;
            element.style.transitionDuration = duration + 'ms';
            element.style.height = height + 'px';
            element.style.removeProperty('padding-top');
            element.style.removeProperty('padding-bottom');
            element.style.removeProperty('margin-top');
            element.style.removeProperty('margin-bottom');
            window.setTimeout(function () {
                element.style.removeProperty('height');
                element.style.removeProperty('overflow');
                element.style.removeProperty('transition-duration');
                element.style.removeProperty('transition-property');
            }, duration)
        })
    },

    /**
    * SlideToggle
    *
    * @param {HTMLElement} element
    * @param {Number} duration
    * @returns {Promise<boolean>}
    */
    slideToggle: function (element, duration = 500) {

        if (window.getComputedStyle(element).display === 'none') {

            return this.slideDown(element, duration);

        } else {

            return this.slideUp(element, duration);
        }
    }
}
setTimeout(function(){
var togglers = document.querySelectorAll('.content_adjust');
    console.log(togglers.length);
    togglers.forEach(function(el) {
      el.addEventListener('click', function(event) {  
        el.querySelector('.arrowdown').classList.toggle("arrowup");
        DOMAnimations.slideToggle(el.nextElementSibling);
      })
    });

},2500);
// ------------------------------------------------------


/*(function($){
        $(window).on("load",function(){
            $(".all_links").mCustomScrollbar({theme:"dark-3"});
        });
    })(jQuery);	
	
(function($){
        $(window).on("load",function(){
            $(".all_links1").mCustomScrollbar({theme:"dark-3"});
        });
    })(jQuery);	*/
